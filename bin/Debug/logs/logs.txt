---------------------------------------------- |> (8/19/2023 7:01:02 PM)
Method; (StartUp) |> (8/19/2023 7:01:02 PM)
method; (PlayerClass.PlayerClass) [Player init], is AI (False) |> (8/19/2023 7:01:07 PM)
method; (PlayerClass.PlayerClass) [Player init], is AI (True) |> (8/19/2023 7:01:07 PM)
method; (AIClass.AIClass()) [AI INIT] |> (8/19/2023 7:01:07 PM)
method; (GameLogicClass.MakeDrawPile) |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 7:01:07 PM)
method; (GameLogicClass.Deal) |> (8/19/2023 7:01:07 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 7:01:07 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 7:01:07 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 7:01:07 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 7:01:07 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 7:01:07 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 7:01:07 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 7:01:07 PM)
method; (GameLogicClass.Deal) |> (8/19/2023 7:01:07 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 7:01:07 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 7:01:07 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 7:01:07 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 7:01:07 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 7:01:07 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 7:01:07 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 7:01:07 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 7:01:07 PM)
method; (GameLogicClass.DisplayDrawPile) [drew stuff] |> (8/19/2023 7:01:07 PM)
method; (GameLogicClass.GameLogicClass) [Game INIT], Gamerules;
    do_DrawtoMatch (False),
    do_Flip (False),
    do_ChianAdds (False),
    do_2v2 (False, teams (1, 1, 3, 4)
    Player Amount (2)
    Card Amount (7)
Player Index; (0), Discard Pile Count; (1), Top Card; (uno.CardClass) |> (8/19/2023 7:01:07 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 7:01:07 PM)
method; (CardClass.SetPBLocation), x, y; (770, 945) |> (8/19/2023 7:01:07 PM)
method; (CardClass.SetPBLocation), x, y; (825, 945) |> (8/19/2023 7:01:07 PM)
method; (CardClass.SetPBLocation), x, y; (880, 945) |> (8/19/2023 7:01:07 PM)
method; (CardClass.SetPBLocation), x, y; (935, 945) |> (8/19/2023 7:01:07 PM)
method; (CardClass.SetPBLocation), x, y; (990, 945) |> (8/19/2023 7:01:07 PM)
method; (CardClass.SetPBLocation), x, y; (1045, 945) |> (8/19/2023 7:01:07 PM)
method; (CardClass.SetPBLocation), x, y; (1100, 945) |> (8/19/2023 7:01:07 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (1100, 1100) |> (8/19/2023 7:01:07 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 7:01:07 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 7:01:07 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 7:01:07 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 7:01:07 PM)
method; (CardClass.SetPBLocation), x, y; (770, 5) |> (8/19/2023 7:01:07 PM)
method; (CardClass.SetPBLocation), x, y; (825, 5) |> (8/19/2023 7:01:07 PM)
method; (CardClass.SetPBLocation), x, y; (880, 5) |> (8/19/2023 7:01:07 PM)
method; (CardClass.SetPBLocation), x, y; (935, 5) |> (8/19/2023 7:01:07 PM)
method; (CardClass.SetPBLocation), x, y; (990, 5) |> (8/19/2023 7:01:07 PM)
method; (CardClass.SetPBLocation), x, y; (1045, 5) |> (8/19/2023 7:01:07 PM)
method; (CardClass.SetPBLocation), x, y; (1100, 5) |> (8/19/2023 7:01:07 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (1100, 1100) |> (8/19/2023 7:01:07 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 7:01:07 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 7:01:07 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 7:01:07 PM)
method; (PlayerClass.ActivateClick) |> (8/19/2023 7:01:07 PM)
method; (GameLogicClass.DisplayDiscardPile) |> (8/19/2023 7:01:07 PM)
method; (GameLogicClass.DisplayDrawPile) [nothing to do] |> (8/19/2023 7:01:07 PM)
method; (GameLogicClass.GameLogicClass) [Game INIT], Gamerules;
    is_Flipped (False),
    is_Reverced (False),
    PlayerIndex (0, card amount 7),
    PlusAmount (0)
Discard Pile Count; (1), Top Card; (blue, 1) |> (8/19/2023 7:01:07 PM)
method; (GameLogicClass.FindPictureInList) |> (8/19/2023 7:01:09 PM)
method; (GameLogicClass.cardPB_Click), Card Index (2) |> (8/19/2023 7:01:09 PM)
method; (GameLogicClass.CardPlay), c_card; (blue) (2), error |> (8/19/2023 7:01:09 PM)
method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1 |> (8/19/2023 7:01:09 PM)
method; (GameLogicClass.AddLogic) |> (8/19/2023 7:01:09 PM)
method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1 |> (8/19/2023 7:01:09 PM)
method; (GameLogicClass.CardClickLogic), Card Index; (2), Top Deck (blue, 2), Player Index (1) |> (8/19/2023 7:01:09 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 7:01:09 PM)
method; (CardClass.SetPBLocation), x, y; (795, 945) |> (8/19/2023 7:01:09 PM)
method; (CardClass.SetPBLocation), x, y; (850, 945) |> (8/19/2023 7:01:09 PM)
method; (CardClass.SetPBLocation), x, y; (905, 945) |> (8/19/2023 7:01:09 PM)
method; (CardClass.SetPBLocation), x, y; (960, 945) |> (8/19/2023 7:01:09 PM)
method; (CardClass.SetPBLocation), x, y; (1015, 945) |> (8/19/2023 7:01:09 PM)
method; (CardClass.SetPBLocation), x, y; (1070, 945) |> (8/19/2023 7:01:09 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (1070, 1070) |> (8/19/2023 7:01:09 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 7:01:09 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 7:01:09 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 7:01:09 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 7:01:09 PM)
method; (CardClass.SetPBLocation), x, y; (770, 5) |> (8/19/2023 7:01:09 PM)
method; (CardClass.SetPBLocation), x, y; (825, 5) |> (8/19/2023 7:01:09 PM)
method; (CardClass.SetPBLocation), x, y; (880, 5) |> (8/19/2023 7:01:09 PM)
method; (CardClass.SetPBLocation), x, y; (935, 5) |> (8/19/2023 7:01:09 PM)
method; (CardClass.SetPBLocation), x, y; (990, 5) |> (8/19/2023 7:01:09 PM)
method; (CardClass.SetPBLocation), x, y; (1045, 5) |> (8/19/2023 7:01:09 PM)
method; (CardClass.SetPBLocation), x, y; (1100, 5) |> (8/19/2023 7:01:09 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (1100, 1100) |> (8/19/2023 7:01:09 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 7:01:10 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 7:01:10 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 7:01:10 PM)
method; (PlayerClass.ActivateClick) |> (8/19/2023 7:01:10 PM)
method; (GameLogicClass.DisplayDiscardPile) |> (8/19/2023 7:01:10 PM)
method; (GameLogicClass.DisplayDrawPile) [nothing to do] |> (8/19/2023 7:01:10 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 7:01:10 PM)
method; (GameLogicClass.FindPictureInList) |> (8/19/2023 7:01:10 PM)
Method; (AIClass.Play()) [AI Play], Current player; (uno.PlayerClass), Player e_Hand amount; (5), Card index; (0), Card (e_Hand); (uno.CardClass), game.is_Flipped; (False); Card (Hand); 0 |> (8/19/2023 7:01:10 PM)
method; (GameLogicClass.FindPictureInList) |> (8/19/2023 7:01:10 PM)
method; (GameLogicClass.CardPlay), c_card; (red) (+4_wild), add, 4 |> (8/19/2023 7:01:13 PM)
method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0 |> (8/19/2023 7:01:13 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 7:01:13 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 7:01:13 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 7:01:13 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 7:01:13 PM)
method; (GameLogicClass.AddCards), cards added; (AddCards Index: 0 AddCards Index: 0 AddCards Index: 0 AddCards Index: 0 ) |> (8/19/2023 7:01:13 PM)
method; (GameLogicClass.AddLogic) |> (8/19/2023 7:01:13 PM)
method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0 |> (8/19/2023 7:01:13 PM)
method; (GameLogicClass.CardClickLogic), Card Index; (0), Top Deck (red, +4_wild), Player Index (0) |> (8/19/2023 7:01:13 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 7:01:13 PM)
method; (CardClass.SetPBLocation), x, y; (685, 945) |> (8/19/2023 7:01:13 PM)
method; (CardClass.SetPBLocation), x, y; (740, 945) |> (8/19/2023 7:01:13 PM)
method; (CardClass.SetPBLocation), x, y; (795, 945) |> (8/19/2023 7:01:13 PM)
method; (CardClass.SetPBLocation), x, y; (850, 945) |> (8/19/2023 7:01:13 PM)
method; (CardClass.SetPBLocation), x, y; (905, 945) |> (8/19/2023 7:01:13 PM)
method; (CardClass.SetPBLocation), x, y; (960, 945) |> (8/19/2023 7:01:13 PM)
method; (CardClass.SetPBLocation), x, y; (1015, 945) |> (8/19/2023 7:01:13 PM)
method; (CardClass.SetPBLocation), x, y; (1070, 945) |> (8/19/2023 7:01:13 PM)
method; (CardClass.SetPBLocation), x, y; (1125, 945) |> (8/19/2023 7:01:13 PM)
method; (CardClass.SetPBLocation), x, y; (1180, 945) |> (8/19/2023 7:01:13 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (1180, 1180) |> (8/19/2023 7:01:13 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 7:01:13 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 7:01:13 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 7:01:13 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 7:01:13 PM)
method; (CardClass.SetPBLocation), x, y; (795, 5) |> (8/19/2023 7:01:13 PM)
method; (CardClass.SetPBLocation), x, y; (850, 5) |> (8/19/2023 7:01:13 PM)
method; (CardClass.SetPBLocation), x, y; (905, 5) |> (8/19/2023 7:01:13 PM)
method; (CardClass.SetPBLocation), x, y; (960, 5) |> (8/19/2023 7:01:13 PM)
method; (CardClass.SetPBLocation), x, y; (1015, 5) |> (8/19/2023 7:01:13 PM)
method; (CardClass.SetPBLocation), x, y; (1070, 5) |> (8/19/2023 7:01:13 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (1070, 1070) |> (8/19/2023 7:01:13 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 7:01:13 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 7:01:13 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 7:01:13 PM)
method; (PlayerClass.ActivateClick) |> (8/19/2023 7:01:13 PM)
method; (GameLogicClass.DisplayDiscardPile) |> (8/19/2023 7:01:13 PM)
method; (GameLogicClass.DisplayDrawPile) [nothing to do] |> (8/19/2023 7:01:13 PM)
method; (GameLogicClass.GameLogicClass) [Game INIT], Gamerules;
    is_Flipped (False),
    is_Reverced (False),
    PlayerIndex (0, card amount 10),
    PlusAmount (0)
Discard Pile Count; (3), Top Card; (red, +4_wild) |> (8/19/2023 7:01:13 PM)
method; (GameLogicClass.GameLogicClass) [Game INIT], Gamerules;
    is_Flipped (False),
    is_Reverced (False),
    PlayerIndex (0, card amount 10),
    PlusAmount (0)
Discard Pile Count; (3), Top Card; (red, +4_wild) |> (8/19/2023 7:01:13 PM)
method; (GameLogicClass.FindPictureInList) |> (8/19/2023 7:01:17 PM)
method; (GameLogicClass.cardPB_Click), Card Index (1) |> (8/19/2023 7:01:17 PM)
method; (GameLogicClass.CardPlay), c_card; (red) (8), error |> (8/19/2023 7:01:17 PM)
method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1 |> (8/19/2023 7:01:17 PM)
method; (GameLogicClass.AddLogic) |> (8/19/2023 7:01:17 PM)
method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1 |> (8/19/2023 7:01:17 PM)
method; (GameLogicClass.CardClickLogic), Card Index; (1), Top Deck (red, 8), Player Index (1) |> (8/19/2023 7:01:17 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 7:01:17 PM)
method; (CardClass.SetPBLocation), x, y; (715, 945) |> (8/19/2023 7:01:17 PM)
method; (CardClass.SetPBLocation), x, y; (770, 945) |> (8/19/2023 7:01:17 PM)
method; (CardClass.SetPBLocation), x, y; (825, 945) |> (8/19/2023 7:01:17 PM)
method; (CardClass.SetPBLocation), x, y; (880, 945) |> (8/19/2023 7:01:17 PM)
method; (CardClass.SetPBLocation), x, y; (935, 945) |> (8/19/2023 7:01:17 PM)
method; (CardClass.SetPBLocation), x, y; (990, 945) |> (8/19/2023 7:01:17 PM)
method; (CardClass.SetPBLocation), x, y; (1045, 945) |> (8/19/2023 7:01:17 PM)
method; (CardClass.SetPBLocation), x, y; (1100, 945) |> (8/19/2023 7:01:17 PM)
method; (CardClass.SetPBLocation), x, y; (1155, 945) |> (8/19/2023 7:01:17 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (1155, 1155) |> (8/19/2023 7:01:17 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 7:01:17 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 7:01:17 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 7:01:17 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 7:01:17 PM)
method; (CardClass.SetPBLocation), x, y; (795, 5) |> (8/19/2023 7:01:17 PM)
method; (CardClass.SetPBLocation), x, y; (850, 5) |> (8/19/2023 7:01:17 PM)
method; (CardClass.SetPBLocation), x, y; (905, 5) |> (8/19/2023 7:01:17 PM)
method; (CardClass.SetPBLocation), x, y; (960, 5) |> (8/19/2023 7:01:17 PM)
method; (CardClass.SetPBLocation), x, y; (1015, 5) |> (8/19/2023 7:01:17 PM)
method; (CardClass.SetPBLocation), x, y; (1070, 5) |> (8/19/2023 7:01:17 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (1070, 1070) |> (8/19/2023 7:01:17 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 7:01:17 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 7:01:17 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 7:01:17 PM)
method; (PlayerClass.ActivateClick) |> (8/19/2023 7:01:17 PM)
method; (GameLogicClass.DisplayDiscardPile) |> (8/19/2023 7:01:17 PM)
method; (GameLogicClass.DisplayDrawPile) [nothing to do] |> (8/19/2023 7:01:17 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 7:01:17 PM)
method; (GameLogicClass.FindPictureInList) |> (8/19/2023 7:01:17 PM)
Method; (AIClass.Play()) [AI Play], Current player; (uno.PlayerClass), Player e_Hand amount; (1), Card index; (0), Card (e_Hand); (uno.CardClass), game.is_Flipped; (False); Card (Hand); 4 |> (8/19/2023 7:01:17 PM)
method; (GameLogicClass.FindPictureInList) |> (8/19/2023 7:01:17 PM)
method; (GameLogicClass.CardPlay), c_card; (yellow) (8), error |> (8/19/2023 7:01:17 PM)
method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0 |> (8/19/2023 7:01:17 PM)
method; (GameLogicClass.AddLogic) |> (8/19/2023 7:01:17 PM)
method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0 |> (8/19/2023 7:01:17 PM)
method; (GameLogicClass.CardClickLogic), Card Index; (4), Top Deck (yellow, 8), Player Index (0) |> (8/19/2023 7:01:17 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 7:01:17 PM)
method; (CardClass.SetPBLocation), x, y; (715, 945) |> (8/19/2023 7:01:17 PM)
method; (CardClass.SetPBLocation), x, y; (770, 945) |> (8/19/2023 7:01:17 PM)
method; (CardClass.SetPBLocation), x, y; (825, 945) |> (8/19/2023 7:01:17 PM)
method; (CardClass.SetPBLocation), x, y; (880, 945) |> (8/19/2023 7:01:17 PM)
method; (CardClass.SetPBLocation), x, y; (935, 945) |> (8/19/2023 7:01:17 PM)
method; (CardClass.SetPBLocation), x, y; (990, 945) |> (8/19/2023 7:01:17 PM)
method; (CardClass.SetPBLocation), x, y; (1045, 945) |> (8/19/2023 7:01:17 PM)
method; (CardClass.SetPBLocation), x, y; (1100, 945) |> (8/19/2023 7:01:17 PM)
method; (CardClass.SetPBLocation), x, y; (1155, 945) |> (8/19/2023 7:01:17 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (1155, 1155) |> (8/19/2023 7:01:17 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 7:01:17 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 7:01:17 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 7:01:17 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 7:01:17 PM)
method; (CardClass.SetPBLocation), x, y; (825, 5) |> (8/19/2023 7:01:17 PM)
method; (CardClass.SetPBLocation), x, y; (880, 5) |> (8/19/2023 7:01:17 PM)
method; (CardClass.SetPBLocation), x, y; (935, 5) |> (8/19/2023 7:01:17 PM)
method; (CardClass.SetPBLocation), x, y; (990, 5) |> (8/19/2023 7:01:17 PM)
method; (CardClass.SetPBLocation), x, y; (1045, 5) |> (8/19/2023 7:01:17 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (1045, 1045) |> (8/19/2023 7:01:17 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 7:01:17 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 7:01:17 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 7:01:17 PM)
method; (PlayerClass.ActivateClick) |> (8/19/2023 7:01:17 PM)
method; (GameLogicClass.DisplayDiscardPile) |> (8/19/2023 7:01:17 PM)
method; (GameLogicClass.DisplayDrawPile) [nothing to do] |> (8/19/2023 7:01:17 PM)
method; (GameLogicClass.GameLogicClass) [Game INIT], Gamerules;
    is_Flipped (False),
    is_Reverced (False),
    PlayerIndex (0, card amount 9),
    PlusAmount (0)
Discard Pile Count; (5), Top Card; (yellow, 8) |> (8/19/2023 7:01:17 PM)
method; (GameLogicClass.GameLogicClass) [Game INIT], Gamerules;
    is_Flipped (False),
    is_Reverced (False),
    PlayerIndex (0, card amount 9),
    PlusAmount (0)
Discard Pile Count; (5), Top Card; (yellow, 8) |> (8/19/2023 7:01:17 PM)
method; (GameLogicClass.FindPictureInList) |> (8/19/2023 7:01:21 PM)
method; (GameLogicClass.cardPB_Click), Card Index (8) |> (8/19/2023 7:01:21 PM)
method; (GameLogicClass.CardPlay), c_card; (yellow) (6), error |> (8/19/2023 7:01:21 PM)
method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1 |> (8/19/2023 7:01:21 PM)
method; (GameLogicClass.AddLogic) |> (8/19/2023 7:01:21 PM)
method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1 |> (8/19/2023 7:01:21 PM)
method; (GameLogicClass.CardClickLogic), Card Index; (8), Top Deck (yellow, 6), Player Index (1) |> (8/19/2023 7:01:21 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 7:01:21 PM)
method; (CardClass.SetPBLocation), x, y; (740, 945) |> (8/19/2023 7:01:21 PM)
method; (CardClass.SetPBLocation), x, y; (795, 945) |> (8/19/2023 7:01:21 PM)
method; (CardClass.SetPBLocation), x, y; (850, 945) |> (8/19/2023 7:01:21 PM)
method; (CardClass.SetPBLocation), x, y; (905, 945) |> (8/19/2023 7:01:21 PM)
method; (CardClass.SetPBLocation), x, y; (960, 945) |> (8/19/2023 7:01:21 PM)
method; (CardClass.SetPBLocation), x, y; (1015, 945) |> (8/19/2023 7:01:21 PM)
method; (CardClass.SetPBLocation), x, y; (1070, 945) |> (8/19/2023 7:01:21 PM)
method; (CardClass.SetPBLocation), x, y; (1125, 945) |> (8/19/2023 7:01:22 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (1125, 1125) |> (8/19/2023 7:01:22 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 7:01:22 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 7:01:22 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 7:01:22 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 7:01:22 PM)
method; (CardClass.SetPBLocation), x, y; (825, 5) |> (8/19/2023 7:01:22 PM)
method; (CardClass.SetPBLocation), x, y; (880, 5) |> (8/19/2023 7:01:22 PM)
method; (CardClass.SetPBLocation), x, y; (935, 5) |> (8/19/2023 7:01:22 PM)
method; (CardClass.SetPBLocation), x, y; (990, 5) |> (8/19/2023 7:01:22 PM)
method; (CardClass.SetPBLocation), x, y; (1045, 5) |> (8/19/2023 7:01:22 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (1045, 1045) |> (8/19/2023 7:01:22 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 7:01:22 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 7:01:22 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 7:01:22 PM)
method; (PlayerClass.ActivateClick) |> (8/19/2023 7:01:22 PM)
method; (GameLogicClass.DisplayDiscardPile) |> (8/19/2023 7:01:22 PM)
method; (GameLogicClass.DisplayDrawPile) [nothing to do] |> (8/19/2023 7:01:22 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 7:01:22 PM)
method; (GameLogicClass.FindPictureInList) |> (8/19/2023 7:01:22 PM)
Method; (AIClass.Play()) [AI Play], Current player; (uno.PlayerClass), Player e_Hand amount; (1), Card index; (0), Card (e_Hand); (uno.CardClass), game.is_Flipped; (False); Card (Hand); 0 |> (8/19/2023 7:01:22 PM)
method; (GameLogicClass.FindPictureInList) |> (8/19/2023 7:01:22 PM)
method; (GameLogicClass.CardPlay), c_card; (yellow) (9), error |> (8/19/2023 7:01:22 PM)
method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0 |> (8/19/2023 7:01:22 PM)
method; (GameLogicClass.AddLogic) |> (8/19/2023 7:01:22 PM)
method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0 |> (8/19/2023 7:01:22 PM)
method; (GameLogicClass.CardClickLogic), Card Index; (0), Top Deck (yellow, 9), Player Index (0) |> (8/19/2023 7:01:22 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 7:01:22 PM)
method; (CardClass.SetPBLocation), x, y; (740, 945) |> (8/19/2023 7:01:22 PM)
method; (CardClass.SetPBLocation), x, y; (795, 945) |> (8/19/2023 7:01:22 PM)
method; (CardClass.SetPBLocation), x, y; (850, 945) |> (8/19/2023 7:01:22 PM)
method; (CardClass.SetPBLocation), x, y; (905, 945) |> (8/19/2023 7:01:22 PM)
method; (CardClass.SetPBLocation), x, y; (960, 945) |> (8/19/2023 7:01:22 PM)
method; (CardClass.SetPBLocation), x, y; (1015, 945) |> (8/19/2023 7:01:22 PM)
method; (CardClass.SetPBLocation), x, y; (1070, 945) |> (8/19/2023 7:01:22 PM)
method; (CardClass.SetPBLocation), x, y; (1125, 945) |> (8/19/2023 7:01:22 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (1125, 1125) |> (8/19/2023 7:01:22 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 7:01:22 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 7:01:22 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 7:01:22 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 7:01:22 PM)
method; (CardClass.SetPBLocation), x, y; (850, 5) |> (8/19/2023 7:01:22 PM)
method; (CardClass.SetPBLocation), x, y; (905, 5) |> (8/19/2023 7:01:22 PM)
method; (CardClass.SetPBLocation), x, y; (960, 5) |> (8/19/2023 7:01:22 PM)
method; (CardClass.SetPBLocation), x, y; (1015, 5) |> (8/19/2023 7:01:22 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (1015, 1015) |> (8/19/2023 7:01:22 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 7:01:22 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 7:01:22 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 7:01:22 PM)
method; (PlayerClass.ActivateClick) |> (8/19/2023 7:01:22 PM)
method; (GameLogicClass.DisplayDiscardPile) |> (8/19/2023 7:01:22 PM)
method; (GameLogicClass.DisplayDrawPile) [nothing to do] |> (8/19/2023 7:01:22 PM)
method; (GameLogicClass.GameLogicClass) [Game INIT], Gamerules;
    is_Flipped (False),
    is_Reverced (False),
    PlayerIndex (0, card amount 8),
    PlusAmount (0)
Discard Pile Count; (7), Top Card; (yellow, 9) |> (8/19/2023 7:01:22 PM)
method; (GameLogicClass.GameLogicClass) [Game INIT], Gamerules;
    is_Flipped (False),
    is_Reverced (False),
    PlayerIndex (0, card amount 8),
    PlusAmount (0)
Discard Pile Count; (7), Top Card; (yellow, 9) |> (8/19/2023 7:01:22 PM)
