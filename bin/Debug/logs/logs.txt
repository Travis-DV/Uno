(11/26/2023 11:48:18 PM) |> ----------------------------------------------
(11/26/2023 11:48:18 PM) |> Method; (SetupFormClass.SetupFormClass) [Start Up]
(11/26/2023 11:48:24 PM) |> method; (SetupFormClass.twoPlayersBT_Click) [2v2; false, PlayerAmount = 2]
(11/26/2023 11:50:37 PM) |> ----------------------------------------------
(11/26/2023 11:50:37 PM) |> Method; (SetupFormClass.SetupFormClass) [Start Up]
(11/26/2023 11:50:43 PM) |> method; (SetupFormClass.twoPlayersBT_Click) [2v2; false, PlayerAmount = 2]
(11/26/2023 11:50:44 PM) |> method; (SetupFormClass.doneBT_Click)
(11/26/2023 11:50:44 PM) |> method; (Form_PauseMenu.Form_PauseMenu)
(11/26/2023 11:50:44 PM) |> method; (GameForm.GameForm), Width: (1440), Height; (870), Size; ({Width=1440, Height=870})
(11/26/2023 11:50:44 PM) |> method; (PlayerClass.PlayerClass) [Player init], is AI (False), Team; (1)
(11/26/2023 11:50:44 PM) |> method; (AIClass.AIClass()) [AI INIT]
(11/26/2023 11:50:44 PM) |> method; (PlayerClass.PlayerClass) [Player init], is AI (True), Team; (1)
(11/26/2023 11:50:44 PM) |> method; (GameLogicClass.MakeDrawPile)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (0),
    NormalPoints; (0),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_0.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (1),
    NormalPoints; (1),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_1.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (2),
    NormalPoints; (2),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_2.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (3),
    NormalPoints; (3),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_3.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (4),
    NormalPoints; (4),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_4.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (5),
    NormalPoints; (5),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_5.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (6),
    NormalPoints; (6),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_6.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (7),
    NormalPoints; (7),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_7.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (8),
    NormalPoints; (8),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_8.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (9),
    NormalPoints; (9),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_9.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (+),
    NormalPoints; (10),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_+2.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (r),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_reverse.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (s),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_skip.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (0),
    NormalPoints; (0),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_0.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (1),
    NormalPoints; (1),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_1.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (2),
    NormalPoints; (2),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_2.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (3),
    NormalPoints; (3),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_3.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (4),
    NormalPoints; (4),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_4.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (5),
    NormalPoints; (5),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_5.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (6),
    NormalPoints; (6),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_6.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (7),
    NormalPoints; (7),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_7.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (8),
    NormalPoints; (8),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_8.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (9),
    NormalPoints; (9),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_9.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (+),
    NormalPoints; (10),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_+2.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (r),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_reverse.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (s),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_skip.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (0),
    NormalPoints; (0),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_0.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (1),
    NormalPoints; (1),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_1.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (2),
    NormalPoints; (2),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_2.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (3),
    NormalPoints; (3),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_3.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (4),
    NormalPoints; (4),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_4.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (5),
    NormalPoints; (5),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_5.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (6),
    NormalPoints; (6),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_6.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (7),
    NormalPoints; (7),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_7.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (8),
    NormalPoints; (8),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_8.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (9),
    NormalPoints; (9),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_9.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (+),
    NormalPoints; (10),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_+2.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (r),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_reverse.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (s),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_skip.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (0),
    NormalPoints; (0),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_0.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (1),
    NormalPoints; (1),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_1.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (2),
    NormalPoints; (2),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_2.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (3),
    NormalPoints; (3),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_3.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (4),
    NormalPoints; (4),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_4.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (5),
    NormalPoints; (5),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_5.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (6),
    NormalPoints; (6),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_6.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (7),
    NormalPoints; (7),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_7.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (8),
    NormalPoints; (8),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_8.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (9),
    NormalPoints; (9),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_9.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (+),
    NormalPoints; (10),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_+2.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (r),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_reverse.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (s),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_skip.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (1),
    NormalPoints; (1),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_1.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (2),
    NormalPoints; (2),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_2.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (3),
    NormalPoints; (3),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_3.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (4),
    NormalPoints; (4),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_4.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (5),
    NormalPoints; (5),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_5.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (6),
    NormalPoints; (6),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_6.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (7),
    NormalPoints; (7),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_7.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (8),
    NormalPoints; (8),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_8.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (9),
    NormalPoints; (9),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_9.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (+),
    NormalPoints; (10),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_+2.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (r),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_reverse.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (s),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_skip.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (1),
    NormalPoints; (1),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_1.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (2),
    NormalPoints; (2),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_2.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (3),
    NormalPoints; (3),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_3.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (4),
    NormalPoints; (4),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_4.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (5),
    NormalPoints; (5),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_5.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (6),
    NormalPoints; (6),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_6.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (7),
    NormalPoints; (7),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_7.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (8),
    NormalPoints; (8),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_8.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (9),
    NormalPoints; (9),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_9.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (+),
    NormalPoints; (10),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_+2.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (r),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_reverse.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (s),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_skip.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (1),
    NormalPoints; (1),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_1.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (2),
    NormalPoints; (2),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_2.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (3),
    NormalPoints; (3),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_3.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (4),
    NormalPoints; (4),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_4.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (5),
    NormalPoints; (5),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_5.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (6),
    NormalPoints; (6),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_6.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (7),
    NormalPoints; (7),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_7.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (8),
    NormalPoints; (8),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_8.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (9),
    NormalPoints; (9),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_9.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (+),
    NormalPoints; (10),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_+2.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (r),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_reverse.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (s),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_skip.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (1),
    NormalPoints; (1),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_1.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (2),
    NormalPoints; (2),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_2.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (3),
    NormalPoints; (3),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_3.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (4),
    NormalPoints; (4),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_4.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (5),
    NormalPoints; (5),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_5.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (6),
    NormalPoints; (6),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_6.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (7),
    NormalPoints; (7),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_7.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (8),
    NormalPoints; (8),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_8.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (9),
    NormalPoints; (9),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_9.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (+),
    NormalPoints; (10),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_+2.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (r),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_reverse.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (s),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_skip.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (w),
    NormalNumber; (+),
    NormalPoints; (50),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\wild_+4_wild.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (w),
    NormalNumber; (+),
    NormalPoints; (50),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\wild_+4_wild.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (w),
    NormalNumber; (+),
    NormalPoints; (50),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\wild_+4_wild.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (w),
    NormalNumber; (+),
    NormalPoints; (50),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\wild_+4_wild.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (w),
    NormalNumber; (w),
    NormalPoints; (40),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\wild_wild.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (w),
    NormalNumber; (w),
    NormalPoints; (40),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\wild_wild.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (w),
    NormalNumber; (w),
    NormalPoints; (40),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\wild_wild.png)
(11/26/2023 11:50:44 PM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (w),
    NormalNumber; (w),
    NormalPoints; (40),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\wild_wild.png)
(11/26/2023 11:50:44 PM) |> method; (GameLogicClass.Deal)
(11/26/2023 11:50:44 PM) |> method; (GameLogicClass.CardClass)
(11/26/2023 11:50:44 PM) |> method; (RandomNumber.Between), Between; (min: 0, max: 107), Value; (93)
(11/26/2023 11:50:44 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:50:44 PM) |> method; (GameLogicClass.CardClass)
(11/26/2023 11:50:44 PM) |> method; (RandomNumber.Between), Between; (min: 0, max: 106), Value; (23)
(11/26/2023 11:50:44 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:50:44 PM) |> method; (GameLogicClass.CardClass)
(11/26/2023 11:50:44 PM) |> method; (RandomNumber.Between), Between; (min: 0, max: 105), Value; (2)
(11/26/2023 11:50:44 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:50:44 PM) |> method; (GameLogicClass.CardClass)
(11/26/2023 11:50:44 PM) |> method; (RandomNumber.Between), Between; (min: 0, max: 104), Value; (56)
(11/26/2023 11:50:44 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:50:44 PM) |> method; (GameLogicClass.CardClass)
(11/26/2023 11:50:44 PM) |> method; (RandomNumber.Between), Between; (min: 0, max: 103), Value; (5)
(11/26/2023 11:50:44 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:50:44 PM) |> method; (GameLogicClass.CardClass)
(11/26/2023 11:50:44 PM) |> method; (RandomNumber.Between), Between; (min: 0, max: 102), Value; (81)
(11/26/2023 11:50:44 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:50:44 PM) |> method; (GameLogicClass.CardClass)
(11/26/2023 11:50:44 PM) |> method; (RandomNumber.Between), Between; (min: 0, max: 101), Value; (43)
(11/26/2023 11:50:44 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:50:44 PM) |> method; (GameLogicClass.Deal)
(11/26/2023 11:50:44 PM) |> method; (GameLogicClass.CardClass)
(11/26/2023 11:50:44 PM) |> method; (RandomNumber.Between), Between; (min: 0, max: 100), Value; (86)
(11/26/2023 11:50:44 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:50:44 PM) |> method; (GameLogicClass.CardClass)
(11/26/2023 11:50:44 PM) |> method; (RandomNumber.Between), Between; (min: 0, max: 99), Value; (21)
(11/26/2023 11:50:44 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:50:44 PM) |> method; (GameLogicClass.CardClass)
(11/26/2023 11:50:44 PM) |> method; (RandomNumber.Between), Between; (min: 0, max: 98), Value; (96)
(11/26/2023 11:50:44 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:50:44 PM) |> method; (GameLogicClass.CardClass)
(11/26/2023 11:50:44 PM) |> method; (RandomNumber.Between), Between; (min: 0, max: 97), Value; (94)
(11/26/2023 11:50:44 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:50:44 PM) |> method; (GameLogicClass.CardClass)
(11/26/2023 11:50:44 PM) |> method; (RandomNumber.Between), Between; (min: 0, max: 96), Value; (81)
(11/26/2023 11:50:44 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:50:44 PM) |> method; (GameLogicClass.CardClass)
(11/26/2023 11:50:44 PM) |> method; (RandomNumber.Between), Between; (min: 0, max: 95), Value; (24)
(11/26/2023 11:50:44 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:50:44 PM) |> method; (GameLogicClass.CardClass)
(11/26/2023 11:50:44 PM) |> method; (RandomNumber.Between), Between; (min: 0, max: 94), Value; (22)
(11/26/2023 11:50:44 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:50:44 PM) |> method; (GameLogicClass.CardClass)
(11/26/2023 11:50:44 PM) |> method; (RandomNumber.Between), Between; (min: 0, max: 93), Value; (6)
(11/26/2023 11:50:44 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:50:44 PM) |> method; (GameLogicClass.DisplayDrawPile) [drew stuff]
(11/26/2023 11:50:44 PM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], Gamerules;
    do_DrawtoMatch (False),
    do_Flip (False),
    do_ChianAdds (False),
    do_2v2 (False, teams (1, 1, 3, 4)
    Player Amount (2)
    Card Amount (7)
Player Index; (0), Discard Pile Count; (1), Top Card; (System.Drawing.Bitmap)
(11/26/2023 11:50:44 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:50:44 PM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/26/2023 11:50:44 PM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/26/2023 11:50:44 PM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/26/2023 11:50:44 PM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/26/2023 11:50:44 PM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/26/2023 11:50:44 PM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/26/2023 11:50:44 PM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/26/2023 11:50:44 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/26/2023 11:50:44 PM) |> method; (PlayerClass.UpdatePoints) [48]
(11/26/2023 11:50:44 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:50:44 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 8)
(11/26/2023 11:50:44 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:50:44 PM) |> method; (CardClass.SetPBLocation), x, y; (530, 5)
(11/26/2023 11:50:44 PM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/26/2023 11:50:44 PM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/26/2023 11:50:44 PM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/26/2023 11:50:44 PM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/26/2023 11:50:44 PM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/26/2023 11:50:44 PM) |> method; (CardClass.SetPBLocation), x, y; (860, 5)
(11/26/2023 11:50:44 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/26/2023 11:50:44 PM) |> method; (PlayerClass.UpdatePoints) [118]
(11/26/2023 11:50:44 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:50:44 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 8)
(11/26/2023 11:50:44 PM) |> method; (PlayerClass.ActivateClick)
(11/26/2023 11:50:44 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-1)
(11/26/2023 11:50:44 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-3)
(11/26/2023 11:50:44 PM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (1), Added; (red 8; 8 Points)
(11/26/2023 11:50:44 PM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/26/2023 11:50:44 PM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (7)
Player1CardCount; (7)

    PlusAmount (0)
Discard Pile Count; (1), Top Card; (red, 8)
(11/26/2023 11:50:46 PM) |> method; (GameLogicClass.FindPictureInList), Card Index; (3)
(11/26/2023 11:50:46 PM) |> method; (GameLogicClass.cardPB_Click), Card Index (3)
(11/26/2023 11:50:46 PM) |> method; (GameLogicClass.CardPlay), c_card; (red) (7), error
(11/26/2023 11:50:46 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:50:46 PM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/26/2023 11:50:46 PM) |> method; (GameLogicClass.AddLogic)
(11/26/2023 11:50:46 PM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/26/2023 11:50:46 PM) |> method; (GameLogicClass.CardClickLogic), Card Index; (3), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 7), Player Index (1)
(11/26/2023 11:50:46 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:50:46 PM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/26/2023 11:50:46 PM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/26/2023 11:50:46 PM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/26/2023 11:50:46 PM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/26/2023 11:50:46 PM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/26/2023 11:50:46 PM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/26/2023 11:50:46 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/26/2023 11:50:46 PM) |> method; (PlayerClass.UpdatePoints) [89]
(11/26/2023 11:50:46 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:50:46 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 7)
(11/26/2023 11:50:46 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:50:46 PM) |> method; (CardClass.SetPBLocation), x, y; (530, 5)
(11/26/2023 11:50:46 PM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/26/2023 11:50:46 PM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/26/2023 11:50:46 PM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/26/2023 11:50:46 PM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/26/2023 11:50:46 PM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/26/2023 11:50:46 PM) |> method; (CardClass.SetPBLocation), x, y; (860, 5)
(11/26/2023 11:50:46 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/26/2023 11:50:46 PM) |> method; (PlayerClass.UpdatePoints) [236]
(11/26/2023 11:50:46 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:50:46 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 7)
(11/26/2023 11:50:46 PM) |> method; (PlayerClass.ActivateClick)
(11/26/2023 11:50:46 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-9)
(11/26/2023 11:50:46 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-6)
(11/26/2023 11:50:46 PM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (2), Added; (red 7; 7 Points)
(11/26/2023 11:50:46 PM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/26/2023 11:50:46 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 7)
(11/26/2023 11:50:46 PM) |> method; (RandomNumber.Between), Between; (min: 0, max: 1), Value; (0)
(11/26/2023 11:50:46 PM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/26/2023 11:50:46 PM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (2), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 2
(11/26/2023 11:50:46 PM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/26/2023 11:50:46 PM) |> method; (wildFormClass.wildFormClass)
(11/26/2023 11:50:48 PM) |> method; (wildFormClass.redBT_Click) [this.Tag = red]
(11/26/2023 11:50:48 PM) |> method; (GameLogicClass.CardPlay), c_card; (red) (wild), wild, red
(11/26/2023 11:50:49 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:50:49 PM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/26/2023 11:50:49 PM) |> method; (GameLogicClass.AddLogic)
(11/26/2023 11:50:49 PM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/26/2023 11:50:49 PM) |> method; (GameLogicClass.CardClickLogic), Card Index; (2), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, wild), Player Index (0)
(11/26/2023 11:50:49 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:50:49 PM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/26/2023 11:50:49 PM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/26/2023 11:50:49 PM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/26/2023 11:50:49 PM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/26/2023 11:50:49 PM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/26/2023 11:50:49 PM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/26/2023 11:50:49 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/26/2023 11:50:49 PM) |> method; (PlayerClass.UpdatePoints) [130]
(11/26/2023 11:50:49 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:50:49 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red wild)
(11/26/2023 11:50:49 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:50:49 PM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/26/2023 11:50:49 PM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/26/2023 11:50:49 PM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/26/2023 11:50:49 PM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/26/2023 11:50:49 PM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/26/2023 11:50:49 PM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/26/2023 11:50:49 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/26/2023 11:50:49 PM) |> method; (PlayerClass.UpdatePoints) [314]
(11/26/2023 11:50:49 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:50:49 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red wild)
(11/26/2023 11:50:49 PM) |> method; (PlayerClass.ActivateClick)
(11/26/2023 11:50:49 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (1)
(11/26/2023 11:50:49 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-4)
(11/26/2023 11:50:49 PM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (3), Added; (red wild; 40 Points)
(11/26/2023 11:50:49 PM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/26/2023 11:50:49 PM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (6)
Player1CardCount; (6)

    PlusAmount (0)
Discard Pile Count; (3), Top Card; (red, wild)
(11/26/2023 11:50:49 PM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (6)
Player1CardCount; (7)

    PlusAmount (0)
Discard Pile Count; (3), Top Card; (red, wild)
(11/26/2023 11:50:51 PM) |> method; (GameLogicClass.FindPictureInList), Card Index; (3)
(11/26/2023 11:50:51 PM) |> method; (GameLogicClass.cardPB_Click), Card Index (3)
(11/26/2023 11:50:51 PM) |> method; (GameLogicClass.CardPlay), c_card; (red) (6), error
(11/26/2023 11:50:51 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:50:51 PM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/26/2023 11:50:51 PM) |> method; (GameLogicClass.AddLogic)
(11/26/2023 11:50:51 PM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/26/2023 11:50:51 PM) |> method; (GameLogicClass.CardClickLogic), Card Index; (3), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 6), Player Index (1)
(11/26/2023 11:50:51 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:50:51 PM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/26/2023 11:50:51 PM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/26/2023 11:50:51 PM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/26/2023 11:50:51 PM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/26/2023 11:50:51 PM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/26/2023 11:50:51 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/26/2023 11:50:51 PM) |> method; (PlayerClass.UpdatePoints) [165]
(11/26/2023 11:50:51 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:50:51 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 6)
(11/26/2023 11:50:51 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:50:51 PM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/26/2023 11:50:51 PM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/26/2023 11:50:51 PM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/26/2023 11:50:51 PM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/26/2023 11:50:51 PM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/26/2023 11:50:51 PM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/26/2023 11:50:51 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/26/2023 11:50:51 PM) |> method; (PlayerClass.UpdatePoints) [392]
(11/26/2023 11:50:51 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:50:51 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 6)
(11/26/2023 11:50:51 PM) |> method; (PlayerClass.ActivateClick)
(11/26/2023 11:50:51 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (8)
(11/26/2023 11:50:51 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (1)
(11/26/2023 11:50:51 PM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (4), Added; (red 6; 6 Points)
(11/26/2023 11:50:51 PM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/26/2023 11:50:51 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 6)
(11/26/2023 11:50:51 PM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/26/2023 11:50:51 PM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (1), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 2
(11/26/2023 11:50:51 PM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/26/2023 11:50:51 PM) |> method; (wildFormClass.wildFormClass)
(11/26/2023 11:50:56 PM) |> method; (wildFormClass.redBT_Click) [this.Tag = red]
(11/26/2023 11:50:56 PM) |> method; (GameLogicClass.CardPlay), c_card; (red) (+4_wild), add, 4
(11/26/2023 11:50:56 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:50:56 PM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/26/2023 11:50:56 PM) |> method; (GameLogicClass.CardClass)
(11/26/2023 11:50:56 PM) |> method; (RandomNumber.Between), Between; (min: 0, max: 92), Value; (90)
(11/26/2023 11:50:56 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:50:56 PM) |> method; (GameLogicClass.CardClass)
(11/26/2023 11:50:56 PM) |> method; (RandomNumber.Between), Between; (min: 0, max: 91), Value; (88)
(11/26/2023 11:50:56 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:50:56 PM) |> method; (GameLogicClass.CardClass)
(11/26/2023 11:50:56 PM) |> method; (RandomNumber.Between), Between; (min: 0, max: 90), Value; (86)
(11/26/2023 11:50:56 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:50:56 PM) |> method; (GameLogicClass.CardClass)
(11/26/2023 11:50:56 PM) |> method; (RandomNumber.Between), Between; (min: 0, max: 89), Value; (81)
(11/26/2023 11:50:56 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:50:56 PM) |> method; (GameLogicClass.AddCards), cards added; (AddCards Index: 0 AddCards Index: 0 AddCards Index: 0 AddCards Index: 0 )
(11/26/2023 11:50:56 PM) |> method; (GameLogicClass.AddLogic)
(11/26/2023 11:50:56 PM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/26/2023 11:50:56 PM) |> method; (GameLogicClass.CardClickLogic), Card Index; (2), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, +4_wild), Player Index (0)
(11/26/2023 11:50:56 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:50:56 PM) |> method; (CardClass.SetPBLocation), x, y; (475, 765)
(11/26/2023 11:50:56 PM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/26/2023 11:50:56 PM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/26/2023 11:50:56 PM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/26/2023 11:50:56 PM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/26/2023 11:50:56 PM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/26/2023 11:50:56 PM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/26/2023 11:50:56 PM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/26/2023 11:50:56 PM) |> method; (CardClass.SetPBLocation), x, y; (915, 765)
(11/26/2023 11:50:56 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (915, 915)
(11/26/2023 11:50:56 PM) |> method; (PlayerClass.UpdatePoints) [317]
(11/26/2023 11:50:56 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:50:56 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red +4_wild)
(11/26/2023 11:50:56 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:50:56 PM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/26/2023 11:50:56 PM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/26/2023 11:50:56 PM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/26/2023 11:50:56 PM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/26/2023 11:50:56 PM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/26/2023 11:50:56 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/26/2023 11:50:56 PM) |> method; (PlayerClass.UpdatePoints) [420]
(11/26/2023 11:50:56 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:50:57 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red +4_wild)
(11/26/2023 11:50:57 PM) |> method; (PlayerClass.ActivateClick)
(11/26/2023 11:50:57 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-4)
(11/26/2023 11:50:57 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-8)
(11/26/2023 11:50:57 PM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (5), Added; (red +4_wild; 50 Points)
(11/26/2023 11:50:57 PM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/26/2023 11:50:57 PM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (9)
Player1CardCount; (5)

    PlusAmount (0)
Discard Pile Count; (5), Top Card; (red, +4_wild)
(11/26/2023 11:50:57 PM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (5)
Player1CardCount; (6)

    PlusAmount (0)
Discard Pile Count; (5), Top Card; (red, +4_wild)
(11/26/2023 11:51:00 PM) |> method; (GameLogicClass.FindPictureInList), Card Index; (6)
(11/26/2023 11:51:00 PM) |> method; (GameLogicClass.cardPB_Click), Card Index (6)
(11/26/2023 11:51:00 PM) |> method; (wildFormClass.wildFormClass)
(11/26/2023 11:51:03 PM) |> method; (wildFormClass.blueBT_Click) [this.Tag = blue]
(11/26/2023 11:51:03 PM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (+4_wild), add, 4
(11/26/2023 11:51:03 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:51:03 PM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/26/2023 11:51:03 PM) |> method; (GameLogicClass.CardClass)
(11/26/2023 11:51:03 PM) |> method; (RandomNumber.Between), Between; (min: 0, max: 88), Value; (44)
(11/26/2023 11:51:03 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:51:03 PM) |> method; (GameLogicClass.CardClass)
(11/26/2023 11:51:03 PM) |> method; (RandomNumber.Between), Between; (min: 0, max: 87), Value; (58)
(11/26/2023 11:51:03 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:51:03 PM) |> method; (GameLogicClass.CardClass)
(11/26/2023 11:51:03 PM) |> method; (RandomNumber.Between), Between; (min: 0, max: 86), Value; (23)
(11/26/2023 11:51:03 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:51:03 PM) |> method; (GameLogicClass.CardClass)
(11/26/2023 11:51:03 PM) |> method; (RandomNumber.Between), Between; (min: 0, max: 85), Value; (28)
(11/26/2023 11:51:03 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:51:03 PM) |> method; (GameLogicClass.AddCards), cards added; (AddCards Index: 1 AddCards Index: 1 AddCards Index: 1 AddCards Index: 1 )
(11/26/2023 11:51:03 PM) |> method; (GameLogicClass.AddLogic)
(11/26/2023 11:51:03 PM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/26/2023 11:51:03 PM) |> method; (GameLogicClass.CardClickLogic), Card Index; (6), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, +4_wild), Player Index (1)
(11/26/2023 11:51:03 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:51:03 PM) |> method; (CardClass.SetPBLocation), x, y; (500, 765)
(11/26/2023 11:51:03 PM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/26/2023 11:51:03 PM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/26/2023 11:51:03 PM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/26/2023 11:51:03 PM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/26/2023 11:51:03 PM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/26/2023 11:51:03 PM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/26/2023 11:51:03 PM) |> method; (CardClass.SetPBLocation), x, y; (885, 765)
(11/26/2023 11:51:03 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (885, 885)
(11/26/2023 11:51:03 PM) |> method; (PlayerClass.UpdatePoints) [419]
(11/26/2023 11:51:03 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:51:03 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue +4_wild)
(11/26/2023 11:51:03 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:51:03 PM) |> method; (CardClass.SetPBLocation), x, y; (475, 5)
(11/26/2023 11:51:03 PM) |> method; (CardClass.SetPBLocation), x, y; (530, 5)
(11/26/2023 11:51:03 PM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/26/2023 11:51:03 PM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/26/2023 11:51:03 PM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/26/2023 11:51:03 PM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/26/2023 11:51:03 PM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/26/2023 11:51:03 PM) |> method; (CardClass.SetPBLocation), x, y; (860, 5)
(11/26/2023 11:51:03 PM) |> method; (CardClass.SetPBLocation), x, y; (915, 5)
(11/26/2023 11:51:03 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (915, 915)
(11/26/2023 11:51:03 PM) |> method; (PlayerClass.UpdatePoints) [468]
(11/26/2023 11:51:03 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:51:03 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue +4_wild)
(11/26/2023 11:51:03 PM) |> method; (PlayerClass.ActivateClick)
(11/26/2023 11:51:03 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-2)
(11/26/2023 11:51:03 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (3)
(11/26/2023 11:51:03 PM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (6), Added; (blue +4_wild; 50 Points)
(11/26/2023 11:51:03 PM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/26/2023 11:51:03 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue +4_wild)
(11/26/2023 11:51:03 PM) |> method; (RandomNumber.Between), Between; (min: 0, max: 1), Value; (0)
(11/26/2023 11:51:03 PM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/26/2023 11:51:03 PM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (2), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 0
(11/26/2023 11:51:03 PM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/26/2023 11:51:03 PM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (5), error
(11/26/2023 11:51:03 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:51:03 PM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/26/2023 11:51:03 PM) |> method; (GameLogicClass.AddLogic)
(11/26/2023 11:51:03 PM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/26/2023 11:51:03 PM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 5), Player Index (0)
(11/26/2023 11:51:03 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:51:03 PM) |> method; (CardClass.SetPBLocation), x, y; (500, 765)
(11/26/2023 11:51:03 PM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/26/2023 11:51:03 PM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/26/2023 11:51:03 PM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/26/2023 11:51:03 PM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/26/2023 11:51:03 PM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/26/2023 11:51:03 PM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/26/2023 11:51:03 PM) |> method; (CardClass.SetPBLocation), x, y; (885, 765)
(11/26/2023 11:51:03 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (885, 885)
(11/26/2023 11:51:03 PM) |> method; (PlayerClass.UpdatePoints) [521]
(11/26/2023 11:51:03 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:51:03 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 5)
(11/26/2023 11:51:03 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:51:03 PM) |> method; (CardClass.SetPBLocation), x, y; (500, 5)
(11/26/2023 11:51:03 PM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/26/2023 11:51:03 PM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/26/2023 11:51:03 PM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/26/2023 11:51:03 PM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/26/2023 11:51:03 PM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/26/2023 11:51:03 PM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/26/2023 11:51:03 PM) |> method; (CardClass.SetPBLocation), x, y; (885, 5)
(11/26/2023 11:51:03 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (885, 885)
(11/26/2023 11:51:03 PM) |> method; (PlayerClass.UpdatePoints) [511]
(11/26/2023 11:51:03 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:51:03 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 5)
(11/26/2023 11:51:03 PM) |> method; (PlayerClass.ActivateClick)
(11/26/2023 11:51:03 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-6)
(11/26/2023 11:51:03 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (5)
(11/26/2023 11:51:03 PM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (7), Added; (blue 5; 5 Points)
(11/26/2023 11:51:03 PM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/26/2023 11:51:03 PM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (8)
Player1CardCount; (8)

    PlusAmount (0)
Discard Pile Count; (7), Top Card; (blue, 5)
(11/26/2023 11:51:03 PM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (8)
Player1CardCount; (9)

    PlusAmount (0)
Discard Pile Count; (7), Top Card; (blue, 5)
(11/26/2023 11:51:05 PM) |> method; (GameLogicClass.FindPictureInList), Card Index; (6)
(11/26/2023 11:51:05 PM) |> method; (GameLogicClass.cardPB_Click), Card Index (6)
(11/26/2023 11:51:05 PM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (skip), error
(11/26/2023 11:51:05 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:51:05 PM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/26/2023 11:51:05 PM) |> method; (GameLogicClass.AddLogic)
(11/26/2023 11:51:05 PM) |> method; (GameLogicClass.CardClickLogic), In skip
(11/26/2023 11:51:05 PM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/26/2023 11:51:05 PM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/26/2023 11:51:05 PM) |> method; (GameLogicClass.CardClickLogic), Card Index; (6), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, skip), Player Index (0)
(11/26/2023 11:51:05 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:51:05 PM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/26/2023 11:51:05 PM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/26/2023 11:51:05 PM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/26/2023 11:51:05 PM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/26/2023 11:51:05 PM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/26/2023 11:51:05 PM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/26/2023 11:51:05 PM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/26/2023 11:51:05 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/26/2023 11:51:05 PM) |> method; (PlayerClass.UpdatePoints) [603]
(11/26/2023 11:51:05 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:51:05 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue skip)
(11/26/2023 11:51:05 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:51:05 PM) |> method; (CardClass.SetPBLocation), x, y; (500, 5)
(11/26/2023 11:51:05 PM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/26/2023 11:51:05 PM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/26/2023 11:51:05 PM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/26/2023 11:51:05 PM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/26/2023 11:51:05 PM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/26/2023 11:51:05 PM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/26/2023 11:51:05 PM) |> method; (CardClass.SetPBLocation), x, y; (885, 5)
(11/26/2023 11:51:05 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (885, 885)
(11/26/2023 11:51:05 PM) |> method; (PlayerClass.UpdatePoints) [554]
(11/26/2023 11:51:06 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:51:06 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue skip)
(11/26/2023 11:51:06 PM) |> method; (PlayerClass.ActivateClick)
(11/26/2023 11:51:06 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-3)
(11/26/2023 11:51:06 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-10)
(11/26/2023 11:51:06 PM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (8), Added; (blue skip; 20 Points)
(11/26/2023 11:51:06 PM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/26/2023 11:51:06 PM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (7)
Player1CardCount; (8)

    PlusAmount (0)
Discard Pile Count; (8), Top Card; (blue, skip)
(11/26/2023 11:51:06 PM) |> method; (GameLogicClass.FindPictureInList), Card Index; (6)
(11/26/2023 11:51:06 PM) |> method; (GameLogicClass.cardPB_Click), Card Index (6)
(11/26/2023 11:51:06 PM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (7), error
(11/26/2023 11:51:06 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:51:06 PM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/26/2023 11:51:06 PM) |> method; (GameLogicClass.AddLogic)
(11/26/2023 11:51:06 PM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/26/2023 11:51:06 PM) |> method; (GameLogicClass.CardClickLogic), Card Index; (6), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 7), Player Index (1)
(11/26/2023 11:51:06 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:51:06 PM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/26/2023 11:51:06 PM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/26/2023 11:51:06 PM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/26/2023 11:51:06 PM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/26/2023 11:51:06 PM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/26/2023 11:51:06 PM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/26/2023 11:51:06 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/26/2023 11:51:06 PM) |> method; (PlayerClass.UpdatePoints) [678]
(11/26/2023 11:51:06 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:51:06 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 7)
(11/26/2023 11:51:06 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:51:06 PM) |> method; (CardClass.SetPBLocation), x, y; (500, 5)
(11/26/2023 11:51:06 PM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/26/2023 11:51:06 PM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/26/2023 11:51:06 PM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/26/2023 11:51:06 PM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/26/2023 11:51:06 PM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/26/2023 11:51:06 PM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/26/2023 11:51:06 PM) |> method; (CardClass.SetPBLocation), x, y; (885, 5)
(11/26/2023 11:51:06 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (885, 885)
(11/26/2023 11:51:06 PM) |> method; (PlayerClass.UpdatePoints) [597]
(11/26/2023 11:51:07 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:51:07 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 7)
(11/26/2023 11:51:07 PM) |> method; (PlayerClass.ActivateClick)
(11/26/2023 11:51:07 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (5)
(11/26/2023 11:51:07 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-7)
(11/26/2023 11:51:07 PM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (9), Added; (blue 7; 7 Points)
(11/26/2023 11:51:07 PM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/26/2023 11:51:07 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 7)
(11/26/2023 11:51:07 PM) |> method; (GameLogicClass.FindPictureInList), Card Index; (1)
(11/26/2023 11:51:07 PM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (1), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 1
(11/26/2023 11:51:07 PM) |> method; (GameLogicClass.FindPictureInList), Card Index; (1)
(11/26/2023 11:51:07 PM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (1), error
(11/26/2023 11:51:07 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:51:07 PM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/26/2023 11:51:07 PM) |> method; (GameLogicClass.AddLogic)
(11/26/2023 11:51:07 PM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/26/2023 11:51:07 PM) |> method; (GameLogicClass.CardClickLogic), Card Index; (1), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 1), Player Index (0)
(11/26/2023 11:51:07 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:51:07 PM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/26/2023 11:51:07 PM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/26/2023 11:51:07 PM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/26/2023 11:51:07 PM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/26/2023 11:51:07 PM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/26/2023 11:51:07 PM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/26/2023 11:51:07 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/26/2023 11:51:07 PM) |> method; (PlayerClass.UpdatePoints) [753]
(11/26/2023 11:51:07 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:51:07 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 1)
(11/26/2023 11:51:07 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:51:07 PM) |> method; (CardClass.SetPBLocation), x, y; (530, 5)
(11/26/2023 11:51:07 PM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/26/2023 11:51:07 PM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/26/2023 11:51:07 PM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/26/2023 11:51:07 PM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/26/2023 11:51:07 PM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/26/2023 11:51:07 PM) |> method; (CardClass.SetPBLocation), x, y; (860, 5)
(11/26/2023 11:51:07 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/26/2023 11:51:07 PM) |> method; (PlayerClass.UpdatePoints) [639]
(11/26/2023 11:51:07 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:51:07 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 1)
(11/26/2023 11:51:07 PM) |> method; (PlayerClass.ActivateClick)
(11/26/2023 11:51:07 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-9)
(11/26/2023 11:51:07 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-8)
(11/26/2023 11:51:07 PM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (10), Added; (blue 1; 1 Points)
(11/26/2023 11:51:07 PM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/26/2023 11:51:07 PM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (6)
Player1CardCount; (7)

    PlusAmount (0)
Discard Pile Count; (10), Top Card; (blue, 1)
(11/26/2023 11:51:07 PM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (6)
Player1CardCount; (8)

    PlusAmount (0)
Discard Pile Count; (10), Top Card; (blue, 1)
(11/26/2023 11:51:08 PM) |> method; (GameLogicClass.FindPictureInList), Card Index; (4)
(11/26/2023 11:51:08 PM) |> method; (GameLogicClass.cardPB_Click), Card Index (4)
(11/26/2023 11:51:08 PM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (7), error
(11/26/2023 11:51:08 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:51:08 PM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/26/2023 11:51:08 PM) |> method; (GameLogicClass.AddLogic)
(11/26/2023 11:51:08 PM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/26/2023 11:51:08 PM) |> method; (GameLogicClass.CardClickLogic), Card Index; (4), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 7), Player Index (1)
(11/26/2023 11:51:08 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:51:08 PM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/26/2023 11:51:08 PM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/26/2023 11:51:08 PM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/26/2023 11:51:08 PM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/26/2023 11:51:08 PM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/26/2023 11:51:08 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/26/2023 11:51:08 PM) |> method; (PlayerClass.UpdatePoints) [821]
(11/26/2023 11:51:08 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:51:08 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 7)
(11/26/2023 11:51:08 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:51:08 PM) |> method; (CardClass.SetPBLocation), x, y; (530, 5)
(11/26/2023 11:51:08 PM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/26/2023 11:51:08 PM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/26/2023 11:51:08 PM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/26/2023 11:51:08 PM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/26/2023 11:51:08 PM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/26/2023 11:51:08 PM) |> method; (CardClass.SetPBLocation), x, y; (860, 5)
(11/26/2023 11:51:08 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/26/2023 11:51:08 PM) |> method; (PlayerClass.UpdatePoints) [681]
(11/26/2023 11:51:08 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:51:08 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (blue 7)
(11/26/2023 11:51:08 PM) |> method; (PlayerClass.ActivateClick)
(11/26/2023 11:51:08 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (1)
(11/26/2023 11:51:08 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (2)
(11/26/2023 11:51:08 PM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (11), Added; (blue 7; 7 Points)
(11/26/2023 11:51:08 PM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/26/2023 11:51:08 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (blue 7)
(11/26/2023 11:51:08 PM) |> method; (GameLogicClass.CardClass)
(11/26/2023 11:51:08 PM) |> method; (RandomNumber.Between), Between; (min: 0, max: 84), Value; (21)
(11/26/2023 11:51:08 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:51:08 PM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/26/2023 11:51:08 PM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/26/2023 11:51:08 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:51:08 PM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/26/2023 11:51:08 PM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/26/2023 11:51:08 PM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/26/2023 11:51:08 PM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/26/2023 11:51:08 PM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/26/2023 11:51:08 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/26/2023 11:51:08 PM) |> method; (PlayerClass.UpdatePoints) [889]
(11/26/2023 11:51:08 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:51:08 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 7)
(11/26/2023 11:51:08 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:51:08 PM) |> method; (CardClass.SetPBLocation), x, y; (500, 5)
(11/26/2023 11:51:08 PM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/26/2023 11:51:08 PM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/26/2023 11:51:08 PM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/26/2023 11:51:08 PM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/26/2023 11:51:08 PM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/26/2023 11:51:08 PM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/26/2023 11:51:08 PM) |> method; (CardClass.SetPBLocation), x, y; (885, 5)
(11/26/2023 11:51:08 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (885, 885)
(11/26/2023 11:51:08 PM) |> method; (PlayerClass.UpdatePoints) [724]
(11/26/2023 11:51:08 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:51:08 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (blue 7)
(11/26/2023 11:51:08 PM) |> method; (PlayerClass.ActivateClick)
(11/26/2023 11:51:08 PM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (11), Added; (Nothing)
(11/26/2023 11:51:08 PM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/26/2023 11:51:08 PM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (5)
Player1CardCount; (8)

    PlusAmount (0)
Discard Pile Count; (11), Top Card; (blue, 7)
(11/26/2023 11:51:08 PM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (5)
Player1CardCount; (7)

    PlusAmount (0)
Discard Pile Count; (11), Top Card; (blue, 7)
(11/26/2023 11:51:09 PM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/26/2023 11:51:09 PM) |> method; (GameLogicClass.cardPB_Click), Card Index (0)
(11/26/2023 11:51:09 PM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (6), error
(11/26/2023 11:51:09 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:51:09 PM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/26/2023 11:51:09 PM) |> method; (GameLogicClass.AddLogic)
(11/26/2023 11:51:09 PM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/26/2023 11:51:09 PM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 6), Player Index (1)
(11/26/2023 11:51:09 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:51:09 PM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/26/2023 11:51:09 PM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/26/2023 11:51:09 PM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/26/2023 11:51:09 PM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/26/2023 11:51:09 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/26/2023 11:51:09 PM) |> method; (PlayerClass.UpdatePoints) [951]
(11/26/2023 11:51:09 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:51:09 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 6)
(11/26/2023 11:51:09 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:51:09 PM) |> method; (CardClass.SetPBLocation), x, y; (500, 5)
(11/26/2023 11:51:09 PM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/26/2023 11:51:09 PM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/26/2023 11:51:09 PM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/26/2023 11:51:09 PM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/26/2023 11:51:09 PM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/26/2023 11:51:09 PM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/26/2023 11:51:09 PM) |> method; (CardClass.SetPBLocation), x, y; (885, 5)
(11/26/2023 11:51:09 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (885, 885)
(11/26/2023 11:51:09 PM) |> method; (PlayerClass.UpdatePoints) [767]
(11/26/2023 11:51:10 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:51:10 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (blue 6)
(11/26/2023 11:51:10 PM) |> method; (PlayerClass.ActivateClick)
(11/26/2023 11:51:10 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (5)
(11/26/2023 11:51:10 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (0)
(11/26/2023 11:51:10 PM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (12), Added; (blue 6; 6 Points)
(11/26/2023 11:51:10 PM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/26/2023 11:51:10 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (blue 6)
(11/26/2023 11:51:10 PM) |> method; (GameLogicClass.CardClass)
(11/26/2023 11:51:10 PM) |> method; (RandomNumber.Between), Between; (min: 0, max: 83), Value; (64)
(11/26/2023 11:51:10 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:51:10 PM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/26/2023 11:51:10 PM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/26/2023 11:51:10 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:51:10 PM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/26/2023 11:51:10 PM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/26/2023 11:51:10 PM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/26/2023 11:51:10 PM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/26/2023 11:51:10 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/26/2023 11:51:10 PM) |> method; (PlayerClass.UpdatePoints) [1013]
(11/26/2023 11:51:10 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:51:10 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 6)
(11/26/2023 11:51:10 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:51:10 PM) |> method; (CardClass.SetPBLocation), x, y; (475, 5)
(11/26/2023 11:51:10 PM) |> method; (CardClass.SetPBLocation), x, y; (530, 5)
(11/26/2023 11:51:10 PM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/26/2023 11:51:10 PM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/26/2023 11:51:10 PM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/26/2023 11:51:10 PM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/26/2023 11:51:10 PM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/26/2023 11:51:10 PM) |> method; (CardClass.SetPBLocation), x, y; (860, 5)
(11/26/2023 11:51:10 PM) |> method; (CardClass.SetPBLocation), x, y; (915, 5)
(11/26/2023 11:51:10 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (915, 915)
(11/26/2023 11:51:10 PM) |> method; (PlayerClass.UpdatePoints) [813]
(11/26/2023 11:51:10 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:51:10 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (blue 6)
(11/26/2023 11:51:10 PM) |> method; (PlayerClass.ActivateClick)
(11/26/2023 11:51:10 PM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (12), Added; (Nothing)
(11/26/2023 11:51:10 PM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/26/2023 11:51:10 PM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (4)
Player1CardCount; (9)

    PlusAmount (0)
Discard Pile Count; (12), Top Card; (blue, 6)
(11/26/2023 11:51:10 PM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (4)
Player1CardCount; (8)

    PlusAmount (0)
Discard Pile Count; (12), Top Card; (blue, 6)
(11/26/2023 11:51:13 PM) |> method; (GameLogicClass.FindPictureInList), Card Index; (3)
(11/26/2023 11:51:13 PM) |> method; (GameLogicClass.cardPB_Click), Card Index (3)
(11/26/2023 11:51:13 PM) |> method; (wildFormClass.wildFormClass)
(11/26/2023 11:51:16 PM) |> method; (wildFormClass.yellowBT_Click) [this.Tag = yellow]
(11/26/2023 11:51:16 PM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (wild), wild, yellow
(11/26/2023 11:51:16 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:51:16 PM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/26/2023 11:51:16 PM) |> method; (GameLogicClass.AddLogic)
(11/26/2023 11:51:16 PM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/26/2023 11:51:16 PM) |> method; (GameLogicClass.CardClickLogic), Card Index; (3), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, wild), Player Index (1)
(11/26/2023 11:51:16 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:51:16 PM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/26/2023 11:51:16 PM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/26/2023 11:51:17 PM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/26/2023 11:51:17 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/26/2023 11:51:17 PM) |> method; (PlayerClass.UpdatePoints) [1035]
(11/26/2023 11:51:17 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:51:17 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow wild)
(11/26/2023 11:51:17 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:51:17 PM) |> method; (CardClass.SetPBLocation), x, y; (475, 5)
(11/26/2023 11:51:17 PM) |> method; (CardClass.SetPBLocation), x, y; (530, 5)
(11/26/2023 11:51:17 PM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/26/2023 11:51:17 PM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/26/2023 11:51:17 PM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/26/2023 11:51:17 PM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/26/2023 11:51:17 PM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/26/2023 11:51:17 PM) |> method; (CardClass.SetPBLocation), x, y; (860, 5)
(11/26/2023 11:51:17 PM) |> method; (CardClass.SetPBLocation), x, y; (915, 5)
(11/26/2023 11:51:17 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (915, 915)
(11/26/2023 11:51:17 PM) |> method; (PlayerClass.UpdatePoints) [859]
(11/26/2023 11:51:17 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:51:17 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow wild)
(11/26/2023 11:51:17 PM) |> method; (PlayerClass.ActivateClick)
(11/26/2023 11:51:17 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-2)
(11/26/2023 11:51:17 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (1)
(11/26/2023 11:51:17 PM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (13), Added; (yellow wild; 40 Points)
(11/26/2023 11:51:17 PM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/26/2023 11:51:17 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow wild)
(11/26/2023 11:51:17 PM) |> method; (RandomNumber.Between), Between; (min: 0, max: 1), Value; (0)
(11/26/2023 11:51:17 PM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/26/2023 11:51:17 PM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (2), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 0
(11/26/2023 11:51:17 PM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/26/2023 11:51:17 PM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (reverse), reverce, True
(11/26/2023 11:51:17 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:51:17 PM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/26/2023 11:51:17 PM) |> method; (GameLogicClass.AddLogic)
(11/26/2023 11:51:17 PM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/26/2023 11:51:17 PM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, reverse), Player Index (0)
(11/26/2023 11:51:17 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:51:17 PM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/26/2023 11:51:17 PM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/26/2023 11:51:17 PM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/26/2023 11:51:17 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/26/2023 11:51:17 PM) |> method; (PlayerClass.UpdatePoints) [1057]
(11/26/2023 11:51:17 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:51:17 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow reverse)
(11/26/2023 11:51:17 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:51:17 PM) |> method; (CardClass.SetPBLocation), x, y; (500, 5)
(11/26/2023 11:51:17 PM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/26/2023 11:51:17 PM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/26/2023 11:51:17 PM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/26/2023 11:51:17 PM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/26/2023 11:51:17 PM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/26/2023 11:51:17 PM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/26/2023 11:51:17 PM) |> method; (CardClass.SetPBLocation), x, y; (885, 5)
(11/26/2023 11:51:17 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (885, 885)
(11/26/2023 11:51:17 PM) |> method; (PlayerClass.UpdatePoints) [885]
(11/26/2023 11:51:17 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:51:17 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow reverse)
(11/26/2023 11:51:17 PM) |> method; (PlayerClass.ActivateClick)
(11/26/2023 11:51:17 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-9)
(11/26/2023 11:51:17 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-5)
(11/26/2023 11:51:17 PM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (14), Added; (yellow reverse; 20 Points)
(11/26/2023 11:51:17 PM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/26/2023 11:51:17 PM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (3)
Player1CardCount; (8)

    PlusAmount (0)
Discard Pile Count; (14), Top Card; (yellow, reverse)
(11/26/2023 11:51:17 PM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (3)
Player1CardCount; (9)

    PlusAmount (0)
Discard Pile Count; (14), Top Card; (yellow, reverse)
(11/26/2023 11:51:17 PM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/26/2023 11:51:17 PM) |> method; (GameLogicClass.cardPB_Click), Card Index (0)
(11/26/2023 11:51:17 PM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (+2), add, 2
(11/26/2023 11:51:17 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:51:17 PM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/26/2023 11:51:17 PM) |> method; (GameLogicClass.CardClass)
(11/26/2023 11:51:17 PM) |> method; (RandomNumber.Between), Between; (min: 0, max: 82), Value; (4)
(11/26/2023 11:51:17 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:51:17 PM) |> method; (GameLogicClass.CardClass)
(11/26/2023 11:51:17 PM) |> method; (RandomNumber.Between), Between; (min: 0, max: 81), Value; (61)
(11/26/2023 11:51:17 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:51:17 PM) |> method; (GameLogicClass.AddCards), cards added; (AddCards Index: 1 AddCards Index: 1 )
(11/26/2023 11:51:17 PM) |> method; (GameLogicClass.AddLogic)
(11/26/2023 11:51:18 PM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/26/2023 11:51:18 PM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, +2), Player Index (1)
(11/26/2023 11:51:18 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:51:18 PM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/26/2023 11:51:18 PM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/26/2023 11:51:18 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/26/2023 11:51:18 PM) |> method; (PlayerClass.UpdatePoints) [1069]
(11/26/2023 11:51:18 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:51:18 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow +2)
(11/26/2023 11:51:18 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:51:18 PM) |> method; (CardClass.SetPBLocation), x, y; (445, 5)
(11/26/2023 11:51:18 PM) |> method; (CardClass.SetPBLocation), x, y; (500, 5)
(11/26/2023 11:51:18 PM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/26/2023 11:51:18 PM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/26/2023 11:51:18 PM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/26/2023 11:51:18 PM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/26/2023 11:51:18 PM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/26/2023 11:51:18 PM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/26/2023 11:51:18 PM) |> method; (CardClass.SetPBLocation), x, y; (885, 5)
(11/26/2023 11:51:18 PM) |> method; (CardClass.SetPBLocation), x, y; (940, 5)
(11/26/2023 11:51:18 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (940, 940)
(11/26/2023 11:51:18 PM) |> method; (PlayerClass.UpdatePoints) [917]
(11/26/2023 11:51:18 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:51:18 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow +2)
(11/26/2023 11:51:18 PM) |> method; (PlayerClass.ActivateClick)
(11/26/2023 11:51:18 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (8)
(11/26/2023 11:51:18 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (3)
(11/26/2023 11:51:18 PM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (15), Added; (yellow +2; 10 Points)
(11/26/2023 11:51:18 PM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/26/2023 11:51:18 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow +2)
(11/26/2023 11:51:18 PM) |> method; (RandomNumber.Between), Between; (min: 0, max: 1), Value; (0)
(11/26/2023 11:51:18 PM) |> method; (GameLogicClass.FindPictureInList), Card Index; (3)
(11/26/2023 11:51:18 PM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (2), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 3
(11/26/2023 11:51:18 PM) |> method; (GameLogicClass.FindPictureInList), Card Index; (3)
(11/26/2023 11:51:18 PM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (5), error
(11/26/2023 11:51:18 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:51:18 PM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/26/2023 11:51:18 PM) |> method; (GameLogicClass.AddLogic)
(11/26/2023 11:51:18 PM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/26/2023 11:51:18 PM) |> method; (GameLogicClass.CardClickLogic), Card Index; (3), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 5), Player Index (0)
(11/26/2023 11:51:18 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:51:18 PM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/26/2023 11:51:18 PM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/26/2023 11:51:18 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/26/2023 11:51:18 PM) |> method; (PlayerClass.UpdatePoints) [1081]
(11/26/2023 11:51:18 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:51:18 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (yellow 5)
(11/26/2023 11:51:18 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:51:18 PM) |> method; (CardClass.SetPBLocation), x, y; (475, 5)
(11/26/2023 11:51:18 PM) |> method; (CardClass.SetPBLocation), x, y; (530, 5)
(11/26/2023 11:51:18 PM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/26/2023 11:51:18 PM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/26/2023 11:51:18 PM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/26/2023 11:51:18 PM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/26/2023 11:51:18 PM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/26/2023 11:51:18 PM) |> method; (CardClass.SetPBLocation), x, y; (860, 5)
(11/26/2023 11:51:18 PM) |> method; (CardClass.SetPBLocation), x, y; (915, 5)
(11/26/2023 11:51:18 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (915, 915)
(11/26/2023 11:51:18 PM) |> method; (PlayerClass.UpdatePoints) [944]
(11/26/2023 11:51:18 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:51:18 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 5)
(11/26/2023 11:51:18 PM) |> method; (PlayerClass.ActivateClick)
(11/26/2023 11:51:18 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (6)
(11/26/2023 11:51:18 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-3)
(11/26/2023 11:51:18 PM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (16), Added; (yellow 5; 5 Points)
(11/26/2023 11:51:18 PM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/26/2023 11:51:18 PM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (2)
Player1CardCount; (9)

    PlusAmount (0)
Discard Pile Count; (16), Top Card; (yellow, 5)
(11/26/2023 11:51:18 PM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (2)
Player1CardCount; (10)

    PlusAmount (0)
Discard Pile Count; (16), Top Card; (yellow, 5)
(11/26/2023 11:51:20 PM) |> method; (GameLogicClass.DrawPile_Clicked)
(11/26/2023 11:51:20 PM) |> method; (GameLogicClass.CardClass)
(11/26/2023 11:51:20 PM) |> method; (RandomNumber.Between), Between; (min: 0, max: 80), Value; (8)
(11/26/2023 11:51:20 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:51:20 PM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/26/2023 11:51:20 PM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (1), add one
(11/26/2023 11:51:20 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:51:20 PM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/26/2023 11:51:20 PM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/26/2023 11:51:20 PM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/26/2023 11:51:20 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/26/2023 11:51:20 PM) |> method; (PlayerClass.UpdatePoints) [1113]
(11/26/2023 11:51:20 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:51:20 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (yellow 5)
(11/26/2023 11:51:20 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:51:20 PM) |> method; (CardClass.SetPBLocation), x, y; (475, 5)
(11/26/2023 11:51:20 PM) |> method; (CardClass.SetPBLocation), x, y; (530, 5)
(11/26/2023 11:51:20 PM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/26/2023 11:51:20 PM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/26/2023 11:51:20 PM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/26/2023 11:51:20 PM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/26/2023 11:51:20 PM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/26/2023 11:51:20 PM) |> method; (CardClass.SetPBLocation), x, y; (860, 5)
(11/26/2023 11:51:20 PM) |> method; (CardClass.SetPBLocation), x, y; (915, 5)
(11/26/2023 11:51:20 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (915, 915)
(11/26/2023 11:51:20 PM) |> method; (PlayerClass.UpdatePoints) [971]
(11/26/2023 11:51:20 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:51:20 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 5)
(11/26/2023 11:51:20 PM) |> method; (PlayerClass.ActivateClick)
(11/26/2023 11:51:20 PM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (16), Added; (Nothing)
(11/26/2023 11:51:20 PM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/26/2023 11:51:20 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 5)
(11/26/2023 11:51:20 PM) |> method; (GameLogicClass.FindPictureInList), Card Index; (7)
(11/26/2023 11:51:20 PM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (1), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 7
(11/26/2023 11:51:20 PM) |> method; (GameLogicClass.FindPictureInList), Card Index; (7)
(11/26/2023 11:51:20 PM) |> method; (GameLogicClass.CardPlay), c_card; (red) (5), error
(11/26/2023 11:51:20 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:51:20 PM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/26/2023 11:51:20 PM) |> method; (GameLogicClass.AddLogic)
(11/26/2023 11:51:20 PM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/26/2023 11:51:20 PM) |> method; (GameLogicClass.CardClickLogic), Card Index; (7), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 5), Player Index (0)
(11/26/2023 11:51:20 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:51:20 PM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/26/2023 11:51:20 PM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/26/2023 11:51:20 PM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/26/2023 11:51:20 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/26/2023 11:51:20 PM) |> method; (PlayerClass.UpdatePoints) [1145]
(11/26/2023 11:51:20 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:51:20 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 5)
(11/26/2023 11:51:20 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:51:20 PM) |> method; (CardClass.SetPBLocation), x, y; (500, 5)
(11/26/2023 11:51:20 PM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/26/2023 11:51:20 PM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/26/2023 11:51:20 PM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/26/2023 11:51:20 PM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/26/2023 11:51:20 PM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/26/2023 11:51:20 PM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/26/2023 11:51:20 PM) |> method; (CardClass.SetPBLocation), x, y; (885, 5)
(11/26/2023 11:51:20 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (885, 885)
(11/26/2023 11:51:20 PM) |> method; (PlayerClass.UpdatePoints) [993]
(11/26/2023 11:51:20 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:51:20 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 5)
(11/26/2023 11:51:20 PM) |> method; (PlayerClass.ActivateClick)
(11/26/2023 11:51:20 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (6)
(11/26/2023 11:51:20 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-8)
(11/26/2023 11:51:20 PM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (17), Added; (red 5; 5 Points)
(11/26/2023 11:51:20 PM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/26/2023 11:51:20 PM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (3)
Player1CardCount; (8)

    PlusAmount (0)
Discard Pile Count; (17), Top Card; (red, 5)
(11/26/2023 11:51:20 PM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (3)
Player1CardCount; (9)

    PlusAmount (0)
Discard Pile Count; (17), Top Card; (red, 5)
(11/26/2023 11:51:22 PM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/26/2023 11:51:22 PM) |> method; (GameLogicClass.cardPB_Click), Card Index (2)
(11/26/2023 11:51:22 PM) |> method; (GameLogicClass.CardPlay), c_card; (red) (skip), error
(11/26/2023 11:51:22 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:51:22 PM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/26/2023 11:51:22 PM) |> method; (GameLogicClass.AddLogic)
(11/26/2023 11:51:22 PM) |> method; (GameLogicClass.CardClickLogic), In skip
(11/26/2023 11:51:22 PM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/26/2023 11:51:22 PM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/26/2023 11:51:22 PM) |> method; (GameLogicClass.CardClickLogic), Card Index; (2), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, skip), Player Index (0)
(11/26/2023 11:51:22 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:51:22 PM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/26/2023 11:51:22 PM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/26/2023 11:51:22 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/26/2023 11:51:22 PM) |> method; (PlayerClass.UpdatePoints) [1157]
(11/26/2023 11:51:22 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:51:22 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red skip)
(11/26/2023 11:51:22 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:51:22 PM) |> method; (CardClass.SetPBLocation), x, y; (500, 5)
(11/26/2023 11:51:22 PM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/26/2023 11:51:22 PM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/26/2023 11:51:22 PM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/26/2023 11:51:22 PM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/26/2023 11:51:22 PM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/26/2023 11:51:22 PM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/26/2023 11:51:22 PM) |> method; (CardClass.SetPBLocation), x, y; (885, 5)
(11/26/2023 11:51:22 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (885, 885)
(11/26/2023 11:51:22 PM) |> method; (PlayerClass.UpdatePoints) [1015]
(11/26/2023 11:51:22 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:51:22 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red skip)
(11/26/2023 11:51:22 PM) |> method; (PlayerClass.ActivateClick)
(11/26/2023 11:51:22 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-1)
(11/26/2023 11:51:22 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (0)
(11/26/2023 11:51:22 PM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (18), Added; (red skip; 20 Points)
(11/26/2023 11:51:22 PM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/26/2023 11:51:22 PM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (2)
Player1CardCount; (8)

    PlusAmount (0)
Discard Pile Count; (18), Top Card; (red, skip)
(11/26/2023 11:51:22 PM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/26/2023 11:51:22 PM) |> method; (GameLogicClass.cardPB_Click), Card Index (0)
(11/26/2023 11:51:22 PM) |> method; (GameLogicClass.CardPlay), c_card; (red) (2), error
(11/26/2023 11:51:22 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:51:22 PM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/26/2023 11:51:22 PM) |> method; (GameLogicClass.AddLogic)
(11/26/2023 11:51:22 PM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/26/2023 11:51:22 PM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 2), Player Index (1)
(11/26/2023 11:51:22 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:51:22 PM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/26/2023 11:51:22 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (695, 695)
(11/26/2023 11:51:22 PM) |> method; (PlayerClass.UpdatePoints) [1167]
(11/26/2023 11:51:22 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:51:22 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 2)
(11/26/2023 11:51:22 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:51:22 PM) |> method; (CardClass.SetPBLocation), x, y; (500, 5)
(11/26/2023 11:51:22 PM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/26/2023 11:51:22 PM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/26/2023 11:51:22 PM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/26/2023 11:51:22 PM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/26/2023 11:51:22 PM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/26/2023 11:51:22 PM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/26/2023 11:51:22 PM) |> method; (CardClass.SetPBLocation), x, y; (885, 5)
(11/26/2023 11:51:22 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (885, 885)
(11/26/2023 11:51:22 PM) |> method; (PlayerClass.UpdatePoints) [1037]
(11/26/2023 11:51:22 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:51:22 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 2)
(11/26/2023 11:51:22 PM) |> method; (PlayerClass.ActivateClick)
(11/26/2023 11:51:22 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (1)
(11/26/2023 11:51:22 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (0)
(11/26/2023 11:51:22 PM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (19), Added; (red 2; 2 Points)
(11/26/2023 11:51:22 PM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/26/2023 11:51:22 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 2)
(11/26/2023 11:51:22 PM) |> method; (RandomNumber.Between), Between; (min: 0, max: 1), Value; (0)
(11/26/2023 11:51:22 PM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/26/2023 11:51:22 PM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (2), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 0
(11/26/2023 11:51:22 PM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/26/2023 11:51:22 PM) |> method; (GameLogicClass.CardPlay), c_card; (green) (2), error
(11/26/2023 11:51:22 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:51:22 PM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/26/2023 11:51:22 PM) |> method; (GameLogicClass.AddLogic)
(11/26/2023 11:51:22 PM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/26/2023 11:51:22 PM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 2), Player Index (0)
(11/26/2023 11:51:22 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:51:22 PM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/26/2023 11:51:22 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (695, 695)
(11/26/2023 11:51:22 PM) |> method; (PlayerClass.UpdatePoints) [1177]
(11/26/2023 11:51:22 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:51:22 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 2)
(11/26/2023 11:51:22 PM) |> method; (PlayerClass.DeactivateClick)
(11/26/2023 11:51:22 PM) |> method; (CardClass.SetPBLocation), x, y; (530, 5)
(11/26/2023 11:51:23 PM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/26/2023 11:51:23 PM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/26/2023 11:51:23 PM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/26/2023 11:51:23 PM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/26/2023 11:51:23 PM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/26/2023 11:51:23 PM) |> method; (CardClass.SetPBLocation), x, y; (860, 5)
(11/26/2023 11:51:23 PM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/26/2023 11:51:23 PM) |> method; (PlayerClass.UpdatePoints) [1057]
(11/26/2023 11:51:23 PM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/26/2023 11:51:23 PM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 2)
(11/26/2023 11:51:23 PM) |> method; (PlayerClass.ActivateClick)
(11/26/2023 11:51:23 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-3)
(11/26/2023 11:51:23 PM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-6)
(11/26/2023 11:51:23 PM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (20), Added; (green 2; 2 Points)
(11/26/2023 11:51:23 PM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/26/2023 11:51:23 PM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (1)
Player1CardCount; (7)

    PlusAmount (0)
Discard Pile Count; (20), Top Card; (green, 2)
(11/26/2023 11:51:23 PM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (1)
Player1CardCount; (8)

    PlusAmount (0)
Discard Pile Count; (20), Top Card; (green, 2)
(11/26/2023 11:51:24 PM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/26/2023 11:51:24 PM) |> method; (GameLogicClass.cardPB_Click), Card Index (0)
(11/26/2023 11:51:24 PM) |> method; (GameLogicClass.CardPlay), c_card; (green) (+2), add, 2
(11/26/2023 11:51:24 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:51:24 PM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/26/2023 11:51:24 PM) |> method; (GameLogicClass.CardClass)
(11/26/2023 11:51:24 PM) |> method; (RandomNumber.Between), Between; (min: 0, max: 79), Value; (16)
(11/26/2023 11:51:24 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:51:24 PM) |> method; (GameLogicClass.CardClass)
(11/26/2023 11:51:24 PM) |> method; (RandomNumber.Between), Between; (min: 0, max: 78), Value; (66)
(11/26/2023 11:51:24 PM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/26/2023 11:51:24 PM) |> method; (GameLogicClass.AddCards), cards added; (AddCards Index: 1 AddCards Index: 1 )
(11/26/2023 11:51:24 PM) |> method; (GameLogicClass.AddLogic)
(11/26/2023 11:51:24 PM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/26/2023 11:51:24 PM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, +2), Player Index (1)
(11/26/2023 11:51:24 PM) |> method; (WinConditonForm.WinConditonForm) ---------------------------------------------------
(11/26/2023 11:51:24 PM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:12 AM) |> ----------------------------------------------
(11/27/2023 12:08:12 AM) |> Method; (SetupFormClass.SetupFormClass) [Start Up]
(11/27/2023 12:08:14 AM) |> method; (SetupFormClass.twoPlayersBT_Click) [2v2; false, PlayerAmount = 2]
(11/27/2023 12:08:15 AM) |> method; (SetupFormClass.AmountOfCardsTB_TextChanged), card amount; (7)
(11/27/2023 12:08:15 AM) |> method; (SetupFormClass.AmountOfCardsTB_TextChanged), card amount; (7)
(11/27/2023 12:08:17 AM) |> method; (SetupFormClass.AmountOfCardsTB_TextChanged), card amount; (7)
(11/27/2023 12:08:18 AM) |> method; (SetupFormClass.AmountOfCardsTB_TextChanged), card amount; (71)
(11/27/2023 12:08:19 AM) |> method; (SetupFormClass.AmountOfCardsTB_TextChanged), card amount; (1)
(11/27/2023 12:08:20 AM) |> method; (SetupFormClass.doneBT_Click)
(11/27/2023 12:08:20 AM) |> method; (Form_PauseMenu.Form_PauseMenu)
(11/27/2023 12:08:20 AM) |> method; (GameForm.GameForm), Width: (1440), Height; (870), Size; ({Width=1440, Height=870})
(11/27/2023 12:08:20 AM) |> method; (PlayerClass.PlayerClass) [Player init], is AI (False), Team; (1)
(11/27/2023 12:08:20 AM) |> method; (AIClass.AIClass()) [AI INIT]
(11/27/2023 12:08:20 AM) |> method; (PlayerClass.PlayerClass) [Player init], is AI (True), Team; (1)
(11/27/2023 12:08:20 AM) |> method; (GameLogicClass.MakeDrawPile)
(11/27/2023 12:08:20 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (0),
    NormalPoints; (0),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_0.png)
(11/27/2023 12:08:20 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (1),
    NormalPoints; (1),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_1.png)
(11/27/2023 12:08:20 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (2),
    NormalPoints; (2),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_2.png)
(11/27/2023 12:08:20 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (3),
    NormalPoints; (3),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_3.png)
(11/27/2023 12:08:20 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (4),
    NormalPoints; (4),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_4.png)
(11/27/2023 12:08:20 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (5),
    NormalPoints; (5),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_5.png)
(11/27/2023 12:08:20 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (6),
    NormalPoints; (6),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_6.png)
(11/27/2023 12:08:20 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (7),
    NormalPoints; (7),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_7.png)
(11/27/2023 12:08:20 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (8),
    NormalPoints; (8),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_8.png)
(11/27/2023 12:08:20 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (9),
    NormalPoints; (9),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_9.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (+),
    NormalPoints; (10),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_+2.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (r),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_reverse.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (s),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_skip.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (0),
    NormalPoints; (0),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_0.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (1),
    NormalPoints; (1),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_1.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (2),
    NormalPoints; (2),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_2.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (3),
    NormalPoints; (3),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_3.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (4),
    NormalPoints; (4),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_4.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (5),
    NormalPoints; (5),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_5.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (6),
    NormalPoints; (6),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_6.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (7),
    NormalPoints; (7),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_7.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (8),
    NormalPoints; (8),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_8.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (9),
    NormalPoints; (9),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_9.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (+),
    NormalPoints; (10),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_+2.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (r),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_reverse.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (s),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_skip.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (0),
    NormalPoints; (0),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_0.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (1),
    NormalPoints; (1),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_1.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (2),
    NormalPoints; (2),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_2.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (3),
    NormalPoints; (3),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_3.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (4),
    NormalPoints; (4),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_4.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (5),
    NormalPoints; (5),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_5.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (6),
    NormalPoints; (6),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_6.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (7),
    NormalPoints; (7),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_7.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (8),
    NormalPoints; (8),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_8.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (9),
    NormalPoints; (9),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_9.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (+),
    NormalPoints; (10),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_+2.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (r),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_reverse.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (s),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_skip.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (0),
    NormalPoints; (0),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_0.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (1),
    NormalPoints; (1),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_1.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (2),
    NormalPoints; (2),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_2.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (3),
    NormalPoints; (3),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_3.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (4),
    NormalPoints; (4),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_4.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (5),
    NormalPoints; (5),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_5.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (6),
    NormalPoints; (6),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_6.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (7),
    NormalPoints; (7),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_7.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (8),
    NormalPoints; (8),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_8.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (9),
    NormalPoints; (9),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_9.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (+),
    NormalPoints; (10),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_+2.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (r),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_reverse.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (s),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_skip.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (1),
    NormalPoints; (1),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_1.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (2),
    NormalPoints; (2),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_2.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (3),
    NormalPoints; (3),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_3.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (4),
    NormalPoints; (4),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_4.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (5),
    NormalPoints; (5),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_5.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (6),
    NormalPoints; (6),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_6.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (7),
    NormalPoints; (7),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_7.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (8),
    NormalPoints; (8),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_8.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (9),
    NormalPoints; (9),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_9.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (+),
    NormalPoints; (10),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_+2.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (r),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_reverse.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (s),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_skip.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (1),
    NormalPoints; (1),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_1.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (2),
    NormalPoints; (2),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_2.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (3),
    NormalPoints; (3),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_3.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (4),
    NormalPoints; (4),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_4.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (5),
    NormalPoints; (5),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_5.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (6),
    NormalPoints; (6),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_6.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (7),
    NormalPoints; (7),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_7.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (8),
    NormalPoints; (8),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_8.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (9),
    NormalPoints; (9),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_9.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (+),
    NormalPoints; (10),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_+2.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (r),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_reverse.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (s),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_skip.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (1),
    NormalPoints; (1),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_1.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (2),
    NormalPoints; (2),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_2.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (3),
    NormalPoints; (3),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_3.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (4),
    NormalPoints; (4),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_4.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (5),
    NormalPoints; (5),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_5.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (6),
    NormalPoints; (6),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_6.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (7),
    NormalPoints; (7),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_7.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (8),
    NormalPoints; (8),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_8.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (9),
    NormalPoints; (9),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_9.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (+),
    NormalPoints; (10),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_+2.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (r),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_reverse.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (s),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_skip.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (1),
    NormalPoints; (1),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_1.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (2),
    NormalPoints; (2),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_2.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (3),
    NormalPoints; (3),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_3.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (4),
    NormalPoints; (4),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_4.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (5),
    NormalPoints; (5),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_5.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (6),
    NormalPoints; (6),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_6.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (7),
    NormalPoints; (7),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_7.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (8),
    NormalPoints; (8),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_8.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (9),
    NormalPoints; (9),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_9.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (+),
    NormalPoints; (10),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_+2.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (r),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_reverse.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (s),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_skip.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (w),
    NormalNumber; (+),
    NormalPoints; (50),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\wild_+4_wild.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (w),
    NormalNumber; (+),
    NormalPoints; (50),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\wild_+4_wild.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (w),
    NormalNumber; (+),
    NormalPoints; (50),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\wild_+4_wild.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (w),
    NormalNumber; (+),
    NormalPoints; (50),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\wild_+4_wild.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (w),
    NormalNumber; (w),
    NormalPoints; (40),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\wild_wild.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (w),
    NormalNumber; (w),
    NormalPoints; (40),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\wild_wild.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (w),
    NormalNumber; (w),
    NormalPoints; (40),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\wild_wild.png)
(11/27/2023 12:08:21 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (w),
    NormalNumber; (w),
    NormalPoints; (40),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\wild_wild.png)
(11/27/2023 12:08:21 AM) |> method; (GameLogicClass.Deal)
(11/27/2023 12:08:21 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:08:21 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 107), Value; (2)
(11/27/2023 12:08:21 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:21 AM) |> method; (GameLogicClass.Deal)
(11/27/2023 12:08:21 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:08:21 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 106), Value; (19)
(11/27/2023 12:08:21 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:21 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:08:21 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 105), Value; (84)
(11/27/2023 12:08:21 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:21 AM) |> method; (GameLogicClass.DisplayDrawPile) [drew stuff]
(11/27/2023 12:08:21 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], Gamerules;
    do_DrawtoMatch (False),
    do_Flip (False),
    do_ChianAdds (False),
    do_2v2 (False, teams (1, 1, 3, 4)
    Player Amount (2)
    Card Amount (1)
Player Index; (0), Discard Pile Count; (1), Top Card; (System.Drawing.Bitmap)
(11/27/2023 12:08:21 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:21 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:08:21 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (695, 695)
(11/27/2023 12:08:21 AM) |> method; (PlayerClass.UpdatePoints) [2]
(11/27/2023 12:08:21 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:21 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green reverse)
(11/27/2023 12:08:21 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:21 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:08:21 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (695, 695)
(11/27/2023 12:08:21 AM) |> method; (PlayerClass.UpdatePoints) [7]
(11/27/2023 12:08:21 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:21 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green reverse)
(11/27/2023 12:08:21 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:21 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (6)
(11/27/2023 12:08:21 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (0)
(11/27/2023 12:08:21 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (1), Added; (green reverse; 20 Points)
(11/27/2023 12:08:21 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:21 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (1)
Player1CardCount; (1)

    PlusAmount (0)
Discard Pile Count; (1), Top Card; (green, reverse)
(11/27/2023 12:08:23 AM) |> method; (GameLogicClass.DrawPile_Clicked)
(11/27/2023 12:08:23 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:08:23 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 104), Value; (4)
(11/27/2023 12:08:23 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:23 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:08:23 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (1), add one
(11/27/2023 12:08:23 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:23 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:08:23 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:08:23 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:08:23 AM) |> method; (PlayerClass.UpdatePoints) [9]
(11/27/2023 12:08:23 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:23 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green reverse)
(11/27/2023 12:08:23 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:23 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:08:23 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (695, 695)
(11/27/2023 12:08:23 AM) |> method; (PlayerClass.UpdatePoints) [14]
(11/27/2023 12:08:23 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:23 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green reverse)
(11/27/2023 12:08:23 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:23 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (1), Added; (Nothing)
(11/27/2023 12:08:23 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:23 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green reverse)
(11/27/2023 12:08:23 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:08:23 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 103), Value; (93)
(11/27/2023 12:08:23 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:23 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:08:23 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/27/2023 12:08:23 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:23 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:08:23 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:08:23 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:08:23 AM) |> method; (PlayerClass.UpdatePoints) [16]
(11/27/2023 12:08:23 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:23 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green reverse)
(11/27/2023 12:08:23 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:23 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:08:23 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:08:23 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:08:23 AM) |> method; (PlayerClass.UpdatePoints) [31]
(11/27/2023 12:08:23 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:23 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green reverse)
(11/27/2023 12:08:24 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:24 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (1), Added; (Nothing)
(11/27/2023 12:08:24 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:24 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (2)
Player1CardCount; (2)

    PlusAmount (0)
Discard Pile Count; (1), Top Card; (green, reverse)
(11/27/2023 12:08:24 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (2)
Player1CardCount; (1)

    PlusAmount (0)
Discard Pile Count; (1), Top Card; (green, reverse)
(11/27/2023 12:08:25 AM) |> method; (GameLogicClass.DrawPile_Clicked)
(11/27/2023 12:08:25 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:08:25 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 102), Value; (38)
(11/27/2023 12:08:25 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:25 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:08:25 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (1), add one
(11/27/2023 12:08:25 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:25 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:08:25 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:08:25 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:08:25 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:08:25 AM) |> method; (PlayerClass.UpdatePoints) [25]
(11/27/2023 12:08:25 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:25 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green reverse)
(11/27/2023 12:08:25 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:25 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:08:25 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:08:25 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:08:25 AM) |> method; (PlayerClass.UpdatePoints) [48]
(11/27/2023 12:08:25 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:25 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green reverse)
(11/27/2023 12:08:25 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:25 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (1), Added; (Nothing)
(11/27/2023 12:08:25 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:25 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green reverse)
(11/27/2023 12:08:25 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:08:25 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 101), Value; (4)
(11/27/2023 12:08:25 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:25 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:08:25 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/27/2023 12:08:25 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:25 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:08:25 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:08:25 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:08:25 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:08:25 AM) |> method; (PlayerClass.UpdatePoints) [34]
(11/27/2023 12:08:25 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:25 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green reverse)
(11/27/2023 12:08:25 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:25 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:08:25 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:08:25 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:08:25 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:08:25 AM) |> method; (PlayerClass.UpdatePoints) [71]
(11/27/2023 12:08:25 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:25 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green reverse)
(11/27/2023 12:08:25 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:25 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (1), Added; (Nothing)
(11/27/2023 12:08:25 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:25 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (3)
Player1CardCount; (3)

    PlusAmount (0)
Discard Pile Count; (1), Top Card; (green, reverse)
(11/27/2023 12:08:25 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (3)
Player1CardCount; (2)

    PlusAmount (0)
Discard Pile Count; (1), Top Card; (green, reverse)
(11/27/2023 12:08:27 AM) |> method; (GameLogicClass.DrawPile_Clicked)
(11/27/2023 12:08:27 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:08:27 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 100), Value; (57)
(11/27/2023 12:08:27 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:27 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:08:27 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (1), add one
(11/27/2023 12:08:27 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:27 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:08:27 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:08:27 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:08:27 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:08:27 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:08:27 AM) |> method; (PlayerClass.UpdatePoints) [63]
(11/27/2023 12:08:27 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:27 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green reverse)
(11/27/2023 12:08:27 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:27 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:08:27 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:08:27 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:08:27 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:08:27 AM) |> method; (PlayerClass.UpdatePoints) [94]
(11/27/2023 12:08:27 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:27 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green reverse)
(11/27/2023 12:08:27 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:27 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (1), Added; (Nothing)
(11/27/2023 12:08:27 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:27 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green reverse)
(11/27/2023 12:08:27 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:08:27 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 99), Value; (21)
(11/27/2023 12:08:27 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:27 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:08:27 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/27/2023 12:08:27 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:27 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:08:27 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:08:27 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:08:27 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:08:27 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:08:27 AM) |> method; (PlayerClass.UpdatePoints) [92]
(11/27/2023 12:08:27 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:27 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green reverse)
(11/27/2023 12:08:27 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:27 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:08:27 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:08:27 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:08:27 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:08:27 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:08:27 AM) |> method; (PlayerClass.UpdatePoints) [137]
(11/27/2023 12:08:27 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:27 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green reverse)
(11/27/2023 12:08:27 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:27 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (1), Added; (Nothing)
(11/27/2023 12:08:27 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:27 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (4)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (1), Top Card; (green, reverse)
(11/27/2023 12:08:27 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (4)
Player1CardCount; (3)

    PlusAmount (0)
Discard Pile Count; (1), Top Card; (green, reverse)
(11/27/2023 12:08:28 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (3)
(11/27/2023 12:08:28 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (3)
(11/27/2023 12:08:28 AM) |> method; (GameLogicClass.CardPlay), c_card; (red) (reverse), reverce, True
(11/27/2023 12:08:28 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:28 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:08:28 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:08:28 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:08:28 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (3), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, reverse), Player Index (1)
(11/27/2023 12:08:28 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:28 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:08:28 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:08:28 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:08:28 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:08:28 AM) |> method; (PlayerClass.UpdatePoints) [101]
(11/27/2023 12:08:29 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:29 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red reverse)
(11/27/2023 12:08:29 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:29 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:08:29 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:08:29 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:08:29 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:08:29 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:08:29 AM) |> method; (PlayerClass.UpdatePoints) [180]
(11/27/2023 12:08:29 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:29 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red reverse)
(11/27/2023 12:08:29 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:29 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (0)
(11/27/2023 12:08:29 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-2)
(11/27/2023 12:08:29 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (2), Added; (red reverse; 20 Points)
(11/27/2023 12:08:29 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:29 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red reverse)
(11/27/2023 12:08:29 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/27/2023 12:08:29 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (1), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 2
(11/27/2023 12:08:29 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/27/2023 12:08:29 AM) |> method; (GameLogicClass.CardPlay), c_card; (red) (6), error
(11/27/2023 12:08:29 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:29 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:08:29 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:08:29 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:08:29 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (2), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 6), Player Index (0)
(11/27/2023 12:08:29 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:29 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:08:29 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:08:29 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:08:29 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:08:29 AM) |> method; (PlayerClass.UpdatePoints) [110]
(11/27/2023 12:08:29 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:29 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 6)
(11/27/2023 12:08:29 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:29 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:08:29 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:08:29 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:08:29 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:08:29 AM) |> method; (PlayerClass.UpdatePoints) [217]
(11/27/2023 12:08:29 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:29 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 6)
(11/27/2023 12:08:29 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:29 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-3)
(11/27/2023 12:08:29 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (5)
(11/27/2023 12:08:29 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (3), Added; (red 6; 6 Points)
(11/27/2023 12:08:29 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:29 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (3)
Player1CardCount; (3)

    PlusAmount (0)
Discard Pile Count; (3), Top Card; (red, 6)
(11/27/2023 12:08:29 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (3)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (3), Top Card; (red, 6)
(11/27/2023 12:08:30 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (1)
(11/27/2023 12:08:30 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (1)
(11/27/2023 12:08:30 AM) |> method; (GameLogicClass.CardPlay), c_card; (red) (5), error
(11/27/2023 12:08:30 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:30 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:08:30 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:08:30 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:08:30 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (1), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 5), Player Index (1)
(11/27/2023 12:08:30 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:30 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:08:30 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:08:30 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:08:30 AM) |> method; (PlayerClass.UpdatePoints) [114]
(11/27/2023 12:08:30 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:30 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 5)
(11/27/2023 12:08:30 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:30 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:08:30 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:08:30 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:08:30 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:08:30 AM) |> method; (PlayerClass.UpdatePoints) [254]
(11/27/2023 12:08:30 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:30 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 5)
(11/27/2023 12:08:30 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:30 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (3)
(11/27/2023 12:08:30 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (1)
(11/27/2023 12:08:30 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (4), Added; (red 5; 5 Points)
(11/27/2023 12:08:30 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:30 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 5)
(11/27/2023 12:08:30 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:08:30 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 98), Value; (8)
(11/27/2023 12:08:30 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:30 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:08:30 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/27/2023 12:08:30 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:30 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:08:30 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:08:30 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:08:30 AM) |> method; (PlayerClass.UpdatePoints) [118]
(11/27/2023 12:08:30 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:30 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 5)
(11/27/2023 12:08:30 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:30 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:08:30 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:08:30 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:08:30 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:08:30 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:08:30 AM) |> method; (PlayerClass.UpdatePoints) [311]
(11/27/2023 12:08:30 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:30 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 5)
(11/27/2023 12:08:30 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:30 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (4), Added; (Nothing)
(11/27/2023 12:08:30 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:30 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (2)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (4), Top Card; (red, 5)
(11/27/2023 12:08:30 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (2)
Player1CardCount; (3)

    PlusAmount (0)
Discard Pile Count; (4), Top Card; (red, 5)
(11/27/2023 12:08:31 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:08:31 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (0)
(11/27/2023 12:08:31 AM) |> method; (GameLogicClass.CardPlay), c_card; (red) (2), error
(11/27/2023 12:08:31 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:31 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:08:31 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:08:31 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:08:31 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 2), Player Index (1)
(11/27/2023 12:08:31 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:31 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:08:31 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (695, 695)
(11/27/2023 12:08:31 AM) |> method; (PlayerClass.UpdatePoints) [120]
(11/27/2023 12:08:31 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:31 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 2)
(11/27/2023 12:08:31 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:31 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:08:31 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:08:31 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:08:31 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:08:31 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:08:31 AM) |> method; (PlayerClass.UpdatePoints) [368]
(11/27/2023 12:08:31 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:31 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 2)
(11/27/2023 12:08:31 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:31 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-5)
(11/27/2023 12:08:31 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-1)
(11/27/2023 12:08:31 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (5), Added; (red 2; 2 Points)
(11/27/2023 12:08:31 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:31 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 2)
(11/27/2023 12:08:31 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (3)
(11/27/2023 12:08:31 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (1), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 3
(11/27/2023 12:08:31 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (3)
(11/27/2023 12:08:31 AM) |> method; (GameLogicClass.CardPlay), c_card; (red) (reverse), reverce, False
(11/27/2023 12:08:31 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:31 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:08:31 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:08:31 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:08:31 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (3), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, reverse), Player Index (0)
(11/27/2023 12:08:31 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:31 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:08:31 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (695, 695)
(11/27/2023 12:08:31 AM) |> method; (PlayerClass.UpdatePoints) [122]
(11/27/2023 12:08:31 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:31 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red reverse)
(11/27/2023 12:08:31 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:31 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:08:31 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:08:31 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:08:31 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:08:31 AM) |> method; (PlayerClass.UpdatePoints) [405]
(11/27/2023 12:08:31 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:31 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red reverse)
(11/27/2023 12:08:31 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:31 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (8)
(11/27/2023 12:08:31 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-1)
(11/27/2023 12:08:31 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (6), Added; (red reverse; 20 Points)
(11/27/2023 12:08:31 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:31 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (1)
Player1CardCount; (3)

    PlusAmount (0)
Discard Pile Count; (6), Top Card; (red, reverse)
(11/27/2023 12:08:31 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (1)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (6), Top Card; (red, reverse)
(11/27/2023 12:08:32 AM) |> method; (GameLogicClass.DrawPile_Clicked)
(11/27/2023 12:08:32 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:08:32 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 97), Value; (78)
(11/27/2023 12:08:32 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:32 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:08:32 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (1), add one
(11/27/2023 12:08:32 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:32 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:08:32 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:08:32 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:08:32 AM) |> method; (PlayerClass.UpdatePoints) [144]
(11/27/2023 12:08:32 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:32 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red reverse)
(11/27/2023 12:08:32 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:32 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:08:32 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:08:32 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:08:32 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:08:32 AM) |> method; (PlayerClass.UpdatePoints) [442]
(11/27/2023 12:08:33 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:33 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red reverse)
(11/27/2023 12:08:33 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:33 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (6), Added; (Nothing)
(11/27/2023 12:08:33 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:33 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red reverse)
(11/27/2023 12:08:33 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:08:33 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 96), Value; (80)
(11/27/2023 12:08:33 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:33 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:08:33 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/27/2023 12:08:33 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:33 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:08:33 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:08:33 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:08:33 AM) |> method; (PlayerClass.UpdatePoints) [166]
(11/27/2023 12:08:33 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:33 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red reverse)
(11/27/2023 12:08:33 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:33 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:08:33 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:08:33 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:08:33 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:08:33 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:08:33 AM) |> method; (PlayerClass.UpdatePoints) [482]
(11/27/2023 12:08:33 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:33 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red reverse)
(11/27/2023 12:08:33 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:33 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (6), Added; (Nothing)
(11/27/2023 12:08:33 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:33 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (2)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (6), Top Card; (red, reverse)
(11/27/2023 12:08:33 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (2)
Player1CardCount; (3)

    PlusAmount (0)
Discard Pile Count; (6), Top Card; (red, reverse)
(11/27/2023 12:08:34 AM) |> method; (GameLogicClass.DrawPile_Clicked)
(11/27/2023 12:08:34 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:08:34 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 95), Value; (92)
(11/27/2023 12:08:34 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:34 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:08:34 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (1), add one
(11/27/2023 12:08:34 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:34 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:08:34 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:08:34 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:08:34 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:08:34 AM) |> method; (PlayerClass.UpdatePoints) [228]
(11/27/2023 12:08:34 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:34 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red reverse)
(11/27/2023 12:08:34 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:34 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:08:34 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:08:34 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:08:34 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:08:34 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:08:34 AM) |> method; (PlayerClass.UpdatePoints) [522]
(11/27/2023 12:08:34 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:34 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red reverse)
(11/27/2023 12:08:34 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:34 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (6), Added; (Nothing)
(11/27/2023 12:08:34 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:34 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red reverse)
(11/27/2023 12:08:34 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:08:34 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 94), Value; (35)
(11/27/2023 12:08:34 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:34 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:08:34 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/27/2023 12:08:34 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:34 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:08:34 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:08:34 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:08:34 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:08:34 AM) |> method; (PlayerClass.UpdatePoints) [290]
(11/27/2023 12:08:34 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:34 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red reverse)
(11/27/2023 12:08:34 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:34 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:08:34 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:08:34 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:08:34 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:08:34 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:08:34 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:08:34 AM) |> method; (PlayerClass.UpdatePoints) [565]
(11/27/2023 12:08:34 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:34 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red reverse)
(11/27/2023 12:08:34 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:34 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (6), Added; (Nothing)
(11/27/2023 12:08:34 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:34 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (3)
Player1CardCount; (5)

    PlusAmount (0)
Discard Pile Count; (6), Top Card; (red, reverse)
(11/27/2023 12:08:34 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (3)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (6), Top Card; (red, reverse)
(11/27/2023 12:08:35 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/27/2023 12:08:35 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (2)
(11/27/2023 12:08:35 AM) |> method; (wildFormClass.wildFormClass)
(11/27/2023 12:08:36 AM) |> method; (wildFormClass.blueBT_Click) [this.Tag = blue]
(11/27/2023 12:08:37 AM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (wild), wild, blue
(11/27/2023 12:08:37 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:37 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:08:37 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:08:37 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:08:37 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (2), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, wild), Player Index (1)
(11/27/2023 12:08:37 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:37 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:08:37 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:08:37 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:08:37 AM) |> method; (PlayerClass.UpdatePoints) [312]
(11/27/2023 12:08:37 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:37 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue wild)
(11/27/2023 12:08:37 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:37 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:08:37 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:08:37 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:08:37 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:08:37 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:08:37 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:08:37 AM) |> method; (PlayerClass.UpdatePoints) [608]
(11/27/2023 12:08:37 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:37 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue wild)
(11/27/2023 12:08:37 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:37 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (0)
(11/27/2023 12:08:37 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-5)
(11/27/2023 12:08:37 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (7), Added; (blue wild; 40 Points)
(11/27/2023 12:08:37 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:37 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue wild)
(11/27/2023 12:08:37 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 2), Value; (0)
(11/27/2023 12:08:37 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (1)
(11/27/2023 12:08:37 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (3), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 1
(11/27/2023 12:08:37 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (1)
(11/27/2023 12:08:37 AM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (+2), add, 2
(11/27/2023 12:08:37 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:37 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:08:37 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:08:37 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 93), Value; (75)
(11/27/2023 12:08:37 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:37 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:08:37 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 92), Value; (85)
(11/27/2023 12:08:37 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:37 AM) |> method; (GameLogicClass.AddCards), cards added; (AddCards Index: 0 AddCards Index: 0 )
(11/27/2023 12:08:37 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:08:37 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:08:37 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (1), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, +2), Player Index (0)
(11/27/2023 12:08:37 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:37 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:08:37 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:08:37 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:08:37 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:08:37 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:08:37 AM) |> method; (PlayerClass.UpdatePoints) [363]
(11/27/2023 12:08:37 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:37 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue +2)
(11/27/2023 12:08:37 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:37 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:08:37 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:08:37 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:08:37 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:08:37 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:08:37 AM) |> method; (PlayerClass.UpdatePoints) [641]
(11/27/2023 12:08:37 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:37 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue +2)
(11/27/2023 12:08:37 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:37 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (4)
(11/27/2023 12:08:37 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-10)
(11/27/2023 12:08:37 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (8), Added; (blue +2; 10 Points)
(11/27/2023 12:08:37 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:37 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (4)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (8), Top Card; (blue, +2)
(11/27/2023 12:08:37 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (2)
Player1CardCount; (5)

    PlusAmount (0)
Discard Pile Count; (8), Top Card; (blue, +2)
(11/27/2023 12:08:37 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (1)
(11/27/2023 12:08:37 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (1)
(11/27/2023 12:08:39 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (3)
(11/27/2023 12:08:39 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (3)
(11/27/2023 12:08:39 AM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (skip), error
(11/27/2023 12:08:39 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:39 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:08:39 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:08:39 AM) |> method; (GameLogicClass.CardClickLogic), In skip
(11/27/2023 12:08:39 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:08:39 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:08:39 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (3), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, skip), Player Index (0)
(11/27/2023 12:08:39 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:39 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:08:39 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:08:39 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:08:39 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:08:39 AM) |> method; (PlayerClass.UpdatePoints) [394]
(11/27/2023 12:08:39 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:39 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue skip)
(11/27/2023 12:08:39 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:39 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:08:39 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:08:39 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:08:39 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:08:39 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:08:39 AM) |> method; (PlayerClass.UpdatePoints) [674]
(11/27/2023 12:08:39 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:39 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue skip)
(11/27/2023 12:08:39 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:39 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-8)
(11/27/2023 12:08:39 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-1)
(11/27/2023 12:08:39 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (9), Added; (blue skip; 20 Points)
(11/27/2023 12:08:39 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:39 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (3)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (9), Top Card; (blue, skip)
(11/27/2023 12:08:40 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (1)
(11/27/2023 12:08:40 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (1)
(11/27/2023 12:08:40 AM) |> method; (GameLogicClass.CardPlay), c_card; (green) (skip), error
(11/27/2023 12:08:40 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:40 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:08:40 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:08:40 AM) |> method; (GameLogicClass.CardClickLogic), In skip
(11/27/2023 12:08:40 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:08:40 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:08:40 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (1), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, skip), Player Index (0)
(11/27/2023 12:08:40 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:40 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:08:40 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:08:40 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:08:40 AM) |> method; (PlayerClass.UpdatePoints) [405]
(11/27/2023 12:08:40 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:40 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green skip)
(11/27/2023 12:08:40 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:40 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:08:40 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:08:40 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:08:40 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:08:40 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:08:40 AM) |> method; (PlayerClass.UpdatePoints) [707]
(11/27/2023 12:08:40 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:40 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green skip)
(11/27/2023 12:08:40 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:40 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-2)
(11/27/2023 12:08:40 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (7)
(11/27/2023 12:08:40 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (10), Added; (green skip; 20 Points)
(11/27/2023 12:08:40 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:40 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (2)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (10), Top Card; (green, skip)
(11/27/2023 12:08:40 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (1)
(11/27/2023 12:08:40 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (1)
(11/27/2023 12:08:40 AM) |> method; (GameLogicClass.CardPlay), c_card; (green) (9), error
(11/27/2023 12:08:40 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:40 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:08:40 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:08:40 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:08:40 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (1), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 9), Player Index (1)
(11/27/2023 12:08:40 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:40 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:08:40 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (695, 695)
(11/27/2023 12:08:40 AM) |> method; (PlayerClass.UpdatePoints) [407]
(11/27/2023 12:08:40 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:40 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green 9)
(11/27/2023 12:08:40 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:40 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:08:40 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:08:40 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:08:40 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:08:40 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:08:40 AM) |> method; (PlayerClass.UpdatePoints) [740]
(11/27/2023 12:08:40 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:40 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green 9)
(11/27/2023 12:08:40 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:40 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (5)
(11/27/2023 12:08:40 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-7)
(11/27/2023 12:08:40 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (11), Added; (green 9; 9 Points)
(11/27/2023 12:08:40 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:40 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green 9)
(11/27/2023 12:08:40 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:08:40 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 91), Value; (31)
(11/27/2023 12:08:40 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:40 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:08:40 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/27/2023 12:08:40 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:40 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:08:40 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (695, 695)
(11/27/2023 12:08:40 AM) |> method; (PlayerClass.UpdatePoints) [409]
(11/27/2023 12:08:40 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:40 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green 9)
(11/27/2023 12:08:40 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:40 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:08:40 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:08:40 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:08:40 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:08:40 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:08:40 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:08:40 AM) |> method; (PlayerClass.UpdatePoints) [793]
(11/27/2023 12:08:41 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:41 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 9)
(11/27/2023 12:08:41 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:41 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (11), Added; (Nothing)
(11/27/2023 12:08:41 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:41 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (1)
Player1CardCount; (5)

    PlusAmount (0)
Discard Pile Count; (11), Top Card; (green, 9)
(11/27/2023 12:08:41 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (1)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (11), Top Card; (green, 9)
(11/27/2023 12:08:42 AM) |> method; (GameLogicClass.DrawPile_Clicked)
(11/27/2023 12:08:42 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:08:42 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 90), Value; (52)
(11/27/2023 12:08:42 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:42 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:08:42 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (1), add one
(11/27/2023 12:08:42 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:42 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:08:42 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:08:42 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:08:42 AM) |> method; (PlayerClass.UpdatePoints) [421]
(11/27/2023 12:08:42 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:42 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green 9)
(11/27/2023 12:08:42 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:42 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:08:42 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:08:42 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:08:42 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:08:42 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:08:42 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:08:42 AM) |> method; (PlayerClass.UpdatePoints) [846]
(11/27/2023 12:08:42 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:42 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 9)
(11/27/2023 12:08:42 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:42 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (11), Added; (Nothing)
(11/27/2023 12:08:42 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:42 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 9)
(11/27/2023 12:08:42 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (4)
(11/27/2023 12:08:42 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (1), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 4
(11/27/2023 12:08:42 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (4)
(11/27/2023 12:08:42 AM) |> method; (GameLogicClass.CardPlay), c_card; (green) (reverse), reverce, True
(11/27/2023 12:08:43 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:43 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:08:43 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:08:43 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:08:43 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (4), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, reverse), Player Index (0)
(11/27/2023 12:08:43 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:43 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:08:43 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:08:43 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:08:43 AM) |> method; (PlayerClass.UpdatePoints) [433]
(11/27/2023 12:08:43 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:43 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green reverse)
(11/27/2023 12:08:43 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:43 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:08:43 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:08:43 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:08:43 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:08:43 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:08:43 AM) |> method; (PlayerClass.UpdatePoints) [879]
(11/27/2023 12:08:43 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:43 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green reverse)
(11/27/2023 12:08:43 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:43 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-3)
(11/27/2023 12:08:43 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-6)
(11/27/2023 12:08:43 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (12), Added; (green reverse; 20 Points)
(11/27/2023 12:08:43 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:43 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (2)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (12), Top Card; (green, reverse)
(11/27/2023 12:08:43 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (2)
Player1CardCount; (5)

    PlusAmount (0)
Discard Pile Count; (12), Top Card; (green, reverse)
(11/27/2023 12:08:44 AM) |> method; (GameLogicClass.DrawPile_Clicked)
(11/27/2023 12:08:44 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:08:44 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 89), Value; (17)
(11/27/2023 12:08:44 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:44 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:08:44 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (1), add one
(11/27/2023 12:08:44 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:44 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:08:44 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:08:44 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:08:44 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:08:44 AM) |> method; (PlayerClass.UpdatePoints) [454]
(11/27/2023 12:08:44 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:44 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green reverse)
(11/27/2023 12:08:44 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:44 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:08:44 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:08:44 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:08:44 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:08:44 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:08:44 AM) |> method; (PlayerClass.UpdatePoints) [912]
(11/27/2023 12:08:44 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:44 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green reverse)
(11/27/2023 12:08:44 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:44 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (12), Added; (Nothing)
(11/27/2023 12:08:44 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:44 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green reverse)
(11/27/2023 12:08:44 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:08:44 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 88), Value; (35)
(11/27/2023 12:08:44 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:44 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:08:44 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/27/2023 12:08:44 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:44 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:08:44 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:08:44 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:08:44 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:08:44 AM) |> method; (PlayerClass.UpdatePoints) [475]
(11/27/2023 12:08:44 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:44 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green reverse)
(11/27/2023 12:08:44 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:44 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:08:44 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:08:44 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:08:44 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:08:44 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:08:44 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:08:44 AM) |> method; (PlayerClass.UpdatePoints) [951]
(11/27/2023 12:08:44 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:44 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green reverse)
(11/27/2023 12:08:44 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:44 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (12), Added; (Nothing)
(11/27/2023 12:08:44 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:44 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (3)
Player1CardCount; (5)

    PlusAmount (0)
Discard Pile Count; (12), Top Card; (green, reverse)
(11/27/2023 12:08:44 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (3)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (12), Top Card; (green, reverse)
(11/27/2023 12:08:45 AM) |> method; (GameLogicClass.DrawPile_Clicked)
(11/27/2023 12:08:45 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:08:45 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 87), Value; (70)
(11/27/2023 12:08:45 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:45 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:08:45 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (1), add one
(11/27/2023 12:08:45 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:45 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:08:45 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:08:45 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:08:45 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:08:45 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:08:45 AM) |> method; (PlayerClass.UpdatePoints) [504]
(11/27/2023 12:08:45 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:45 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green reverse)
(11/27/2023 12:08:45 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:45 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:08:45 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:08:45 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:08:45 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:08:45 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:08:45 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:08:45 AM) |> method; (PlayerClass.UpdatePoints) [990]
(11/27/2023 12:08:45 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:45 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green reverse)
(11/27/2023 12:08:45 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:45 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (12), Added; (Nothing)
(11/27/2023 12:08:45 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:45 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green reverse)
(11/27/2023 12:08:45 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:08:45 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 86), Value; (70)
(11/27/2023 12:08:45 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:45 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:08:45 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/27/2023 12:08:45 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:45 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:08:45 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:08:45 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:08:45 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:08:45 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:08:45 AM) |> method; (PlayerClass.UpdatePoints) [533]
(11/27/2023 12:08:45 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:45 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green reverse)
(11/27/2023 12:08:45 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:45 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/27/2023 12:08:45 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:08:45 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:08:45 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:08:45 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:08:45 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/27/2023 12:08:45 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:08:45 AM) |> method; (PlayerClass.UpdatePoints) [1039]
(11/27/2023 12:08:45 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:45 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green reverse)
(11/27/2023 12:08:45 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:45 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (12), Added; (Nothing)
(11/27/2023 12:08:45 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:45 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (4)
Player1CardCount; (6)

    PlusAmount (0)
Discard Pile Count; (12), Top Card; (green, reverse)
(11/27/2023 12:08:45 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (4)
Player1CardCount; (5)

    PlusAmount (0)
Discard Pile Count; (12), Top Card; (green, reverse)
(11/27/2023 12:08:46 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (3)
(11/27/2023 12:08:46 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (3)
(11/27/2023 12:08:46 AM) |> method; (GameLogicClass.CardPlay), c_card; (green) (8), error
(11/27/2023 12:08:46 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:46 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:08:46 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:08:46 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:08:46 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (3), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 8), Player Index (1)
(11/27/2023 12:08:46 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:46 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:08:46 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:08:46 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:08:46 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:08:46 AM) |> method; (PlayerClass.UpdatePoints) [554]
(11/27/2023 12:08:46 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:46 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green 8)
(11/27/2023 12:08:46 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:46 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/27/2023 12:08:46 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:08:46 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:08:46 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:08:46 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:08:46 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/27/2023 12:08:46 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:08:46 AM) |> method; (PlayerClass.UpdatePoints) [1088]
(11/27/2023 12:08:46 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:46 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 8)
(11/27/2023 12:08:46 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:46 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (4)
(11/27/2023 12:08:46 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (0)
(11/27/2023 12:08:46 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (13), Added; (green 8; 8 Points)
(11/27/2023 12:08:46 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:46 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 8)
(11/27/2023 12:08:46 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (5)
(11/27/2023 12:08:46 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (1), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 5
(11/27/2023 12:08:46 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (5)
(11/27/2023 12:08:46 AM) |> method; (GameLogicClass.CardPlay), c_card; (green) (+2), add, 2
(11/27/2023 12:08:46 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:46 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:08:46 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:08:46 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 85), Value; (31)
(11/27/2023 12:08:46 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:46 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:08:46 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 84), Value; (77)
(11/27/2023 12:08:46 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:46 AM) |> method; (GameLogicClass.AddCards), cards added; (AddCards Index: 0 AddCards Index: 0 )
(11/27/2023 12:08:46 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:08:46 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:08:46 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (5), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, +2), Player Index (0)
(11/27/2023 12:08:46 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:46 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:08:46 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:08:46 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:08:46 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:08:46 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:08:46 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:08:46 AM) |> method; (PlayerClass.UpdatePoints) [595]
(11/27/2023 12:08:46 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:46 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green +2)
(11/27/2023 12:08:46 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:46 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:08:46 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:08:46 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:08:46 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:08:46 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:08:46 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:08:46 AM) |> method; (PlayerClass.UpdatePoints) [1127]
(11/27/2023 12:08:46 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:46 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green +2)
(11/27/2023 12:08:46 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:46 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (1)
(11/27/2023 12:08:46 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-6)
(11/27/2023 12:08:46 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (14), Added; (green +2; 10 Points)
(11/27/2023 12:08:46 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:46 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (5)
Player1CardCount; (5)

    PlusAmount (0)
Discard Pile Count; (14), Top Card; (green, +2)
(11/27/2023 12:08:46 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (3)
Player1CardCount; (6)

    PlusAmount (0)
Discard Pile Count; (14), Top Card; (green, +2)
(11/27/2023 12:08:48 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (1)
(11/27/2023 12:08:48 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (1)
(11/27/2023 12:08:48 AM) |> method; (GameLogicClass.CardPlay), c_card; (red) (+2), add, 2
(11/27/2023 12:08:48 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:48 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:08:48 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:08:48 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 83), Value; (57)
(11/27/2023 12:08:48 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:48 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:08:48 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 82), Value; (18)
(11/27/2023 12:08:48 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:48 AM) |> method; (GameLogicClass.AddCards), cards added; (AddCards Index: 1 AddCards Index: 1 )
(11/27/2023 12:08:48 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:08:48 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:08:48 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (1), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, +2), Player Index (1)
(11/27/2023 12:08:48 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:48 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:08:48 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:08:48 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:08:48 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:08:48 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:08:48 AM) |> method; (PlayerClass.UpdatePoints) [626]
(11/27/2023 12:08:48 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:48 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red +2)
(11/27/2023 12:08:48 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:48 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 5)
(11/27/2023 12:08:48 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:08:48 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:08:48 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:08:48 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:08:48 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:08:48 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 5)
(11/27/2023 12:08:48 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:08:48 AM) |> method; (PlayerClass.UpdatePoints) [1194]
(11/27/2023 12:08:48 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:48 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red +2)
(11/27/2023 12:08:48 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:48 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-3)
(11/27/2023 12:08:48 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-9)
(11/27/2023 12:08:48 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (15), Added; (red +2; 10 Points)
(11/27/2023 12:08:48 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:48 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red +2)
(11/27/2023 12:08:48 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:08:48 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 81), Value; (35)
(11/27/2023 12:08:48 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:48 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:08:48 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/27/2023 12:08:48 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:48 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:08:48 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:08:48 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:08:48 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:08:48 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:08:48 AM) |> method; (PlayerClass.UpdatePoints) [657]
(11/27/2023 12:08:48 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:48 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red +2)
(11/27/2023 12:08:48 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:48 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 5)
(11/27/2023 12:08:48 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/27/2023 12:08:48 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:08:48 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:08:48 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:08:48 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:08:48 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/27/2023 12:08:48 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 5)
(11/27/2023 12:08:48 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (885, 885)
(11/27/2023 12:08:48 AM) |> method; (PlayerClass.UpdatePoints) [1270]
(11/27/2023 12:08:48 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:48 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red +2)
(11/27/2023 12:08:48 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:48 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (15), Added; (Nothing)
(11/27/2023 12:08:48 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:48 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (4)
Player1CardCount; (8)

    PlusAmount (0)
Discard Pile Count; (15), Top Card; (red, +2)
(11/27/2023 12:08:48 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (4)
Player1CardCount; (7)

    PlusAmount (0)
Discard Pile Count; (15), Top Card; (red, +2)
(11/27/2023 12:08:51 AM) |> method; (GameLogicClass.DrawPile_Clicked)
(11/27/2023 12:08:51 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:08:51 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 80), Value; (24)
(11/27/2023 12:08:51 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:51 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:08:51 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (1), add one
(11/27/2023 12:08:51 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:51 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:08:51 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:08:51 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:08:51 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:08:51 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:08:51 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:08:51 AM) |> method; (PlayerClass.UpdatePoints) [694]
(11/27/2023 12:08:51 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:51 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red +2)
(11/27/2023 12:08:51 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:51 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 5)
(11/27/2023 12:08:51 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/27/2023 12:08:51 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:08:51 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:08:51 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:08:51 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:08:51 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/27/2023 12:08:51 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 5)
(11/27/2023 12:08:51 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (885, 885)
(11/27/2023 12:08:51 AM) |> method; (PlayerClass.UpdatePoints) [1346]
(11/27/2023 12:08:51 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:51 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red +2)
(11/27/2023 12:08:51 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:51 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (15), Added; (Nothing)
(11/27/2023 12:08:51 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:51 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red +2)
(11/27/2023 12:08:51 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:08:51 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 79), Value; (47)
(11/27/2023 12:08:51 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:51 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:08:51 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/27/2023 12:08:51 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:51 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:08:51 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:08:51 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:08:51 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:08:51 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:08:51 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:08:51 AM) |> method; (PlayerClass.UpdatePoints) [731]
(11/27/2023 12:08:51 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:51 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red +2)
(11/27/2023 12:08:51 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:51 AM) |> method; (CardClass.SetPBLocation), x, y; (475, 5)
(11/27/2023 12:08:51 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 5)
(11/27/2023 12:08:51 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:08:51 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:08:51 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:08:51 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:08:51 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:08:51 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 5)
(11/27/2023 12:08:51 AM) |> method; (CardClass.SetPBLocation), x, y; (915, 5)
(11/27/2023 12:08:51 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (915, 915)
(11/27/2023 12:08:51 AM) |> method; (PlayerClass.UpdatePoints) [1423]
(11/27/2023 12:08:51 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:51 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red +2)
(11/27/2023 12:08:51 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:51 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (15), Added; (Nothing)
(11/27/2023 12:08:51 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:51 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (5)
Player1CardCount; (9)

    PlusAmount (0)
Discard Pile Count; (15), Top Card; (red, +2)
(11/27/2023 12:08:51 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (5)
Player1CardCount; (8)

    PlusAmount (0)
Discard Pile Count; (15), Top Card; (red, +2)
(11/27/2023 12:08:52 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (4)
(11/27/2023 12:08:52 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (4)
(11/27/2023 12:08:53 AM) |> method; (GameLogicClass.DrawPile_Clicked)
(11/27/2023 12:08:53 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:08:53 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 78), Value; (32)
(11/27/2023 12:08:53 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:53 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:08:53 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (1), add one
(11/27/2023 12:08:53 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:53 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:08:53 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:08:53 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:08:53 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:08:53 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:08:53 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:08:53 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:08:53 AM) |> method; (PlayerClass.UpdatePoints) [775]
(11/27/2023 12:08:53 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:53 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red +2)
(11/27/2023 12:08:53 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:53 AM) |> method; (CardClass.SetPBLocation), x, y; (475, 5)
(11/27/2023 12:08:53 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 5)
(11/27/2023 12:08:53 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:08:53 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:08:53 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:08:53 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:08:53 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:08:53 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 5)
(11/27/2023 12:08:53 AM) |> method; (CardClass.SetPBLocation), x, y; (915, 5)
(11/27/2023 12:08:53 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (915, 915)
(11/27/2023 12:08:53 AM) |> method; (PlayerClass.UpdatePoints) [1500]
(11/27/2023 12:08:53 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:53 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red +2)
(11/27/2023 12:08:53 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:53 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (15), Added; (Nothing)
(11/27/2023 12:08:53 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:53 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red +2)
(11/27/2023 12:08:53 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:08:53 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 77), Value; (31)
(11/27/2023 12:08:53 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:53 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:08:53 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/27/2023 12:08:53 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:53 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:08:53 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:08:53 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:08:53 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:08:53 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:08:53 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:08:53 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:08:53 AM) |> method; (PlayerClass.UpdatePoints) [819]
(11/27/2023 12:08:53 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:53 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red +2)
(11/27/2023 12:08:53 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:53 AM) |> method; (CardClass.SetPBLocation), x, y; (445, 5)
(11/27/2023 12:08:53 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 5)
(11/27/2023 12:08:53 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/27/2023 12:08:53 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:08:53 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:08:53 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:08:53 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:08:53 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/27/2023 12:08:53 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 5)
(11/27/2023 12:08:53 AM) |> method; (CardClass.SetPBLocation), x, y; (940, 5)
(11/27/2023 12:08:53 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (940, 940)
(11/27/2023 12:08:53 AM) |> method; (PlayerClass.UpdatePoints) [1582]
(11/27/2023 12:08:53 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:53 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red +2)
(11/27/2023 12:08:53 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:53 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (15), Added; (Nothing)
(11/27/2023 12:08:53 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:53 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (6)
Player1CardCount; (10)

    PlusAmount (0)
Discard Pile Count; (15), Top Card; (red, +2)
(11/27/2023 12:08:53 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (6)
Player1CardCount; (9)

    PlusAmount (0)
Discard Pile Count; (15), Top Card; (red, +2)
(11/27/2023 12:08:54 AM) |> method; (GameLogicClass.DrawPile_Clicked)
(11/27/2023 12:08:54 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:08:54 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 76), Value; (73)
(11/27/2023 12:08:54 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:54 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:08:54 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (1), add one
(11/27/2023 12:08:54 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:54 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:08:54 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:08:54 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:08:54 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:08:54 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:08:54 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:08:54 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:08:54 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:08:54 AM) |> method; (PlayerClass.UpdatePoints) [913]
(11/27/2023 12:08:55 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:55 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red +2)
(11/27/2023 12:08:55 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:55 AM) |> method; (CardClass.SetPBLocation), x, y; (445, 5)
(11/27/2023 12:08:55 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 5)
(11/27/2023 12:08:55 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/27/2023 12:08:55 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:08:55 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:08:55 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:08:55 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:08:55 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/27/2023 12:08:55 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 5)
(11/27/2023 12:08:55 AM) |> method; (CardClass.SetPBLocation), x, y; (940, 5)
(11/27/2023 12:08:55 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (940, 940)
(11/27/2023 12:08:55 AM) |> method; (PlayerClass.UpdatePoints) [1664]
(11/27/2023 12:08:55 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:55 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red +2)
(11/27/2023 12:08:55 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:55 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (15), Added; (Nothing)
(11/27/2023 12:08:55 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:55 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red +2)
(11/27/2023 12:08:55 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:08:55 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 75), Value; (30)
(11/27/2023 12:08:55 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:55 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:08:55 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/27/2023 12:08:55 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:55 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:08:55 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:08:55 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:08:55 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:08:55 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:08:55 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:08:55 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:08:55 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:08:55 AM) |> method; (PlayerClass.UpdatePoints) [1007]
(11/27/2023 12:08:55 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:55 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red +2)
(11/27/2023 12:08:55 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:55 AM) |> method; (CardClass.SetPBLocation), x, y; (420, 5)
(11/27/2023 12:08:55 AM) |> method; (CardClass.SetPBLocation), x, y; (475, 5)
(11/27/2023 12:08:55 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 5)
(11/27/2023 12:08:55 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:08:55 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:08:55 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:08:55 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:08:55 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:08:55 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 5)
(11/27/2023 12:08:55 AM) |> method; (CardClass.SetPBLocation), x, y; (915, 5)
(11/27/2023 12:08:55 AM) |> method; (CardClass.SetPBLocation), x, y; (970, 5)
(11/27/2023 12:08:55 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (970, 970)
(11/27/2023 12:08:55 AM) |> method; (PlayerClass.UpdatePoints) [1750]
(11/27/2023 12:08:55 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:55 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red +2)
(11/27/2023 12:08:55 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:55 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (15), Added; (Nothing)
(11/27/2023 12:08:55 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:55 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (7)
Player1CardCount; (11)

    PlusAmount (0)
Discard Pile Count; (15), Top Card; (red, +2)
(11/27/2023 12:08:55 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (7)
Player1CardCount; (10)

    PlusAmount (0)
Discard Pile Count; (15), Top Card; (red, +2)
(11/27/2023 12:08:56 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (6)
(11/27/2023 12:08:56 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (6)
(11/27/2023 12:08:56 AM) |> method; (wildFormClass.wildFormClass)
(11/27/2023 12:08:58 AM) |> method; (wildFormClass.blueBT_Click) [this.Tag = blue]
(11/27/2023 12:08:58 AM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (+4_wild), add, 4
(11/27/2023 12:08:58 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:58 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:08:58 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:08:58 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 74), Value; (12)
(11/27/2023 12:08:58 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:58 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:08:58 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 73), Value; (65)
(11/27/2023 12:08:58 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:58 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:08:58 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 72), Value; (35)
(11/27/2023 12:08:58 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:58 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:08:58 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 71), Value; (34)
(11/27/2023 12:08:58 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:58 AM) |> method; (GameLogicClass.AddCards), cards added; (AddCards Index: 1 AddCards Index: 1 AddCards Index: 1 AddCards Index: 1 )
(11/27/2023 12:08:58 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:08:58 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:08:58 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (6), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, +4_wild), Player Index (1)
(11/27/2023 12:08:58 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:58 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:08:58 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:08:58 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:08:58 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:08:58 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:08:58 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:08:58 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:08:58 AM) |> method; (PlayerClass.UpdatePoints) [1051]
(11/27/2023 12:08:58 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:58 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue +4_wild)
(11/27/2023 12:08:58 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:58 AM) |> method; (CardClass.SetPBLocation), x, y; (310, 5)
(11/27/2023 12:08:58 AM) |> method; (CardClass.SetPBLocation), x, y; (365, 5)
(11/27/2023 12:08:58 AM) |> method; (CardClass.SetPBLocation), x, y; (420, 5)
(11/27/2023 12:08:58 AM) |> method; (CardClass.SetPBLocation), x, y; (475, 5)
(11/27/2023 12:08:58 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 5)
(11/27/2023 12:08:58 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:08:58 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:08:58 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:08:58 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:08:58 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:08:58 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 5)
(11/27/2023 12:08:58 AM) |> method; (CardClass.SetPBLocation), x, y; (915, 5)
(11/27/2023 12:08:58 AM) |> method; (CardClass.SetPBLocation), x, y; (970, 5)
(11/27/2023 12:08:58 AM) |> method; (CardClass.SetPBLocation), x, y; (1025, 5)
(11/27/2023 12:08:58 AM) |> method; (CardClass.SetPBLocation), x, y; (1080, 5)
(11/27/2023 12:08:58 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (1080, 1080)
(11/27/2023 12:08:58 AM) |> method; (PlayerClass.UpdatePoints) [1851]
(11/27/2023 12:08:59 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:59 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue +4_wild)
(11/27/2023 12:08:59 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:59 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-9)
(11/27/2023 12:08:59 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (4)
(11/27/2023 12:08:59 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (16), Added; (blue +4_wild; 50 Points)
(11/27/2023 12:08:59 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:59 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue +4_wild)
(11/27/2023 12:08:59 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 6), Value; (2)
(11/27/2023 12:08:59 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (4)
(11/27/2023 12:08:59 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (7), Card index; (2), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 4
(11/27/2023 12:08:59 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (4)
(11/27/2023 12:08:59 AM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (6), error
(11/27/2023 12:08:59 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:08:59 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:08:59 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:08:59 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:08:59 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (4), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 6), Player Index (0)
(11/27/2023 12:08:59 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:59 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:08:59 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:08:59 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:08:59 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:08:59 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:08:59 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:08:59 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:08:59 AM) |> method; (PlayerClass.UpdatePoints) [1095]
(11/27/2023 12:08:59 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:59 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 6)
(11/27/2023 12:08:59 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:08:59 AM) |> method; (CardClass.SetPBLocation), x, y; (335, 5)
(11/27/2023 12:08:59 AM) |> method; (CardClass.SetPBLocation), x, y; (390, 5)
(11/27/2023 12:08:59 AM) |> method; (CardClass.SetPBLocation), x, y; (445, 5)
(11/27/2023 12:08:59 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 5)
(11/27/2023 12:08:59 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/27/2023 12:08:59 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:08:59 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:08:59 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:08:59 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:08:59 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/27/2023 12:08:59 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 5)
(11/27/2023 12:08:59 AM) |> method; (CardClass.SetPBLocation), x, y; (940, 5)
(11/27/2023 12:08:59 AM) |> method; (CardClass.SetPBLocation), x, y; (995, 5)
(11/27/2023 12:08:59 AM) |> method; (CardClass.SetPBLocation), x, y; (1050, 5)
(11/27/2023 12:08:59 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (1050, 1050)
(11/27/2023 12:08:59 AM) |> method; (PlayerClass.UpdatePoints) [1946]
(11/27/2023 12:08:59 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:08:59 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 6)
(11/27/2023 12:08:59 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:08:59 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-7)
(11/27/2023 12:08:59 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-10)
(11/27/2023 12:08:59 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (17), Added; (blue 6; 6 Points)
(11/27/2023 12:08:59 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:08:59 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (6)
Player1CardCount; (14)

    PlusAmount (0)
Discard Pile Count; (17), Top Card; (blue, 6)
(11/27/2023 12:08:59 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (6)
Player1CardCount; (15)

    PlusAmount (0)
Discard Pile Count; (17), Top Card; (blue, 6)
(11/27/2023 12:09:00 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (3)
(11/27/2023 12:09:00 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (3)
(11/27/2023 12:09:00 AM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (reverse), reverce, False
(11/27/2023 12:09:00 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:00 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:09:00 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:09:00 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:09:00 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (3), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, reverse), Player Index (1)
(11/27/2023 12:09:00 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:00 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:09:00 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:09:00 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:09:00 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:09:00 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:09:00 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:09:00 AM) |> method; (PlayerClass.UpdatePoints) [1119]
(11/27/2023 12:09:00 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:00 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue reverse)
(11/27/2023 12:09:00 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:00 AM) |> method; (CardClass.SetPBLocation), x, y; (335, 5)
(11/27/2023 12:09:00 AM) |> method; (CardClass.SetPBLocation), x, y; (390, 5)
(11/27/2023 12:09:00 AM) |> method; (CardClass.SetPBLocation), x, y; (445, 5)
(11/27/2023 12:09:00 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 5)
(11/27/2023 12:09:00 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/27/2023 12:09:00 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:09:00 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:09:00 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:09:00 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:09:00 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/27/2023 12:09:00 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 5)
(11/27/2023 12:09:00 AM) |> method; (CardClass.SetPBLocation), x, y; (940, 5)
(11/27/2023 12:09:00 AM) |> method; (CardClass.SetPBLocation), x, y; (995, 5)
(11/27/2023 12:09:00 AM) |> method; (CardClass.SetPBLocation), x, y; (1050, 5)
(11/27/2023 12:09:00 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (1050, 1050)
(11/27/2023 12:09:00 AM) |> method; (PlayerClass.UpdatePoints) [2041]
(11/27/2023 12:09:01 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:01 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue reverse)
(11/27/2023 12:09:01 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:01 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (4)
(11/27/2023 12:09:01 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-10)
(11/27/2023 12:09:01 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (18), Added; (blue reverse; 20 Points)
(11/27/2023 12:09:01 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:01 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue reverse)
(11/27/2023 12:09:01 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 6), Value; (0)
(11/27/2023 12:09:01 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/27/2023 12:09:01 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (7), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 2
(11/27/2023 12:09:01 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/27/2023 12:09:01 AM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (3), error
(11/27/2023 12:09:01 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:01 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:09:01 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:09:01 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:09:01 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (2), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 3), Player Index (0)
(11/27/2023 12:09:01 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:01 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:09:01 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:09:01 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:09:01 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:09:01 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:09:01 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:09:01 AM) |> method; (PlayerClass.UpdatePoints) [1143]
(11/27/2023 12:09:01 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:01 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 3)
(11/27/2023 12:09:01 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:01 AM) |> method; (CardClass.SetPBLocation), x, y; (365, 5)
(11/27/2023 12:09:01 AM) |> method; (CardClass.SetPBLocation), x, y; (420, 5)
(11/27/2023 12:09:01 AM) |> method; (CardClass.SetPBLocation), x, y; (475, 5)
(11/27/2023 12:09:01 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 5)
(11/27/2023 12:09:01 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:09:01 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:09:01 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:09:01 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:09:01 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:09:01 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 5)
(11/27/2023 12:09:01 AM) |> method; (CardClass.SetPBLocation), x, y; (915, 5)
(11/27/2023 12:09:01 AM) |> method; (CardClass.SetPBLocation), x, y; (970, 5)
(11/27/2023 12:09:01 AM) |> method; (CardClass.SetPBLocation), x, y; (1025, 5)
(11/27/2023 12:09:01 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (1025, 1025)
(11/27/2023 12:09:01 AM) |> method; (PlayerClass.UpdatePoints) [2133]
(11/27/2023 12:09:01 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:01 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 3)
(11/27/2023 12:09:01 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:01 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-4)
(11/27/2023 12:09:01 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (7)
(11/27/2023 12:09:01 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (19), Added; (blue 3; 3 Points)
(11/27/2023 12:09:01 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:01 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (5)
Player1CardCount; (13)

    PlusAmount (0)
Discard Pile Count; (19), Top Card; (blue, 3)
(11/27/2023 12:09:01 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (5)
Player1CardCount; (14)

    PlusAmount (0)
Discard Pile Count; (19), Top Card; (blue, 3)
(11/27/2023 12:09:02 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (4)
(11/27/2023 12:09:02 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (4)
(11/27/2023 12:09:02 AM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (7), error
(11/27/2023 12:09:02 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:02 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:09:02 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:09:02 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:09:02 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (4), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 7), Player Index (1)
(11/27/2023 12:09:02 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:02 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:09:02 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:09:02 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:09:02 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:09:02 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:09:02 AM) |> method; (PlayerClass.UpdatePoints) [1160]
(11/27/2023 12:09:02 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:02 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 7)
(11/27/2023 12:09:02 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:02 AM) |> method; (CardClass.SetPBLocation), x, y; (365, 5)
(11/27/2023 12:09:02 AM) |> method; (CardClass.SetPBLocation), x, y; (420, 5)
(11/27/2023 12:09:02 AM) |> method; (CardClass.SetPBLocation), x, y; (475, 5)
(11/27/2023 12:09:02 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 5)
(11/27/2023 12:09:02 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:09:02 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:09:02 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:09:02 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:09:02 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:09:02 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 5)
(11/27/2023 12:09:02 AM) |> method; (CardClass.SetPBLocation), x, y; (915, 5)
(11/27/2023 12:09:02 AM) |> method; (CardClass.SetPBLocation), x, y; (970, 5)
(11/27/2023 12:09:02 AM) |> method; (CardClass.SetPBLocation), x, y; (1025, 5)
(11/27/2023 12:09:02 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (1025, 1025)
(11/27/2023 12:09:02 AM) |> method; (PlayerClass.UpdatePoints) [2225]
(11/27/2023 12:09:02 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:02 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 7)
(11/27/2023 12:09:02 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:02 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (8)
(11/27/2023 12:09:02 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-6)
(11/27/2023 12:09:02 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (20), Added; (blue 7; 7 Points)
(11/27/2023 12:09:02 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:02 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 7)
(11/27/2023 12:09:02 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 5), Value; (1)
(11/27/2023 12:09:02 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/27/2023 12:09:02 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (6), Card index; (1), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 2
(11/27/2023 12:09:02 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/27/2023 12:09:02 AM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (3), error
(11/27/2023 12:09:02 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:02 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:09:02 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:09:02 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:09:02 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (2), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 3), Player Index (0)
(11/27/2023 12:09:02 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:02 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:09:02 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:09:02 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:09:02 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:09:02 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:09:02 AM) |> method; (PlayerClass.UpdatePoints) [1177]
(11/27/2023 12:09:02 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:02 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 3)
(11/27/2023 12:09:02 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:02 AM) |> method; (CardClass.SetPBLocation), x, y; (390, 5)
(11/27/2023 12:09:02 AM) |> method; (CardClass.SetPBLocation), x, y; (445, 5)
(11/27/2023 12:09:02 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 5)
(11/27/2023 12:09:02 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/27/2023 12:09:02 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:09:02 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:09:02 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:09:02 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:09:02 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/27/2023 12:09:02 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 5)
(11/27/2023 12:09:02 AM) |> method; (CardClass.SetPBLocation), x, y; (940, 5)
(11/27/2023 12:09:02 AM) |> method; (CardClass.SetPBLocation), x, y; (995, 5)
(11/27/2023 12:09:02 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (995, 995)
(11/27/2023 12:09:02 AM) |> method; (PlayerClass.UpdatePoints) [2314]
(11/27/2023 12:09:02 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:02 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 3)
(11/27/2023 12:09:02 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:02 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-8)
(11/27/2023 12:09:02 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-6)
(11/27/2023 12:09:02 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (21), Added; (blue 3; 3 Points)
(11/27/2023 12:09:02 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:02 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (4)
Player1CardCount; (12)

    PlusAmount (0)
Discard Pile Count; (21), Top Card; (blue, 3)
(11/27/2023 12:09:02 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (4)
Player1CardCount; (13)

    PlusAmount (0)
Discard Pile Count; (21), Top Card; (blue, 3)
(11/27/2023 12:09:03 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:09:03 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (0)
(11/27/2023 12:09:03 AM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (2), error
(11/27/2023 12:09:03 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:03 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:09:03 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:09:03 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:09:03 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 2), Player Index (1)
(11/27/2023 12:09:03 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:03 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:09:03 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:09:03 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:09:03 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:09:03 AM) |> method; (PlayerClass.UpdatePoints) [1192]
(11/27/2023 12:09:03 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:03 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 2)
(11/27/2023 12:09:03 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:03 AM) |> method; (CardClass.SetPBLocation), x, y; (390, 5)
(11/27/2023 12:09:03 AM) |> method; (CardClass.SetPBLocation), x, y; (445, 5)
(11/27/2023 12:09:03 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 5)
(11/27/2023 12:09:03 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/27/2023 12:09:03 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:09:03 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:09:03 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:09:03 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:09:03 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/27/2023 12:09:03 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 5)
(11/27/2023 12:09:03 AM) |> method; (CardClass.SetPBLocation), x, y; (940, 5)
(11/27/2023 12:09:03 AM) |> method; (CardClass.SetPBLocation), x, y; (995, 5)
(11/27/2023 12:09:03 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (995, 995)
(11/27/2023 12:09:03 AM) |> method; (PlayerClass.UpdatePoints) [2403]
(11/27/2023 12:09:04 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:04 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 2)
(11/27/2023 12:09:04 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:04 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-8)
(11/27/2023 12:09:04 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (6)
(11/27/2023 12:09:04 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (22), Added; (blue 2; 2 Points)
(11/27/2023 12:09:04 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:04 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 2)
(11/27/2023 12:09:04 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 4), Value; (1)
(11/27/2023 12:09:04 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (6)
(11/27/2023 12:09:04 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (5), Card index; (1), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 6
(11/27/2023 12:09:04 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (6)
(11/27/2023 12:09:04 AM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (5), error
(11/27/2023 12:09:04 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:04 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:09:04 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:09:04 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:09:04 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (6), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 5), Player Index (0)
(11/27/2023 12:09:04 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:04 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:09:04 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:09:04 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:09:04 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:09:04 AM) |> method; (PlayerClass.UpdatePoints) [1207]
(11/27/2023 12:09:04 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:04 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 5)
(11/27/2023 12:09:04 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:04 AM) |> method; (CardClass.SetPBLocation), x, y; (420, 5)
(11/27/2023 12:09:04 AM) |> method; (CardClass.SetPBLocation), x, y; (475, 5)
(11/27/2023 12:09:04 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 5)
(11/27/2023 12:09:04 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:09:04 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:09:04 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:09:04 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:09:04 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:09:04 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 5)
(11/27/2023 12:09:04 AM) |> method; (CardClass.SetPBLocation), x, y; (915, 5)
(11/27/2023 12:09:04 AM) |> method; (CardClass.SetPBLocation), x, y; (970, 5)
(11/27/2023 12:09:04 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (970, 970)
(11/27/2023 12:09:04 AM) |> method; (PlayerClass.UpdatePoints) [2487]
(11/27/2023 12:09:04 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:04 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 5)
(11/27/2023 12:09:04 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:04 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-10)
(11/27/2023 12:09:04 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (1)
(11/27/2023 12:09:04 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (23), Added; (blue 5; 5 Points)
(11/27/2023 12:09:04 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:04 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (3)
Player1CardCount; (11)

    PlusAmount (0)
Discard Pile Count; (23), Top Card; (blue, 5)
(11/27/2023 12:09:04 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (3)
Player1CardCount; (12)

    PlusAmount (0)
Discard Pile Count; (23), Top Card; (blue, 5)
(11/27/2023 12:09:05 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (1)
(11/27/2023 12:09:05 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (1)
(11/27/2023 12:09:05 AM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (0), error
(11/27/2023 12:09:05 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:05 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:09:05 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:09:05 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:09:05 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (1), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 0), Player Index (1)
(11/27/2023 12:09:05 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:05 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:09:05 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:09:05 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:09:05 AM) |> method; (PlayerClass.UpdatePoints) [1222]
(11/27/2023 12:09:05 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:05 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (blue 0)
(11/27/2023 12:09:05 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:05 AM) |> method; (CardClass.SetPBLocation), x, y; (420, 5)
(11/27/2023 12:09:05 AM) |> method; (CardClass.SetPBLocation), x, y; (475, 5)
(11/27/2023 12:09:05 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 5)
(11/27/2023 12:09:05 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:09:05 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:09:05 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:09:05 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:09:05 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:09:05 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 5)
(11/27/2023 12:09:05 AM) |> method; (CardClass.SetPBLocation), x, y; (915, 5)
(11/27/2023 12:09:05 AM) |> method; (CardClass.SetPBLocation), x, y; (970, 5)
(11/27/2023 12:09:05 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (970, 970)
(11/27/2023 12:09:05 AM) |> method; (PlayerClass.UpdatePoints) [2571]
(11/27/2023 12:09:05 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:05 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 0)
(11/27/2023 12:09:05 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:05 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-1)
(11/27/2023 12:09:05 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-9)
(11/27/2023 12:09:05 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (24), Added; (blue 0; 0 Points)
(11/27/2023 12:09:05 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:05 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 0)
(11/27/2023 12:09:05 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 2), Value; (0)
(11/27/2023 12:09:05 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (4)
(11/27/2023 12:09:05 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (3), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 4
(11/27/2023 12:09:05 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (4)
(11/27/2023 12:09:05 AM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (9), error
(11/27/2023 12:09:05 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:05 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:09:05 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:09:05 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:09:05 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (4), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 9), Player Index (0)
(11/27/2023 12:09:05 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:05 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:09:05 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:09:05 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:09:05 AM) |> method; (PlayerClass.UpdatePoints) [1237]
(11/27/2023 12:09:05 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:05 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 9)
(11/27/2023 12:09:05 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:05 AM) |> method; (CardClass.SetPBLocation), x, y; (445, 5)
(11/27/2023 12:09:05 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 5)
(11/27/2023 12:09:05 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/27/2023 12:09:05 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:09:05 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:09:05 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:09:05 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:09:05 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/27/2023 12:09:05 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 5)
(11/27/2023 12:09:05 AM) |> method; (CardClass.SetPBLocation), x, y; (940, 5)
(11/27/2023 12:09:05 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (940, 940)
(11/27/2023 12:09:05 AM) |> method; (PlayerClass.UpdatePoints) [2646]
(11/27/2023 12:09:05 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:05 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 9)
(11/27/2023 12:09:05 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:05 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (2)
(11/27/2023 12:09:05 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (3)
(11/27/2023 12:09:05 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (25), Added; (blue 9; 9 Points)
(11/27/2023 12:09:05 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:05 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (2)
Player1CardCount; (10)

    PlusAmount (0)
Discard Pile Count; (25), Top Card; (blue, 9)
(11/27/2023 12:09:05 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (2)
Player1CardCount; (11)

    PlusAmount (0)
Discard Pile Count; (25), Top Card; (blue, 9)
(11/27/2023 12:09:07 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:09:07 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (0)
(11/27/2023 12:09:07 AM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (9), error
(11/27/2023 12:09:07 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:07 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:09:07 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:09:07 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:09:07 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 9), Player Index (1)
(11/27/2023 12:09:07 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:07 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:09:07 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (695, 695)
(11/27/2023 12:09:07 AM) |> method; (PlayerClass.UpdatePoints) [1243]
(11/27/2023 12:09:07 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:07 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (yellow 9)
(11/27/2023 12:09:07 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:07 AM) |> method; (CardClass.SetPBLocation), x, y; (445, 5)
(11/27/2023 12:09:07 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 5)
(11/27/2023 12:09:07 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/27/2023 12:09:07 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:09:07 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:09:07 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:09:07 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:09:07 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/27/2023 12:09:07 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 5)
(11/27/2023 12:09:07 AM) |> method; (CardClass.SetPBLocation), x, y; (940, 5)
(11/27/2023 12:09:07 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (940, 940)
(11/27/2023 12:09:07 AM) |> method; (PlayerClass.UpdatePoints) [2721]
(11/27/2023 12:09:07 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:07 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 9)
(11/27/2023 12:09:07 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:07 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (6)
(11/27/2023 12:09:07 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-9)
(11/27/2023 12:09:07 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (26), Added; (yellow 9; 9 Points)
(11/27/2023 12:09:07 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:07 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 9)
(11/27/2023 12:09:07 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 5), Value; (2)
(11/27/2023 12:09:07 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/27/2023 12:09:07 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (6), Card index; (2), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 2
(11/27/2023 12:09:07 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/27/2023 12:09:07 AM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (8), error
(11/27/2023 12:09:07 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:07 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:09:07 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:09:07 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:09:07 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (2), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 8), Player Index (0)
(11/27/2023 12:09:07 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:07 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:09:07 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (695, 695)
(11/27/2023 12:09:07 AM) |> method; (PlayerClass.UpdatePoints) [1249]
(11/27/2023 12:09:07 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:07 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (yellow 8)
(11/27/2023 12:09:07 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:07 AM) |> method; (CardClass.SetPBLocation), x, y; (475, 5)
(11/27/2023 12:09:07 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 5)
(11/27/2023 12:09:07 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:09:07 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:09:07 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:09:07 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:09:07 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:09:07 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 5)
(11/27/2023 12:09:07 AM) |> method; (CardClass.SetPBLocation), x, y; (915, 5)
(11/27/2023 12:09:07 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (915, 915)
(11/27/2023 12:09:07 AM) |> method; (PlayerClass.UpdatePoints) [2788]
(11/27/2023 12:09:07 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:07 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 8)
(11/27/2023 12:09:07 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:07 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-3)
(11/27/2023 12:09:07 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-6)
(11/27/2023 12:09:08 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (27), Added; (yellow 8; 8 Points)
(11/27/2023 12:09:08 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:08 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (1)
Player1CardCount; (9)

    PlusAmount (0)
Discard Pile Count; (27), Top Card; (yellow, 8)
(11/27/2023 12:09:08 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (1)
Player1CardCount; (10)

    PlusAmount (0)
Discard Pile Count; (27), Top Card; (yellow, 8)
(11/27/2023 12:09:09 AM) |> method; (GameLogicClass.DrawPile_Clicked)
(11/27/2023 12:09:09 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:09:09 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 70), Value; (24)
(11/27/2023 12:09:09 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:09 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:09:09 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (1), add one
(11/27/2023 12:09:09 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:09 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:09:09 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:09:09 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:09:09 AM) |> method; (PlayerClass.UpdatePoints) [1263]
(11/27/2023 12:09:09 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:09 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 8)
(11/27/2023 12:09:09 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:09 AM) |> method; (CardClass.SetPBLocation), x, y; (475, 5)
(11/27/2023 12:09:09 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 5)
(11/27/2023 12:09:09 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:09:09 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:09:09 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:09:09 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:09:09 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:09:09 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 5)
(11/27/2023 12:09:09 AM) |> method; (CardClass.SetPBLocation), x, y; (915, 5)
(11/27/2023 12:09:09 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (915, 915)
(11/27/2023 12:09:09 AM) |> method; (PlayerClass.UpdatePoints) [2855]
(11/27/2023 12:09:09 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:09 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 8)
(11/27/2023 12:09:09 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:09 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (27), Added; (Nothing)
(11/27/2023 12:09:09 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:09 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 8)
(11/27/2023 12:09:09 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 4), Value; (2)
(11/27/2023 12:09:09 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/27/2023 12:09:09 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (5), Card index; (2), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 2
(11/27/2023 12:09:09 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/27/2023 12:09:09 AM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (reverse), reverce, True
(11/27/2023 12:09:09 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:09 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:09:09 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:09:09 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:09:09 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (2), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, reverse), Player Index (0)
(11/27/2023 12:09:09 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:09 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:09:09 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:09:09 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:09:09 AM) |> method; (PlayerClass.UpdatePoints) [1277]
(11/27/2023 12:09:09 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:09 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (yellow reverse)
(11/27/2023 12:09:09 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:09 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 5)
(11/27/2023 12:09:09 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/27/2023 12:09:09 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:09:09 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:09:09 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:09:09 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:09:09 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/27/2023 12:09:09 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 5)
(11/27/2023 12:09:09 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (885, 885)
(11/27/2023 12:09:09 AM) |> method; (PlayerClass.UpdatePoints) [2902]
(11/27/2023 12:09:09 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:09 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow reverse)
(11/27/2023 12:09:09 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:09 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-9)
(11/27/2023 12:09:09 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-8)
(11/27/2023 12:09:09 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (28), Added; (yellow reverse; 20 Points)
(11/27/2023 12:09:09 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:09 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (2)
Player1CardCount; (8)

    PlusAmount (0)
Discard Pile Count; (28), Top Card; (yellow, reverse)
(11/27/2023 12:09:09 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (2)
Player1CardCount; (9)

    PlusAmount (0)
Discard Pile Count; (28), Top Card; (yellow, reverse)
(11/27/2023 12:09:11 AM) |> method; (GameLogicClass.DrawPile_Clicked)
(11/27/2023 12:09:11 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:09:11 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 69), Value; (32)
(11/27/2023 12:09:11 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:11 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:09:11 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (1), add one
(11/27/2023 12:09:11 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:11 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:09:11 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:09:11 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:09:11 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:09:11 AM) |> method; (PlayerClass.UpdatePoints) [1292]
(11/27/2023 12:09:11 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:11 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (yellow reverse)
(11/27/2023 12:09:11 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:11 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 5)
(11/27/2023 12:09:11 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/27/2023 12:09:11 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:09:11 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:09:11 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:09:11 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:09:11 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/27/2023 12:09:11 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 5)
(11/27/2023 12:09:11 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (885, 885)
(11/27/2023 12:09:11 AM) |> method; (PlayerClass.UpdatePoints) [2949]
(11/27/2023 12:09:11 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:11 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow reverse)
(11/27/2023 12:09:11 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:11 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (28), Added; (Nothing)
(11/27/2023 12:09:11 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:11 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow reverse)
(11/27/2023 12:09:11 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 3), Value; (0)
(11/27/2023 12:09:11 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:09:11 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (4), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 0
(11/27/2023 12:09:11 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:09:11 AM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (7), error
(11/27/2023 12:09:11 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:11 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:09:11 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:09:11 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:09:11 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 7), Player Index (0)
(11/27/2023 12:09:11 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:11 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:09:11 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:09:11 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:09:11 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:09:11 AM) |> method; (PlayerClass.UpdatePoints) [1307]
(11/27/2023 12:09:11 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:11 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (yellow 7)
(11/27/2023 12:09:11 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:11 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 5)
(11/27/2023 12:09:11 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:09:11 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:09:11 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:09:11 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:09:11 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:09:11 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 5)
(11/27/2023 12:09:11 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:09:11 AM) |> method; (PlayerClass.UpdatePoints) [2989]
(11/27/2023 12:09:11 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:11 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 7)
(11/27/2023 12:09:11 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:11 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-7)
(11/27/2023 12:09:11 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-9)
(11/27/2023 12:09:11 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (29), Added; (yellow 7; 7 Points)
(11/27/2023 12:09:11 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:11 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (3)
Player1CardCount; (7)

    PlusAmount (0)
Discard Pile Count; (29), Top Card; (yellow, 7)
(11/27/2023 12:09:11 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (3)
Player1CardCount; (8)

    PlusAmount (0)
Discard Pile Count; (29), Top Card; (yellow, 7)
(11/27/2023 12:09:12 AM) |> method; (GameLogicClass.DrawPile_Clicked)
(11/27/2023 12:09:12 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:09:12 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 68), Value; (12)
(11/27/2023 12:09:12 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:12 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:09:12 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (1), add one
(11/27/2023 12:09:12 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:12 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:09:12 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:09:12 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:09:12 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:09:12 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:09:12 AM) |> method; (PlayerClass.UpdatePoints) [1326]
(11/27/2023 12:09:12 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:12 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 7)
(11/27/2023 12:09:12 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:12 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 5)
(11/27/2023 12:09:12 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:09:12 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:09:12 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:09:12 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:09:12 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:09:12 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 5)
(11/27/2023 12:09:12 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:09:13 AM) |> method; (PlayerClass.UpdatePoints) [3029]
(11/27/2023 12:09:13 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:13 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 7)
(11/27/2023 12:09:13 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:13 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (29), Added; (Nothing)
(11/27/2023 12:09:13 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:13 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 7)
(11/27/2023 12:09:13 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 3), Value; (0)
(11/27/2023 12:09:13 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:09:13 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (4), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 0
(11/27/2023 12:09:13 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:09:13 AM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (skip), error
(11/27/2023 12:09:13 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:13 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:09:13 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:09:13 AM) |> method; (GameLogicClass.CardClickLogic), In skip
(11/27/2023 12:09:13 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:09:13 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:09:13 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, skip), Player Index (1)
(11/27/2023 12:09:13 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:13 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:09:13 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:09:13 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:09:13 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:09:13 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:09:13 AM) |> method; (PlayerClass.UpdatePoints) [1345]
(11/27/2023 12:09:13 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:13 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow skip)
(11/27/2023 12:09:13 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:13 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/27/2023 12:09:13 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:09:13 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:09:13 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:09:13 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:09:13 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/27/2023 12:09:13 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:09:13 AM) |> method; (PlayerClass.UpdatePoints) [3049]
(11/27/2023 12:09:13 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:13 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow skip)
(11/27/2023 12:09:13 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:13 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-5)
(11/27/2023 12:09:13 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (3)
(11/27/2023 12:09:13 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (30), Added; (yellow skip; 20 Points)
(11/27/2023 12:09:13 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:13 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow skip)
(11/27/2023 12:09:13 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 1), Value; (0)
(11/27/2023 12:09:13 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:09:13 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (2), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 0
(11/27/2023 12:09:13 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:09:13 AM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (1), error
(11/27/2023 12:09:13 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:13 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:09:13 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:09:13 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:09:13 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 1), Player Index (0)
(11/27/2023 12:09:13 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:13 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:09:13 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:09:13 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:09:13 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:09:13 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:09:13 AM) |> method; (PlayerClass.UpdatePoints) [1364]
(11/27/2023 12:09:13 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:13 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 1)
(11/27/2023 12:09:13 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:13 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:09:13 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:09:13 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:09:13 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:09:13 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:09:13 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:09:13 AM) |> method; (PlayerClass.UpdatePoints) [3068]
(11/27/2023 12:09:13 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:13 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 1)
(11/27/2023 12:09:13 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:13 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-2)
(11/27/2023 12:09:13 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-8)
(11/27/2023 12:09:13 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (31), Added; (yellow 1; 1 Points)
(11/27/2023 12:09:13 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:13 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (4)
Player1CardCount; (5)

    PlusAmount (0)
Discard Pile Count; (31), Top Card; (yellow, 1)
(11/27/2023 12:09:13 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (4)
Player1CardCount; (6)

    PlusAmount (0)
Discard Pile Count; (31), Top Card; (yellow, 1)
(11/27/2023 12:09:13 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (4)
Player1CardCount; (7)

    PlusAmount (0)
Discard Pile Count; (31), Top Card; (yellow, 1)
(11/27/2023 12:09:14 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (3)
(11/27/2023 12:09:14 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (3)
(11/27/2023 12:09:14 AM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (4), error
(11/27/2023 12:09:14 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:14 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:09:14 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:09:14 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:09:14 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (3), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 4), Player Index (1)
(11/27/2023 12:09:14 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:14 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:09:14 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:09:14 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:09:14 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:09:14 AM) |> method; (PlayerClass.UpdatePoints) [1379]
(11/27/2023 12:09:14 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:14 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (yellow 4)
(11/27/2023 12:09:14 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:14 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:09:14 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:09:14 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:09:14 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:09:14 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:09:14 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:09:14 AM) |> method; (PlayerClass.UpdatePoints) [3087]
(11/27/2023 12:09:14 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:14 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 4)
(11/27/2023 12:09:14 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:14 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (4)
(11/27/2023 12:09:14 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-6)
(11/27/2023 12:09:14 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (32), Added; (yellow 4; 4 Points)
(11/27/2023 12:09:14 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:14 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 4)
(11/27/2023 12:09:14 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 1), Value; (0)
(11/27/2023 12:09:14 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:09:14 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (2), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 0
(11/27/2023 12:09:14 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:09:14 AM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (4), error
(11/27/2023 12:09:14 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:14 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:09:14 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:09:14 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:09:14 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 4), Player Index (0)
(11/27/2023 12:09:14 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:14 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:09:14 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:09:14 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:09:14 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:09:14 AM) |> method; (PlayerClass.UpdatePoints) [1394]
(11/27/2023 12:09:14 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:14 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (blue 4)
(11/27/2023 12:09:14 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:14 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:09:14 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:09:14 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:09:14 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:09:14 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:09:14 AM) |> method; (PlayerClass.UpdatePoints) [3102]
(11/27/2023 12:09:14 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:14 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 4)
(11/27/2023 12:09:14 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:14 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (7)
(11/27/2023 12:09:14 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-4)
(11/27/2023 12:09:14 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (33), Added; (blue 4; 4 Points)
(11/27/2023 12:09:14 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:14 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (3)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (33), Top Card; (blue, 4)
(11/27/2023 12:09:14 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (3)
Player1CardCount; (5)

    PlusAmount (0)
Discard Pile Count; (33), Top Card; (blue, 4)
(11/27/2023 12:09:16 AM) |> method; (GameLogicClass.DrawPile_Clicked)
(11/27/2023 12:09:16 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:09:16 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 67), Value; (55)
(11/27/2023 12:09:16 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:16 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:09:16 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (1), add one
(11/27/2023 12:09:16 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:16 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:09:16 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:09:16 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:09:16 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:09:16 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:09:16 AM) |> method; (PlayerClass.UpdatePoints) [1410]
(11/27/2023 12:09:16 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:16 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 4)
(11/27/2023 12:09:16 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:16 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:09:16 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:09:16 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:09:16 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:09:16 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:09:16 AM) |> method; (PlayerClass.UpdatePoints) [3117]
(11/27/2023 12:09:16 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:16 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 4)
(11/27/2023 12:09:16 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:16 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (33), Added; (Nothing)
(11/27/2023 12:09:16 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:16 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 4)
(11/27/2023 12:09:16 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (1)
(11/27/2023 12:09:16 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (1), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 1
(11/27/2023 12:09:16 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (1)
(11/27/2023 12:09:16 AM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (7), error
(11/27/2023 12:09:16 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:16 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:09:16 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:09:16 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:09:16 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (1), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 7), Player Index (0)
(11/27/2023 12:09:16 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:16 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:09:16 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:09:16 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:09:16 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:09:16 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:09:16 AM) |> method; (PlayerClass.UpdatePoints) [1426]
(11/27/2023 12:09:16 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:16 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 7)
(11/27/2023 12:09:16 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:16 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:09:16 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:09:16 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:09:16 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:09:16 AM) |> method; (PlayerClass.UpdatePoints) [3125]
(11/27/2023 12:09:16 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:16 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (blue 7)
(11/27/2023 12:09:16 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:16 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (0)
(11/27/2023 12:09:16 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (7)
(11/27/2023 12:09:16 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (34), Added; (blue 7; 7 Points)
(11/27/2023 12:09:16 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:16 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (4)
Player1CardCount; (3)

    PlusAmount (0)
Discard Pile Count; (34), Top Card; (blue, 7)
(11/27/2023 12:09:16 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (4)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (34), Top Card; (blue, 7)
(11/27/2023 12:09:18 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (3)
(11/27/2023 12:09:18 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (3)
(11/27/2023 12:09:18 AM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (1), error
(11/27/2023 12:09:18 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:18 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:09:18 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:09:18 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:09:18 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (3), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 1), Player Index (1)
(11/27/2023 12:09:18 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:18 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:09:18 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:09:18 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:09:18 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:09:18 AM) |> method; (PlayerClass.UpdatePoints) [1441]
(11/27/2023 12:09:18 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:18 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 1)
(11/27/2023 12:09:18 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:18 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:09:18 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:09:18 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:09:18 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:09:18 AM) |> method; (PlayerClass.UpdatePoints) [3133]
(11/27/2023 12:09:18 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:18 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (blue 1)
(11/27/2023 12:09:18 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:18 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-10)
(11/27/2023 12:09:18 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-4)
(11/27/2023 12:09:18 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (35), Added; (blue 1; 1 Points)
(11/27/2023 12:09:18 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:18 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (blue 1)
(11/27/2023 12:09:18 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:09:18 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 66), Value; (23)
(11/27/2023 12:09:18 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:18 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:09:18 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/27/2023 12:09:18 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:18 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:09:18 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:09:18 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:09:18 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:09:18 AM) |> method; (PlayerClass.UpdatePoints) [1456]
(11/27/2023 12:09:18 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:18 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 1)
(11/27/2023 12:09:18 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:18 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:09:18 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:09:18 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:09:18 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:09:18 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:09:18 AM) |> method; (PlayerClass.UpdatePoints) [3150]
(11/27/2023 12:09:18 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:18 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (blue 1)
(11/27/2023 12:09:18 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:18 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (35), Added; (Nothing)
(11/27/2023 12:09:18 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:18 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (3)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (35), Top Card; (blue, 1)
(11/27/2023 12:09:18 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (3)
Player1CardCount; (3)

    PlusAmount (0)
Discard Pile Count; (35), Top Card; (blue, 1)
(11/27/2023 12:09:19 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/27/2023 12:09:19 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (2)
(11/27/2023 12:09:19 AM) |> method; (GameLogicClass.CardPlay), c_card; (red) (1), error
(11/27/2023 12:09:19 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:19 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:09:19 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:09:19 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:09:19 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (2), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 1), Player Index (1)
(11/27/2023 12:09:19 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:19 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:09:19 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:09:19 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:09:19 AM) |> method; (PlayerClass.UpdatePoints) [1470]
(11/27/2023 12:09:19 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:19 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 1)
(11/27/2023 12:09:19 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:19 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:09:19 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:09:19 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:09:19 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:09:19 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:09:19 AM) |> method; (PlayerClass.UpdatePoints) [3167]
(11/27/2023 12:09:19 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:19 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 1)
(11/27/2023 12:09:19 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:19 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (0)
(11/27/2023 12:09:19 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-7)
(11/27/2023 12:09:19 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (36), Added; (red 1; 1 Points)
(11/27/2023 12:09:19 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:19 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 1)
(11/27/2023 12:09:19 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 1), Value; (0)
(11/27/2023 12:09:19 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (1)
(11/27/2023 12:09:19 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (2), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 1
(11/27/2023 12:09:19 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (1)
(11/27/2023 12:09:19 AM) |> method; (GameLogicClass.CardPlay), c_card; (red) (3), error
(11/27/2023 12:09:19 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:19 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:09:19 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:09:19 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:09:19 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (1), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 3), Player Index (0)
(11/27/2023 12:09:19 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:19 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:09:19 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:09:19 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:09:19 AM) |> method; (PlayerClass.UpdatePoints) [1484]
(11/27/2023 12:09:19 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:19 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 3)
(11/27/2023 12:09:19 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:19 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:09:19 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:09:19 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:09:19 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:09:19 AM) |> method; (PlayerClass.UpdatePoints) [3181]
(11/27/2023 12:09:19 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:19 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 3)
(11/27/2023 12:09:19 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:19 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-9)
(11/27/2023 12:09:19 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-5)
(11/27/2023 12:09:19 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (37), Added; (red 3; 3 Points)
(11/27/2023 12:09:19 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:19 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (2)
Player1CardCount; (3)

    PlusAmount (0)
Discard Pile Count; (37), Top Card; (red, 3)
(11/27/2023 12:09:19 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (2)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (37), Top Card; (red, 3)
(11/27/2023 12:09:20 AM) |> method; (GameLogicClass.DrawPile_Clicked)
(11/27/2023 12:09:20 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:09:20 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 65), Value; (59)
(11/27/2023 12:09:20 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:20 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:09:20 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (1), add one
(11/27/2023 12:09:20 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:20 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:09:20 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:09:20 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:09:20 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:09:20 AM) |> method; (PlayerClass.UpdatePoints) [1507]
(11/27/2023 12:09:20 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:20 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 3)
(11/27/2023 12:09:20 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:20 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:09:20 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:09:20 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:09:20 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:09:20 AM) |> method; (PlayerClass.UpdatePoints) [3195]
(11/27/2023 12:09:20 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:20 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 3)
(11/27/2023 12:09:20 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:20 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (37), Added; (Nothing)
(11/27/2023 12:09:20 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:20 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 3)
(11/27/2023 12:09:20 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 1), Value; (0)
(11/27/2023 12:09:20 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:09:20 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (2), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 0
(11/27/2023 12:09:20 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:09:20 AM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (3), error
(11/27/2023 12:09:20 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:20 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:09:20 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:09:20 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:09:20 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 3), Player Index (0)
(11/27/2023 12:09:20 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:20 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:09:20 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:09:20 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:09:20 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:09:20 AM) |> method; (PlayerClass.UpdatePoints) [1530]
(11/27/2023 12:09:20 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:20 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (yellow 3)
(11/27/2023 12:09:20 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:20 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:09:20 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:09:20 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:09:20 AM) |> method; (PlayerClass.UpdatePoints) [3206]
(11/27/2023 12:09:20 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:20 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (yellow 3)
(11/27/2023 12:09:20 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:20 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (6)
(11/27/2023 12:09:20 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-6)
(11/27/2023 12:09:20 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (38), Added; (yellow 3; 3 Points)
(11/27/2023 12:09:20 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:20 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (3)
Player1CardCount; (2)

    PlusAmount (0)
Discard Pile Count; (38), Top Card; (yellow, 3)
(11/27/2023 12:09:20 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (3)
Player1CardCount; (3)

    PlusAmount (0)
Discard Pile Count; (38), Top Card; (yellow, 3)
(11/27/2023 12:09:23 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/27/2023 12:09:23 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (2)
(11/27/2023 12:09:25 AM) |> method; (GameLogicClass.DrawPile_Clicked)
(11/27/2023 12:09:25 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:09:25 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 64), Value; (2)
(11/27/2023 12:09:25 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:25 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:09:25 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (1), add one
(11/27/2023 12:09:25 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:25 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:09:25 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:09:25 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:09:25 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:09:25 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:09:25 AM) |> method; (PlayerClass.UpdatePoints) [1556]
(11/27/2023 12:09:25 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:25 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 3)
(11/27/2023 12:09:25 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:25 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:09:25 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:09:25 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:09:25 AM) |> method; (PlayerClass.UpdatePoints) [3217]
(11/27/2023 12:09:25 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:25 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (yellow 3)
(11/27/2023 12:09:25 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:25 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (38), Added; (Nothing)
(11/27/2023 12:09:25 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:25 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (yellow 3)
(11/27/2023 12:09:25 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:09:25 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 63), Value; (22)
(11/27/2023 12:09:25 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:25 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:09:25 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/27/2023 12:09:25 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:25 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:09:25 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:09:25 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:09:25 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:09:25 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:09:25 AM) |> method; (PlayerClass.UpdatePoints) [1582]
(11/27/2023 12:09:25 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:25 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 3)
(11/27/2023 12:09:25 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:25 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:09:25 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:09:25 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:09:25 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:09:25 AM) |> method; (PlayerClass.UpdatePoints) [3238]
(11/27/2023 12:09:25 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:25 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (yellow 3)
(11/27/2023 12:09:25 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:25 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (38), Added; (Nothing)
(11/27/2023 12:09:25 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:25 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (4)
Player1CardCount; (3)

    PlusAmount (0)
Discard Pile Count; (38), Top Card; (yellow, 3)
(11/27/2023 12:09:25 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (4)
Player1CardCount; (2)

    PlusAmount (0)
Discard Pile Count; (38), Top Card; (yellow, 3)
(11/27/2023 12:09:26 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (3)
(11/27/2023 12:09:26 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (3)
(11/27/2023 12:09:26 AM) |> method; (GameLogicClass.CardPlay), c_card; (red) (3), error
(11/27/2023 12:09:26 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:26 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:09:26 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:09:26 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:09:26 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (3), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 3), Player Index (1)
(11/27/2023 12:09:26 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:26 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:09:26 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:09:26 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:09:26 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:09:26 AM) |> method; (PlayerClass.UpdatePoints) [1605]
(11/27/2023 12:09:26 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:26 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 3)
(11/27/2023 12:09:26 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:26 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:09:26 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:09:26 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:09:26 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:09:26 AM) |> method; (PlayerClass.UpdatePoints) [3259]
(11/27/2023 12:09:26 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:26 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 3)
(11/27/2023 12:09:26 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:26 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-6)
(11/27/2023 12:09:26 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (6)
(11/27/2023 12:09:26 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (39), Added; (red 3; 3 Points)
(11/27/2023 12:09:26 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:26 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 3)
(11/27/2023 12:09:26 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:09:26 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (1), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 0
(11/27/2023 12:09:26 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:09:26 AM) |> method; (GameLogicClass.CardPlay), c_card; (red) (2), error
(11/27/2023 12:09:26 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:27 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:09:27 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:09:27 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:09:27 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 2), Player Index (0)
(11/27/2023 12:09:27 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:27 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:09:27 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:09:27 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:09:27 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:09:27 AM) |> method; (PlayerClass.UpdatePoints) [1628]
(11/27/2023 12:09:27 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:27 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 2)
(11/27/2023 12:09:27 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:27 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:09:27 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:09:27 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:09:27 AM) |> method; (PlayerClass.UpdatePoints) [3278]
(11/27/2023 12:09:27 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:27 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 2)
(11/27/2023 12:09:27 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:27 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-7)
(11/27/2023 12:09:27 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (1)
(11/27/2023 12:09:27 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (40), Added; (red 2; 2 Points)
(11/27/2023 12:09:27 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:27 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (3)
Player1CardCount; (2)

    PlusAmount (0)
Discard Pile Count; (40), Top Card; (red, 2)
(11/27/2023 12:09:27 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (3)
Player1CardCount; (3)

    PlusAmount (0)
Discard Pile Count; (40), Top Card; (red, 2)
(11/27/2023 12:09:28 AM) |> method; (GameLogicClass.DrawPile_Clicked)
(11/27/2023 12:09:28 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:09:28 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 62), Value; (14)
(11/27/2023 12:09:28 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:28 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:09:28 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (1), add one
(11/27/2023 12:09:28 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:28 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:09:28 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:09:28 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:09:28 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:09:28 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:09:28 AM) |> method; (PlayerClass.UpdatePoints) [1661]
(11/27/2023 12:09:29 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:29 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 2)
(11/27/2023 12:09:29 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:29 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:09:29 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:09:29 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:09:29 AM) |> method; (PlayerClass.UpdatePoints) [3297]
(11/27/2023 12:09:29 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:29 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 2)
(11/27/2023 12:09:29 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:29 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (40), Added; (Nothing)
(11/27/2023 12:09:29 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:29 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 2)
(11/27/2023 12:09:29 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:09:29 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 61), Value; (44)
(11/27/2023 12:09:29 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:29 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:09:29 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/27/2023 12:09:29 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:29 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:09:29 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:09:29 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:09:29 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:09:29 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:09:29 AM) |> method; (PlayerClass.UpdatePoints) [1694]
(11/27/2023 12:09:29 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:29 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 2)
(11/27/2023 12:09:29 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:29 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:09:29 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:09:29 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:09:29 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:09:29 AM) |> method; (PlayerClass.UpdatePoints) [3317]
(11/27/2023 12:09:29 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:29 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 2)
(11/27/2023 12:09:29 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:29 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (40), Added; (Nothing)
(11/27/2023 12:09:29 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:29 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (4)
Player1CardCount; (3)

    PlusAmount (0)
Discard Pile Count; (40), Top Card; (red, 2)
(11/27/2023 12:09:29 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (4)
Player1CardCount; (2)

    PlusAmount (0)
Discard Pile Count; (40), Top Card; (red, 2)
(11/27/2023 12:09:31 AM) |> method; (GameLogicClass.DrawPile_Clicked)
(11/27/2023 12:09:31 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:09:31 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 60), Value; (40)
(11/27/2023 12:09:31 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:31 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:09:31 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (1), add one
(11/27/2023 12:09:31 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:31 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:09:31 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:09:31 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:09:31 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:09:31 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:09:31 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:09:31 AM) |> method; (PlayerClass.UpdatePoints) [1736]
(11/27/2023 12:09:31 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:31 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 2)
(11/27/2023 12:09:31 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:31 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:09:31 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:09:31 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:09:31 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:09:31 AM) |> method; (PlayerClass.UpdatePoints) [3337]
(11/27/2023 12:09:31 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:31 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 2)
(11/27/2023 12:09:31 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:31 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (40), Added; (Nothing)
(11/27/2023 12:09:31 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:31 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 2)
(11/27/2023 12:09:31 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:09:31 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 59), Value; (40)
(11/27/2023 12:09:31 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:31 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:09:31 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/27/2023 12:09:31 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:31 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:09:31 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:09:31 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:09:31 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:09:31 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:09:31 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:09:31 AM) |> method; (PlayerClass.UpdatePoints) [1778]
(11/27/2023 12:09:31 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:31 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 2)
(11/27/2023 12:09:31 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:31 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:09:31 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:09:31 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:09:31 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:09:31 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:09:31 AM) |> method; (PlayerClass.UpdatePoints) [3367]
(11/27/2023 12:09:31 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:31 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 2)
(11/27/2023 12:09:31 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:31 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (40), Added; (Nothing)
(11/27/2023 12:09:31 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:31 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (5)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (40), Top Card; (red, 2)
(11/27/2023 12:09:31 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (5)
Player1CardCount; (3)

    PlusAmount (0)
Discard Pile Count; (40), Top Card; (red, 2)
(11/27/2023 12:09:33 AM) |> method; (GameLogicClass.DrawPile_Clicked)
(11/27/2023 12:09:33 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:09:33 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 58), Value; (43)
(11/27/2023 12:09:33 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:33 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:09:33 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (1), add one
(11/27/2023 12:09:33 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:33 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:09:33 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:09:33 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:09:33 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:09:33 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:09:33 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:09:33 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:09:33 AM) |> method; (PlayerClass.UpdatePoints) [1823]
(11/27/2023 12:09:33 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:33 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 2)
(11/27/2023 12:09:33 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:33 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:09:33 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:09:33 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:09:33 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:09:33 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:09:33 AM) |> method; (PlayerClass.UpdatePoints) [3397]
(11/27/2023 12:09:33 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:33 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 2)
(11/27/2023 12:09:33 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:33 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (40), Added; (Nothing)
(11/27/2023 12:09:33 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:33 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 2)
(11/27/2023 12:09:33 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:09:33 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 57), Value; (21)
(11/27/2023 12:09:33 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:33 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:09:33 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/27/2023 12:09:33 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:33 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:09:33 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:09:33 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:09:33 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:09:33 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:09:33 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:09:33 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:09:33 AM) |> method; (PlayerClass.UpdatePoints) [1868]
(11/27/2023 12:09:33 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:33 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 2)
(11/27/2023 12:09:33 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:33 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:09:33 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:09:33 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:09:33 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:09:33 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:09:33 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:09:33 AM) |> method; (PlayerClass.UpdatePoints) [3447]
(11/27/2023 12:09:33 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:33 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 2)
(11/27/2023 12:09:33 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:33 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (40), Added; (Nothing)
(11/27/2023 12:09:33 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:33 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (6)
Player1CardCount; (5)

    PlusAmount (0)
Discard Pile Count; (40), Top Card; (red, 2)
(11/27/2023 12:09:33 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (6)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (40), Top Card; (red, 2)
(11/27/2023 12:09:36 AM) |> method; (GameLogicClass.DrawPile_Clicked)
(11/27/2023 12:09:36 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:09:36 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 56), Value; (24)
(11/27/2023 12:09:36 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:36 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:09:36 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (1), add one
(11/27/2023 12:09:36 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:36 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:09:36 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:09:36 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:09:36 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:09:36 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:09:36 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:09:36 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:09:36 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:09:36 AM) |> method; (PlayerClass.UpdatePoints) [1933]
(11/27/2023 12:09:36 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:36 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 2)
(11/27/2023 12:09:36 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:36 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:09:36 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:09:36 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:09:36 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:09:36 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:09:36 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:09:36 AM) |> method; (PlayerClass.UpdatePoints) [3497]
(11/27/2023 12:09:36 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:36 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 2)
(11/27/2023 12:09:36 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:36 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (40), Added; (Nothing)
(11/27/2023 12:09:36 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:36 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 2)
(11/27/2023 12:09:36 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:09:36 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 55), Value; (2)
(11/27/2023 12:09:36 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:36 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:09:36 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/27/2023 12:09:36 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:36 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:09:36 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:09:36 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:09:36 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:09:36 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:09:36 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:09:36 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:09:36 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:09:36 AM) |> method; (PlayerClass.UpdatePoints) [1998]
(11/27/2023 12:09:36 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:36 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 2)
(11/27/2023 12:09:36 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:36 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/27/2023 12:09:36 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:09:36 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:09:36 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:09:36 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:09:36 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/27/2023 12:09:36 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:09:36 AM) |> method; (PlayerClass.UpdatePoints) [3551]
(11/27/2023 12:09:36 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:36 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 2)
(11/27/2023 12:09:36 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:36 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (40), Added; (Nothing)
(11/27/2023 12:09:36 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:36 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (7)
Player1CardCount; (6)

    PlusAmount (0)
Discard Pile Count; (40), Top Card; (red, 2)
(11/27/2023 12:09:36 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (7)
Player1CardCount; (5)

    PlusAmount (0)
Discard Pile Count; (40), Top Card; (red, 2)
(11/27/2023 12:09:38 AM) |> method; (GameLogicClass.DrawPile_Clicked)
(11/27/2023 12:09:38 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:09:38 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 54), Value; (2)
(11/27/2023 12:09:38 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:38 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:09:38 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (1), add one
(11/27/2023 12:09:38 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:38 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 765)
(11/27/2023 12:09:38 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:09:38 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:09:38 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:09:38 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:09:38 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:09:38 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:09:38 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 765)
(11/27/2023 12:09:38 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (885, 885)
(11/27/2023 12:09:38 AM) |> method; (PlayerClass.UpdatePoints) [2070]
(11/27/2023 12:09:39 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:39 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 2)
(11/27/2023 12:09:39 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:39 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/27/2023 12:09:39 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:09:39 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:09:39 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:09:39 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:09:39 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/27/2023 12:09:39 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:09:39 AM) |> method; (PlayerClass.UpdatePoints) [3605]
(11/27/2023 12:09:39 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:39 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 2)
(11/27/2023 12:09:39 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:39 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (40), Added; (Nothing)
(11/27/2023 12:09:39 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:39 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 2)
(11/27/2023 12:09:39 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (5)
(11/27/2023 12:09:39 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (1), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 5
(11/27/2023 12:09:39 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (5)
(11/27/2023 12:09:39 AM) |> method; (GameLogicClass.CardPlay), c_card; (red) (4), error
(11/27/2023 12:09:39 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:39 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:09:39 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:09:39 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:09:39 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (5), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 4), Player Index (0)
(11/27/2023 12:09:39 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:39 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 765)
(11/27/2023 12:09:39 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:09:39 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:09:39 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:09:39 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:09:39 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:09:39 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:09:39 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 765)
(11/27/2023 12:09:39 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (885, 885)
(11/27/2023 12:09:39 AM) |> method; (PlayerClass.UpdatePoints) [2142]
(11/27/2023 12:09:39 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:39 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 4)
(11/27/2023 12:09:39 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:39 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:09:39 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:09:39 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:09:39 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:09:39 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:09:39 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:09:39 AM) |> method; (PlayerClass.UpdatePoints) [3655]
(11/27/2023 12:09:39 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:39 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 4)
(11/27/2023 12:09:39 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:39 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-7)
(11/27/2023 12:09:39 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (8)
(11/27/2023 12:09:39 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (41), Added; (red 4; 4 Points)
(11/27/2023 12:09:39 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:39 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (8)
Player1CardCount; (5)

    PlusAmount (0)
Discard Pile Count; (41), Top Card; (red, 4)
(11/27/2023 12:09:39 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (8)
Player1CardCount; (6)

    PlusAmount (0)
Discard Pile Count; (41), Top Card; (red, 4)
(11/27/2023 12:09:40 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (7)
(11/27/2023 12:09:40 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (7)
(11/27/2023 12:09:40 AM) |> method; (GameLogicClass.CardPlay), c_card; (red) (7), error
(11/27/2023 12:09:40 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:40 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:09:40 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:09:40 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:09:40 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (7), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 7), Player Index (1)
(11/27/2023 12:09:40 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:40 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:09:40 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:09:40 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:09:40 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:09:40 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:09:40 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:09:40 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:09:40 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:09:40 AM) |> method; (PlayerClass.UpdatePoints) [2207]
(11/27/2023 12:09:40 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:40 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 7)
(11/27/2023 12:09:40 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:40 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:09:40 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:09:40 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:09:40 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:09:40 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:09:40 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:09:40 AM) |> method; (PlayerClass.UpdatePoints) [3705]
(11/27/2023 12:09:40 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:40 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 7)
(11/27/2023 12:09:40 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:40 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (3)
(11/27/2023 12:09:40 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-6)
(11/27/2023 12:09:40 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (42), Added; (red 7; 7 Points)
(11/27/2023 12:09:40 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:40 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 7)
(11/27/2023 12:09:40 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:09:40 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 53), Value; (51)
(11/27/2023 12:09:40 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:40 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:09:40 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/27/2023 12:09:40 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:40 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:09:40 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:09:40 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:09:40 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:09:40 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:09:40 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:09:40 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:09:40 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:09:40 AM) |> method; (PlayerClass.UpdatePoints) [2272]
(11/27/2023 12:09:41 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:41 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 7)
(11/27/2023 12:09:41 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:41 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/27/2023 12:09:41 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:09:41 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:09:41 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:09:41 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:09:41 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/27/2023 12:09:41 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:09:41 AM) |> method; (PlayerClass.UpdatePoints) [3795]
(11/27/2023 12:09:41 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:41 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 7)
(11/27/2023 12:09:41 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:41 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (42), Added; (Nothing)
(11/27/2023 12:09:41 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:41 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (7)
Player1CardCount; (6)

    PlusAmount (0)
Discard Pile Count; (42), Top Card; (red, 7)
(11/27/2023 12:09:41 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (7)
Player1CardCount; (5)

    PlusAmount (0)
Discard Pile Count; (42), Top Card; (red, 7)
(11/27/2023 12:09:43 AM) |> method; (GameLogicClass.DrawPile_Clicked)
(11/27/2023 12:09:43 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:09:43 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 52), Value; (33)
(11/27/2023 12:09:43 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:43 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:09:43 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (1), add one
(11/27/2023 12:09:43 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:43 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 765)
(11/27/2023 12:09:43 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:09:43 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:09:43 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:09:43 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:09:43 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:09:43 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:09:43 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 765)
(11/27/2023 12:09:43 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (885, 885)
(11/27/2023 12:09:43 AM) |> method; (PlayerClass.UpdatePoints) [2342]
(11/27/2023 12:09:43 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:43 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 7)
(11/27/2023 12:09:43 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:43 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/27/2023 12:09:43 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:09:43 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:09:43 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:09:43 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:09:43 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/27/2023 12:09:43 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:09:43 AM) |> method; (PlayerClass.UpdatePoints) [3885]
(11/27/2023 12:09:43 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:43 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 7)
(11/27/2023 12:09:43 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:43 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (42), Added; (Nothing)
(11/27/2023 12:09:43 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:43 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 7)
(11/27/2023 12:09:43 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (5)
(11/27/2023 12:09:43 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (1), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 5
(11/27/2023 12:09:43 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (5)
(11/27/2023 12:09:43 AM) |> method; (wildFormClass.wildFormClass)
(11/27/2023 12:09:46 AM) |> method; (wildFormClass.yellowBT_Click) [this.Tag = yellow]
(11/27/2023 12:09:46 AM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (wild), wild, yellow
(11/27/2023 12:09:46 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:46 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:09:46 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:09:46 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:09:46 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (5), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, wild), Player Index (0)
(11/27/2023 12:09:46 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:46 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 765)
(11/27/2023 12:09:46 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:09:46 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:09:46 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:09:46 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:09:46 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:09:46 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:09:46 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 765)
(11/27/2023 12:09:46 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (885, 885)
(11/27/2023 12:09:46 AM) |> method; (PlayerClass.UpdatePoints) [2412]
(11/27/2023 12:09:46 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:46 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow wild)
(11/27/2023 12:09:46 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:46 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:09:46 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:09:46 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:09:46 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:09:46 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:09:46 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:09:46 AM) |> method; (PlayerClass.UpdatePoints) [3935]
(11/27/2023 12:09:46 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:46 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow wild)
(11/27/2023 12:09:46 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:46 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (1)
(11/27/2023 12:09:46 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-6)
(11/27/2023 12:09:46 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (43), Added; (yellow wild; 40 Points)
(11/27/2023 12:09:46 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:46 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (8)
Player1CardCount; (5)

    PlusAmount (0)
Discard Pile Count; (43), Top Card; (yellow, wild)
(11/27/2023 12:09:46 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (8)
Player1CardCount; (6)

    PlusAmount (0)
Discard Pile Count; (43), Top Card; (yellow, wild)
(11/27/2023 12:09:48 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (4)
(11/27/2023 12:09:48 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (4)
(11/27/2023 12:09:48 AM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (9), error
(11/27/2023 12:09:48 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:48 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:09:48 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:09:48 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:09:48 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (4), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 9), Player Index (1)
(11/27/2023 12:09:48 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:48 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:09:48 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:09:48 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:09:48 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:09:48 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:09:48 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:09:48 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:09:48 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:09:48 AM) |> method; (PlayerClass.UpdatePoints) [2473]
(11/27/2023 12:09:48 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:48 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 9)
(11/27/2023 12:09:48 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:48 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:09:48 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:09:48 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:09:48 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:09:48 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:09:48 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:09:48 AM) |> method; (PlayerClass.UpdatePoints) [3985]
(11/27/2023 12:09:48 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:48 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 9)
(11/27/2023 12:09:48 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:48 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (0)
(11/27/2023 12:09:48 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-10)
(11/27/2023 12:09:48 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (44), Added; (yellow 9; 9 Points)
(11/27/2023 12:09:48 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:48 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 9)
(11/27/2023 12:09:48 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 1), Value; (0)
(11/27/2023 12:09:48 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:09:48 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (2), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 0
(11/27/2023 12:09:48 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:09:48 AM) |> method; (GameLogicClass.CardPlay), c_card; (green) (9), error
(11/27/2023 12:09:48 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:48 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:09:48 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:09:48 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:09:48 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 9), Player Index (0)
(11/27/2023 12:09:48 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:48 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:09:48 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:09:48 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:09:48 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:09:48 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:09:48 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:09:48 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:09:48 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:09:48 AM) |> method; (PlayerClass.UpdatePoints) [2534]
(11/27/2023 12:09:48 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:48 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 9)
(11/27/2023 12:09:48 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:48 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:09:48 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:09:48 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:09:48 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:09:48 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:09:48 AM) |> method; (PlayerClass.UpdatePoints) [4026]
(11/27/2023 12:09:48 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:48 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 9)
(11/27/2023 12:09:48 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:48 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (7)
(11/27/2023 12:09:48 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (1)
(11/27/2023 12:09:49 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (45), Added; (green 9; 9 Points)
(11/27/2023 12:09:49 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:49 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (7)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (45), Top Card; (green, 9)
(11/27/2023 12:09:49 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (7)
Player1CardCount; (5)

    PlusAmount (0)
Discard Pile Count; (45), Top Card; (green, 9)
(11/27/2023 12:09:49 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (3)
(11/27/2023 12:09:49 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (3)
(11/27/2023 12:09:51 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (1)
(11/27/2023 12:09:51 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (1)
(11/27/2023 12:09:51 AM) |> method; (GameLogicClass.CardPlay), c_card; (green) (8), error
(11/27/2023 12:09:51 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:51 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:09:51 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:09:51 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:09:51 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (1), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 8), Player Index (1)
(11/27/2023 12:09:51 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:51 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:09:51 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:09:51 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:09:51 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:09:51 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:09:51 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:09:51 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:09:51 AM) |> method; (PlayerClass.UpdatePoints) [2587]
(11/27/2023 12:09:51 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:51 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 8)
(11/27/2023 12:09:51 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:51 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:09:51 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:09:51 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:09:51 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:09:51 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:09:51 AM) |> method; (PlayerClass.UpdatePoints) [4067]
(11/27/2023 12:09:51 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:51 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 8)
(11/27/2023 12:09:51 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:51 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-1)
(11/27/2023 12:09:51 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (0)
(11/27/2023 12:09:51 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (46), Added; (green 8; 8 Points)
(11/27/2023 12:09:51 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:51 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 8)
(11/27/2023 12:09:51 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 2), Value; (0)
(11/27/2023 12:09:51 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:09:51 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (3), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 0
(11/27/2023 12:09:51 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:09:51 AM) |> method; (GameLogicClass.CardPlay), c_card; (green) (+2), add, 2
(11/27/2023 12:09:51 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:51 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:09:51 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:09:51 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 51), Value; (0)
(11/27/2023 12:09:51 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:51 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:09:51 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 50), Value; (20)
(11/27/2023 12:09:51 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:51 AM) |> method; (GameLogicClass.AddCards), cards added; (AddCards Index: 0 AddCards Index: 0 )
(11/27/2023 12:09:51 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:09:51 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:09:51 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, +2), Player Index (0)
(11/27/2023 12:09:51 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:51 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 765)
(11/27/2023 12:09:51 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:09:51 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:09:51 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:09:51 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:09:51 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:09:51 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:09:51 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 765)
(11/27/2023 12:09:51 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (885, 885)
(11/27/2023 12:09:51 AM) |> method; (PlayerClass.UpdatePoints) [2650]
(11/27/2023 12:09:51 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:51 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green +2)
(11/27/2023 12:09:51 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:51 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:09:51 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:09:51 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:09:51 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:09:51 AM) |> method; (PlayerClass.UpdatePoints) [4098]
(11/27/2023 12:09:51 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:51 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green +2)
(11/27/2023 12:09:51 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:51 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (6)
(11/27/2023 12:09:51 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (8)
(11/27/2023 12:09:51 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (47), Added; (green +2; 10 Points)
(11/27/2023 12:09:51 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:51 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (8)
Player1CardCount; (3)

    PlusAmount (0)
Discard Pile Count; (47), Top Card; (green, +2)
(11/27/2023 12:09:51 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (6)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (47), Top Card; (green, +2)
(11/27/2023 12:09:53 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (7)
(11/27/2023 12:09:53 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (7)
(11/27/2023 12:09:53 AM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (+2), add, 2
(11/27/2023 12:09:53 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:53 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:09:53 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:09:53 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 49), Value; (31)
(11/27/2023 12:09:53 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:53 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:09:53 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 48), Value; (2)
(11/27/2023 12:09:53 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:53 AM) |> method; (GameLogicClass.AddCards), cards added; (AddCards Index: 1 AddCards Index: 1 )
(11/27/2023 12:09:53 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:09:53 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:09:53 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (7), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, +2), Player Index (1)
(11/27/2023 12:09:53 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:53 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:09:53 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:09:53 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:09:53 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:09:53 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:09:53 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:09:53 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:09:53 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:09:53 AM) |> method; (PlayerClass.UpdatePoints) [2703]
(11/27/2023 12:09:53 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:53 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue +2)
(11/27/2023 12:09:53 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:53 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:09:53 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:09:53 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:09:53 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:09:53 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:09:53 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:09:53 AM) |> method; (PlayerClass.UpdatePoints) [4144]
(11/27/2023 12:09:53 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:53 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue +2)
(11/27/2023 12:09:53 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:53 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (4)
(11/27/2023 12:09:53 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-5)
(11/27/2023 12:09:53 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (48), Added; (blue +2; 10 Points)
(11/27/2023 12:09:53 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:53 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue +2)
(11/27/2023 12:09:53 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (1)
(11/27/2023 12:09:53 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (1), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 1
(11/27/2023 12:09:53 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (1)
(11/27/2023 12:09:53 AM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (+2), add, 2
(11/27/2023 12:09:53 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:53 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:09:53 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:09:53 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 47), Value; (5)
(11/27/2023 12:09:53 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:53 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:09:53 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 46), Value; (7)
(11/27/2023 12:09:53 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:53 AM) |> method; (GameLogicClass.AddCards), cards added; (AddCards Index: 0 AddCards Index: 0 )
(11/27/2023 12:09:53 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:09:53 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:09:53 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (1), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, +2), Player Index (0)
(11/27/2023 12:09:53 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:53 AM) |> method; (CardClass.SetPBLocation), x, y; (475, 765)
(11/27/2023 12:09:53 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:09:53 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:09:53 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:09:53 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:09:53 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:09:53 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:09:53 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:09:53 AM) |> method; (CardClass.SetPBLocation), x, y; (915, 765)
(11/27/2023 12:09:53 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (915, 915)
(11/27/2023 12:09:53 AM) |> method; (PlayerClass.UpdatePoints) [2763]
(11/27/2023 12:09:53 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:53 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow +2)
(11/27/2023 12:09:53 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:53 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:09:53 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:09:54 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:09:54 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:09:54 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:09:54 AM) |> method; (PlayerClass.UpdatePoints) [4180]
(11/27/2023 12:09:54 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:54 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow +2)
(11/27/2023 12:09:54 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:54 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-5)
(11/27/2023 12:09:54 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (5)
(11/27/2023 12:09:54 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (49), Added; (yellow +2; 10 Points)
(11/27/2023 12:09:54 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:54 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (9)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (49), Top Card; (yellow, +2)
(11/27/2023 12:09:54 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (7)
Player1CardCount; (5)

    PlusAmount (0)
Discard Pile Count; (49), Top Card; (yellow, +2)
(11/27/2023 12:09:55 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/27/2023 12:09:55 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (2)
(11/27/2023 12:09:55 AM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (+2), add, 2
(11/27/2023 12:09:55 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:55 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:09:55 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:09:55 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 45), Value; (38)
(11/27/2023 12:09:55 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:55 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:09:55 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 44), Value; (42)
(11/27/2023 12:09:55 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:55 AM) |> method; (GameLogicClass.AddCards), cards added; (AddCards Index: 1 AddCards Index: 1 )
(11/27/2023 12:09:55 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:09:55 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:09:55 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (2), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, +2), Player Index (1)
(11/27/2023 12:09:55 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:55 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 765)
(11/27/2023 12:09:55 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:09:55 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:09:55 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:09:55 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:09:55 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:09:55 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:09:55 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 765)
(11/27/2023 12:09:55 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (885, 885)
(11/27/2023 12:09:55 AM) |> method; (PlayerClass.UpdatePoints) [2813]
(11/27/2023 12:09:56 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:56 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow +2)
(11/27/2023 12:09:56 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:56 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/27/2023 12:09:56 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:09:56 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:09:56 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:09:56 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:09:56 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/27/2023 12:09:56 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:09:56 AM) |> method; (PlayerClass.UpdatePoints) [4271]
(11/27/2023 12:09:56 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:56 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow +2)
(11/27/2023 12:09:56 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:56 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (4)
(11/27/2023 12:09:56 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (3)
(11/27/2023 12:09:56 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (50), Added; (yellow +2; 10 Points)
(11/27/2023 12:09:56 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:56 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow +2)
(11/27/2023 12:09:56 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 1), Value; (0)
(11/27/2023 12:09:56 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/27/2023 12:09:56 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (2), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 2
(11/27/2023 12:09:56 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/27/2023 12:09:56 AM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (6), error
(11/27/2023 12:09:56 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:56 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:09:56 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:09:56 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:09:56 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (2), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 6), Player Index (0)
(11/27/2023 12:09:56 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:56 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 765)
(11/27/2023 12:09:56 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:09:56 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:09:56 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:09:56 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:09:56 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:09:56 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:09:56 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 765)
(11/27/2023 12:09:56 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (885, 885)
(11/27/2023 12:09:56 AM) |> method; (PlayerClass.UpdatePoints) [2863]
(11/27/2023 12:09:56 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:56 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 6)
(11/27/2023 12:09:56 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:56 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:09:56 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:09:56 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:09:56 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:09:56 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:09:56 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:09:56 AM) |> method; (PlayerClass.UpdatePoints) [4356]
(11/27/2023 12:09:56 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:56 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 6)
(11/27/2023 12:09:56 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:56 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-1)
(11/27/2023 12:09:56 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-8)
(11/27/2023 12:09:56 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (51), Added; (yellow 6; 6 Points)
(11/27/2023 12:09:56 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:56 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (8)
Player1CardCount; (5)

    PlusAmount (0)
Discard Pile Count; (51), Top Card; (yellow, 6)
(11/27/2023 12:09:56 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (8)
Player1CardCount; (6)

    PlusAmount (0)
Discard Pile Count; (51), Top Card; (yellow, 6)
(11/27/2023 12:09:58 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (7)
(11/27/2023 12:09:58 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (7)
(11/27/2023 12:09:58 AM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (6), error
(11/27/2023 12:09:58 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:09:58 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:09:58 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:09:58 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:09:58 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (7), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 6), Player Index (1)
(11/27/2023 12:09:58 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:58 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:09:58 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:09:58 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:09:58 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:09:58 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:09:58 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:09:58 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:09:58 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:09:58 AM) |> method; (PlayerClass.UpdatePoints) [2907]
(11/27/2023 12:09:58 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:58 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 6)
(11/27/2023 12:09:58 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:09:58 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:09:58 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:09:58 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:09:58 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:09:58 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:09:58 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:09:58 AM) |> method; (PlayerClass.UpdatePoints) [4441]
(11/27/2023 12:09:58 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:09:58 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 6)
(11/27/2023 12:09:58 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:09:58 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (8)
(11/27/2023 12:09:58 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-2)
(11/27/2023 12:09:58 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (52), Added; (yellow 6; 6 Points)
(11/27/2023 12:09:58 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:09:58 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 6)
(11/27/2023 12:09:58 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (4)
(11/27/2023 12:09:58 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (1), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 4
(11/27/2023 12:09:58 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (4)
(11/27/2023 12:09:58 AM) |> method; (wildFormClass.wildFormClass)
(11/27/2023 12:10:08 AM) |> method; (wildFormClass.blueBT_Click) [this.Tag = blue]
(11/27/2023 12:10:08 AM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (+4_wild), add, 4
(11/27/2023 12:10:08 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:08 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:10:08 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:10:08 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 43), Value; (16)
(11/27/2023 12:10:08 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:08 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:10:08 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 42), Value; (35)
(11/27/2023 12:10:08 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:08 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:10:08 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 41), Value; (35)
(11/27/2023 12:10:08 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:08 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:10:08 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 40), Value; (18)
(11/27/2023 12:10:08 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:08 AM) |> method; (GameLogicClass.AddCards), cards added; (AddCards Index: 0 AddCards Index: 0 AddCards Index: 0 AddCards Index: 0 )
(11/27/2023 12:10:08 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:10:08 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:10:08 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (4), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, +4_wild), Player Index (0)
(11/27/2023 12:10:08 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:08 AM) |> method; (CardClass.SetPBLocation), x, y; (420, 765)
(11/27/2023 12:10:08 AM) |> method; (CardClass.SetPBLocation), x, y; (475, 765)
(11/27/2023 12:10:08 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:10:08 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:10:08 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:10:08 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:10:08 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:10:08 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:10:08 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:10:08 AM) |> method; (CardClass.SetPBLocation), x, y; (915, 765)
(11/27/2023 12:10:08 AM) |> method; (CardClass.SetPBLocation), x, y; (970, 765)
(11/27/2023 12:10:08 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (970, 970)
(11/27/2023 12:10:08 AM) |> method; (PlayerClass.UpdatePoints) [2970]
(11/27/2023 12:10:08 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:08 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue +4_wild)
(11/27/2023 12:10:08 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:08 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:10:08 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:10:08 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:10:08 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:10:08 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:10:08 AM) |> method; (PlayerClass.UpdatePoints) [4476]
(11/27/2023 12:10:08 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:08 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue +4_wild)
(11/27/2023 12:10:08 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:08 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (4)
(11/27/2023 12:10:08 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-10)
(11/27/2023 12:10:08 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (53), Added; (blue +4_wild; 50 Points)
(11/27/2023 12:10:08 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:08 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (11)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (53), Top Card; (blue, +4_wild)
(11/27/2023 12:10:08 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (7)
Player1CardCount; (5)

    PlusAmount (0)
Discard Pile Count; (53), Top Card; (blue, +4_wild)
(11/27/2023 12:10:09 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (1)
(11/27/2023 12:10:09 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (1)
(11/27/2023 12:10:09 AM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (9), error
(11/27/2023 12:10:09 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:09 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:10:09 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:10:09 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:10:09 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (1), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 9), Player Index (1)
(11/27/2023 12:10:09 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:09 AM) |> method; (CardClass.SetPBLocation), x, y; (445, 765)
(11/27/2023 12:10:09 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 765)
(11/27/2023 12:10:09 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:10:09 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:10:09 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:10:09 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:10:09 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:10:09 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:10:10 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 765)
(11/27/2023 12:10:10 AM) |> method; (CardClass.SetPBLocation), x, y; (940, 765)
(11/27/2023 12:10:10 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (940, 940)
(11/27/2023 12:10:10 AM) |> method; (PlayerClass.UpdatePoints) [3024]
(11/27/2023 12:10:10 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:10 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 9)
(11/27/2023 12:10:10 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:10 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:10:10 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:10:10 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:10:10 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:10:10 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:10:10 AM) |> method; (PlayerClass.UpdatePoints) [4511]
(11/27/2023 12:10:10 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:10 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 9)
(11/27/2023 12:10:10 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:10 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (2)
(11/27/2023 12:10:10 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (6)
(11/27/2023 12:10:10 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (54), Added; (blue 9; 9 Points)
(11/27/2023 12:10:10 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:10 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 9)
(11/27/2023 12:10:10 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 1), Value; (0)
(11/27/2023 12:10:10 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/27/2023 12:10:10 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (2), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 2
(11/27/2023 12:10:10 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/27/2023 12:10:10 AM) |> method; (GameLogicClass.CardPlay), c_card; (red) (9), error
(11/27/2023 12:10:10 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:10 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:10:10 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:10:10 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:10:10 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (2), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 9), Player Index (0)
(11/27/2023 12:10:10 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:10 AM) |> method; (CardClass.SetPBLocation), x, y; (445, 765)
(11/27/2023 12:10:10 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 765)
(11/27/2023 12:10:10 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:10:10 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:10:10 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:10:10 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:10:10 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:10:10 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:10:10 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 765)
(11/27/2023 12:10:10 AM) |> method; (CardClass.SetPBLocation), x, y; (940, 765)
(11/27/2023 12:10:10 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (940, 940)
(11/27/2023 12:10:10 AM) |> method; (PlayerClass.UpdatePoints) [3078]
(11/27/2023 12:10:10 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:10 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 9)
(11/27/2023 12:10:10 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:10 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:10:10 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:10:10 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:10:10 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:10:10 AM) |> method; (PlayerClass.UpdatePoints) [4537]
(11/27/2023 12:10:10 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:10 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 9)
(11/27/2023 12:10:10 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:10 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-6)
(11/27/2023 12:10:10 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (6)
(11/27/2023 12:10:10 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (55), Added; (red 9; 9 Points)
(11/27/2023 12:10:10 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:10 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (10)
Player1CardCount; (3)

    PlusAmount (0)
Discard Pile Count; (55), Top Card; (red, 9)
(11/27/2023 12:10:10 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (10)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (55), Top Card; (red, 9)
(11/27/2023 12:10:11 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/27/2023 12:10:11 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (2)
(11/27/2023 12:10:12 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (9)
(11/27/2023 12:10:12 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (9)
(11/27/2023 12:10:12 AM) |> method; (GameLogicClass.CardPlay), c_card; (red) (5), error
(11/27/2023 12:10:12 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:12 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:10:12 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:10:12 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:10:12 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (9), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 5), Player Index (1)
(11/27/2023 12:10:12 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:12 AM) |> method; (CardClass.SetPBLocation), x, y; (475, 765)
(11/27/2023 12:10:12 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:10:12 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:10:12 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:10:12 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:10:12 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:10:12 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:10:12 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:10:12 AM) |> method; (CardClass.SetPBLocation), x, y; (915, 765)
(11/27/2023 12:10:12 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (915, 915)
(11/27/2023 12:10:12 AM) |> method; (PlayerClass.UpdatePoints) [3127]
(11/27/2023 12:10:12 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:12 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 5)
(11/27/2023 12:10:12 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:12 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:10:12 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:10:12 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:10:12 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:10:12 AM) |> method; (PlayerClass.UpdatePoints) [4563]
(11/27/2023 12:10:12 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:12 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 5)
(11/27/2023 12:10:12 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:12 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (3)
(11/27/2023 12:10:12 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-4)
(11/27/2023 12:10:12 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (56), Added; (red 5; 5 Points)
(11/27/2023 12:10:12 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:12 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 5)
(11/27/2023 12:10:12 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/27/2023 12:10:12 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (1), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 2
(11/27/2023 12:10:12 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/27/2023 12:10:12 AM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (5), error
(11/27/2023 12:10:12 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:12 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:10:12 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:10:12 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:10:12 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (2), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 5), Player Index (0)
(11/27/2023 12:10:12 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:12 AM) |> method; (CardClass.SetPBLocation), x, y; (475, 765)
(11/27/2023 12:10:12 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:10:12 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:10:12 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:10:12 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:10:12 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:10:12 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:10:12 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:10:12 AM) |> method; (CardClass.SetPBLocation), x, y; (915, 765)
(11/27/2023 12:10:12 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (915, 915)
(11/27/2023 12:10:12 AM) |> method; (PlayerClass.UpdatePoints) [3176]
(11/27/2023 12:10:12 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:12 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 5)
(11/27/2023 12:10:12 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:12 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:10:12 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:10:12 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:10:12 AM) |> method; (PlayerClass.UpdatePoints) [4584]
(11/27/2023 12:10:12 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:12 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (blue 5)
(11/27/2023 12:10:12 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:12 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (6)
(11/27/2023 12:10:12 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-10)
(11/27/2023 12:10:12 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (57), Added; (blue 5; 5 Points)
(11/27/2023 12:10:12 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:12 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (9)
Player1CardCount; (2)

    PlusAmount (0)
Discard Pile Count; (57), Top Card; (blue, 5)
(11/27/2023 12:10:12 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (9)
Player1CardCount; (3)

    PlusAmount (0)
Discard Pile Count; (57), Top Card; (blue, 5)
(11/27/2023 12:10:14 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (6)
(11/27/2023 12:10:14 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (6)
(11/27/2023 12:10:14 AM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (8), error
(11/27/2023 12:10:14 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:14 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:10:14 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:10:14 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:10:14 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (6), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 8), Player Index (1)
(11/27/2023 12:10:14 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:14 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 765)
(11/27/2023 12:10:14 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:10:14 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:10:14 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:10:14 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:10:14 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:10:14 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:10:14 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 765)
(11/27/2023 12:10:14 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (885, 885)
(11/27/2023 12:10:14 AM) |> method; (PlayerClass.UpdatePoints) [3217]
(11/27/2023 12:10:14 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:14 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 8)
(11/27/2023 12:10:14 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:14 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:10:14 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:10:14 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:10:14 AM) |> method; (PlayerClass.UpdatePoints) [4605]
(11/27/2023 12:10:14 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:14 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (blue 8)
(11/27/2023 12:10:14 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:14 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (6)
(11/27/2023 12:10:14 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-6)
(11/27/2023 12:10:14 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (58), Added; (blue 8; 8 Points)
(11/27/2023 12:10:14 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:14 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (blue 8)
(11/27/2023 12:10:14 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:10:14 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 39), Value; (19)
(11/27/2023 12:10:14 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:14 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:10:14 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/27/2023 12:10:14 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:14 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 765)
(11/27/2023 12:10:14 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:10:14 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:10:14 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:10:14 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:10:14 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:10:14 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:10:14 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 765)
(11/27/2023 12:10:14 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (885, 885)
(11/27/2023 12:10:14 AM) |> method; (PlayerClass.UpdatePoints) [3258]
(11/27/2023 12:10:14 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:14 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 8)
(11/27/2023 12:10:14 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:14 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:10:15 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:10:15 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:10:15 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:10:15 AM) |> method; (PlayerClass.UpdatePoints) [4633]
(11/27/2023 12:10:15 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:15 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (blue 8)
(11/27/2023 12:10:15 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:15 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (58), Added; (Nothing)
(11/27/2023 12:10:15 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:15 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (8)
Player1CardCount; (3)

    PlusAmount (0)
Discard Pile Count; (58), Top Card; (blue, 8)
(11/27/2023 12:10:15 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (8)
Player1CardCount; (2)

    PlusAmount (0)
Discard Pile Count; (58), Top Card; (blue, 8)
(11/27/2023 12:10:15 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/27/2023 12:10:15 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (2)
(11/27/2023 12:10:15 AM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (reverse), reverce, False
(11/27/2023 12:10:15 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:15 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:10:15 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:10:15 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:10:15 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (2), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, reverse), Player Index (1)
(11/27/2023 12:10:15 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:15 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:10:15 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:10:15 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:10:15 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:10:15 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:10:15 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:10:15 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:10:15 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:10:15 AM) |> method; (PlayerClass.UpdatePoints) [3279]
(11/27/2023 12:10:16 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:16 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue reverse)
(11/27/2023 12:10:16 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:16 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:10:16 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:10:16 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:10:16 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:10:16 AM) |> method; (PlayerClass.UpdatePoints) [4661]
(11/27/2023 12:10:16 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:16 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (blue reverse)
(11/27/2023 12:10:16 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:16 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (8)
(11/27/2023 12:10:16 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-6)
(11/27/2023 12:10:16 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (59), Added; (blue reverse; 20 Points)
(11/27/2023 12:10:16 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:16 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (blue reverse)
(11/27/2023 12:10:16 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:10:16 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 38), Value; (35)
(11/27/2023 12:10:16 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:16 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:10:16 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/27/2023 12:10:16 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:16 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:10:16 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:10:16 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:10:16 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:10:16 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:10:16 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:10:16 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:10:16 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:10:16 AM) |> method; (PlayerClass.UpdatePoints) [3300]
(11/27/2023 12:10:16 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:16 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue reverse)
(11/27/2023 12:10:16 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:16 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:10:16 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:10:16 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:10:16 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:10:16 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:10:16 AM) |> method; (PlayerClass.UpdatePoints) [4739]
(11/27/2023 12:10:16 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:16 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue reverse)
(11/27/2023 12:10:16 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:16 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (59), Added; (Nothing)
(11/27/2023 12:10:16 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:16 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (7)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (59), Top Card; (blue, reverse)
(11/27/2023 12:10:16 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (7)
Player1CardCount; (3)

    PlusAmount (0)
Discard Pile Count; (59), Top Card; (blue, reverse)
(11/27/2023 12:10:17 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (6)
(11/27/2023 12:10:17 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (6)
(11/27/2023 12:10:17 AM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (4), error
(11/27/2023 12:10:17 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:17 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:10:17 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:10:17 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:10:17 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (6), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 4), Player Index (1)
(11/27/2023 12:10:17 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:17 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:10:17 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:10:17 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:10:17 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:10:17 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:10:17 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:10:17 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:10:17 AM) |> method; (PlayerClass.UpdatePoints) [3317]
(11/27/2023 12:10:17 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:17 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 4)
(11/27/2023 12:10:17 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:17 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:10:17 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:10:17 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:10:17 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:10:17 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:10:17 AM) |> method; (PlayerClass.UpdatePoints) [4817]
(11/27/2023 12:10:17 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:17 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 4)
(11/27/2023 12:10:17 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:17 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (8)
(11/27/2023 12:10:17 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-9)
(11/27/2023 12:10:17 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (60), Added; (blue 4; 4 Points)
(11/27/2023 12:10:17 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:17 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 4)
(11/27/2023 12:10:17 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (3)
(11/27/2023 12:10:17 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (1), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 3
(11/27/2023 12:10:17 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (3)
(11/27/2023 12:10:17 AM) |> method; (wildFormClass.wildFormClass)
(11/27/2023 12:10:20 AM) |> method; (wildFormClass.greenBT_Click) [this.Tag = green]
(11/27/2023 12:10:20 AM) |> method; (GameLogicClass.CardPlay), c_card; (green) (+4_wild), add, 4
(11/27/2023 12:10:20 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:20 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:10:20 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:10:20 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 37), Value; (32)
(11/27/2023 12:10:20 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:20 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:10:20 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 36), Value; (30)
(11/27/2023 12:10:20 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:20 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:10:20 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 35), Value; (9)
(11/27/2023 12:10:20 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:20 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:10:20 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 34), Value; (13)
(11/27/2023 12:10:20 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:20 AM) |> method; (GameLogicClass.AddCards), cards added; (AddCards Index: 0 AddCards Index: 0 AddCards Index: 0 AddCards Index: 0 )
(11/27/2023 12:10:20 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:10:20 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:10:20 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (3), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, +4_wild), Player Index (0)
(11/27/2023 12:10:20 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:20 AM) |> method; (CardClass.SetPBLocation), x, y; (445, 765)
(11/27/2023 12:10:20 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 765)
(11/27/2023 12:10:20 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:10:20 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:10:20 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:10:20 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:10:20 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:10:20 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:10:20 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 765)
(11/27/2023 12:10:20 AM) |> method; (CardClass.SetPBLocation), x, y; (940, 765)
(11/27/2023 12:10:20 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (940, 940)
(11/27/2023 12:10:20 AM) |> method; (PlayerClass.UpdatePoints) [3354]
(11/27/2023 12:10:20 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:20 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green +4_wild)
(11/27/2023 12:10:20 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:20 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:10:20 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:10:20 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:10:20 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:10:20 AM) |> method; (PlayerClass.UpdatePoints) [4845]
(11/27/2023 12:10:20 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:20 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green +4_wild)
(11/27/2023 12:10:20 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:20 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (3)
(11/27/2023 12:10:20 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (8)
(11/27/2023 12:10:20 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (61), Added; (green +4_wild; 50 Points)
(11/27/2023 12:10:20 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:20 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (10)
Player1CardCount; (3)

    PlusAmount (0)
Discard Pile Count; (61), Top Card; (green, +4_wild)
(11/27/2023 12:10:20 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (6)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (61), Top Card; (green, +4_wild)
(11/27/2023 12:10:22 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:10:22 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (0)
(11/27/2023 12:10:22 AM) |> method; (GameLogicClass.CardPlay), c_card; (green) (6), error
(11/27/2023 12:10:22 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:22 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:10:22 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:10:22 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:10:22 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 6), Player Index (1)
(11/27/2023 12:10:22 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:22 AM) |> method; (CardClass.SetPBLocation), x, y; (475, 765)
(11/27/2023 12:10:22 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:10:22 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:10:22 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:10:22 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:10:22 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:10:22 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:10:22 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:10:22 AM) |> method; (CardClass.SetPBLocation), x, y; (915, 765)
(11/27/2023 12:10:22 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (915, 915)
(11/27/2023 12:10:22 AM) |> method; (PlayerClass.UpdatePoints) [3385]
(11/27/2023 12:10:22 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:22 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 6)
(11/27/2023 12:10:22 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:22 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:10:22 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:10:22 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:10:22 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:10:22 AM) |> method; (PlayerClass.UpdatePoints) [4873]
(11/27/2023 12:10:22 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:22 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 6)
(11/27/2023 12:10:22 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:22 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-2)
(11/27/2023 12:10:22 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (5)
(11/27/2023 12:10:22 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (62), Added; (green 6; 6 Points)
(11/27/2023 12:10:22 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:22 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 6)
(11/27/2023 12:10:22 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 1), Value; (0)
(11/27/2023 12:10:22 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:10:22 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (2), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 0
(11/27/2023 12:10:22 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:10:22 AM) |> method; (GameLogicClass.CardPlay), c_card; (green) (1), error
(11/27/2023 12:10:22 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:22 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:10:22 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:10:22 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:10:22 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 1), Player Index (0)
(11/27/2023 12:10:22 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:22 AM) |> method; (CardClass.SetPBLocation), x, y; (475, 765)
(11/27/2023 12:10:22 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:10:22 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:10:22 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:10:22 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:10:22 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:10:22 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:10:22 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:10:22 AM) |> method; (CardClass.SetPBLocation), x, y; (915, 765)
(11/27/2023 12:10:22 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (915, 915)
(11/27/2023 12:10:22 AM) |> method; (PlayerClass.UpdatePoints) [3416]
(11/27/2023 12:10:22 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:22 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 1)
(11/27/2023 12:10:22 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:22 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:10:22 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:10:22 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:10:22 AM) |> method; (PlayerClass.UpdatePoints) [4900]
(11/27/2023 12:10:22 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:22 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 1)
(11/27/2023 12:10:22 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:22 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (7)
(11/27/2023 12:10:22 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (0)
(11/27/2023 12:10:22 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (63), Added; (green 1; 1 Points)
(11/27/2023 12:10:22 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:22 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (9)
Player1CardCount; (2)

    PlusAmount (0)
Discard Pile Count; (63), Top Card; (green, 1)
(11/27/2023 12:10:22 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (9)
Player1CardCount; (3)

    PlusAmount (0)
Discard Pile Count; (63), Top Card; (green, 1)
(11/27/2023 12:10:23 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (5)
(11/27/2023 12:10:23 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (5)
(11/27/2023 12:10:23 AM) |> method; (GameLogicClass.CardPlay), c_card; (green) (7), error
(11/27/2023 12:10:23 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:23 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:10:23 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:10:24 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:10:24 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (5), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 7), Player Index (1)
(11/27/2023 12:10:24 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:24 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 765)
(11/27/2023 12:10:24 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:10:24 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:10:24 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:10:24 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:10:24 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:10:24 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:10:24 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 765)
(11/27/2023 12:10:24 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (885, 885)
(11/27/2023 12:10:24 AM) |> method; (PlayerClass.UpdatePoints) [3440]
(11/27/2023 12:10:24 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:24 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 7)
(11/27/2023 12:10:24 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:24 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:10:24 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:10:24 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:10:24 AM) |> method; (PlayerClass.UpdatePoints) [4927]
(11/27/2023 12:10:24 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:24 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 7)
(11/27/2023 12:10:24 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:24 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (2)
(11/27/2023 12:10:24 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-2)
(11/27/2023 12:10:24 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (64), Added; (green 7; 7 Points)
(11/27/2023 12:10:24 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:24 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 7)
(11/27/2023 12:10:24 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 1), Value; (0)
(11/27/2023 12:10:24 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:10:24 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (2), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 0
(11/27/2023 12:10:24 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:10:24 AM) |> method; (GameLogicClass.CardPlay), c_card; (green) (skip), error
(11/27/2023 12:10:24 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:24 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:10:24 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:10:24 AM) |> method; (GameLogicClass.CardClickLogic), In skip
(11/27/2023 12:10:24 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:10:24 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:10:24 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, skip), Player Index (1)
(11/27/2023 12:10:24 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:24 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 765)
(11/27/2023 12:10:24 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:10:24 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:10:24 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:10:24 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:10:24 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:10:24 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:10:24 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 765)
(11/27/2023 12:10:24 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (885, 885)
(11/27/2023 12:10:24 AM) |> method; (PlayerClass.UpdatePoints) [3464]
(11/27/2023 12:10:24 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:24 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green skip)
(11/27/2023 12:10:24 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:24 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:10:24 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (695, 695)
(11/27/2023 12:10:24 AM) |> method; (PlayerClass.UpdatePoints) [4934]
(11/27/2023 12:10:24 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:24 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green skip)
(11/27/2023 12:10:24 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:24 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-5)
(11/27/2023 12:10:24 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (8)
(11/27/2023 12:10:24 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (65), Added; (green skip; 20 Points)
(11/27/2023 12:10:24 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:24 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green skip)
(11/27/2023 12:10:24 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:10:24 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 33), Value; (5)
(11/27/2023 12:10:24 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:24 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:10:24 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/27/2023 12:10:24 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:24 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 765)
(11/27/2023 12:10:24 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:10:24 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:10:24 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:10:24 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:10:24 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:10:24 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:10:24 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 765)
(11/27/2023 12:10:24 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (885, 885)
(11/27/2023 12:10:24 AM) |> method; (PlayerClass.UpdatePoints) [3488]
(11/27/2023 12:10:24 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:24 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green skip)
(11/27/2023 12:10:24 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:24 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:10:24 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:10:24 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:10:24 AM) |> method; (PlayerClass.UpdatePoints) [4943]
(11/27/2023 12:10:24 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:24 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green skip)
(11/27/2023 12:10:24 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:24 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (65), Added; (Nothing)
(11/27/2023 12:10:24 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:24 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (8)
Player1CardCount; (2)

    PlusAmount (0)
Discard Pile Count; (65), Top Card; (green, skip)
(11/27/2023 12:10:24 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (8)
Player1CardCount; (1)

    PlusAmount (0)
Discard Pile Count; (65), Top Card; (green, skip)
(11/27/2023 12:10:24 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (8)
Player1CardCount; (2)

    PlusAmount (0)
Discard Pile Count; (65), Top Card; (green, skip)
(11/27/2023 12:10:25 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (7)
(11/27/2023 12:10:25 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (7)
(11/27/2023 12:10:25 AM) |> method; (GameLogicClass.CardPlay), c_card; (green) (7), error
(11/27/2023 12:10:25 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:25 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:10:25 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:10:25 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:10:25 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (7), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 7), Player Index (1)
(11/27/2023 12:10:25 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:25 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:10:25 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:10:25 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:10:25 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:10:25 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:10:25 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:10:25 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:10:25 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:10:25 AM) |> method; (PlayerClass.UpdatePoints) [3505]
(11/27/2023 12:10:26 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:26 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 7)
(11/27/2023 12:10:26 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:26 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:10:26 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:10:26 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:10:26 AM) |> method; (PlayerClass.UpdatePoints) [4952]
(11/27/2023 12:10:26 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:26 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 7)
(11/27/2023 12:10:26 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:26 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-7)
(11/27/2023 12:10:26 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (4)
(11/27/2023 12:10:26 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (66), Added; (green 7; 7 Points)
(11/27/2023 12:10:26 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:26 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 7)
(11/27/2023 12:10:26 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:10:26 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (1), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 0
(11/27/2023 12:10:26 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:10:26 AM) |> method; (GameLogicClass.CardPlay), c_card; (red) (7), error
(11/27/2023 12:10:26 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:26 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:10:26 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:10:26 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:10:26 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 7), Player Index (0)
(11/27/2023 12:10:26 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:26 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:10:26 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:10:26 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:10:26 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:10:26 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:10:26 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:10:26 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:10:26 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:10:26 AM) |> method; (PlayerClass.UpdatePoints) [3522]
(11/27/2023 12:10:26 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:26 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 7)
(11/27/2023 12:10:26 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:26 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:10:26 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (695, 695)
(11/27/2023 12:10:26 AM) |> method; (PlayerClass.UpdatePoints) [4954]
(11/27/2023 12:10:26 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:26 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 7)
(11/27/2023 12:10:26 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:26 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (6)
(11/27/2023 12:10:26 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (7)
(11/27/2023 12:10:26 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (67), Added; (red 7; 7 Points)
(11/27/2023 12:10:26 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:26 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (7)
Player1CardCount; (1)

    PlusAmount (0)
Discard Pile Count; (67), Top Card; (red, 7)
(11/27/2023 12:10:26 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (7)
Player1CardCount; (2)

    PlusAmount (0)
Discard Pile Count; (67), Top Card; (red, 7)
(11/27/2023 12:10:27 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/27/2023 12:10:27 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (2)
(11/27/2023 12:10:27 AM) |> method; (GameLogicClass.CardPlay), c_card; (red) (0), error
(11/27/2023 12:10:27 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:27 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:10:27 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:10:27 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:10:27 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (2), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 0), Player Index (1)
(11/27/2023 12:10:27 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:27 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:10:27 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:10:27 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:10:27 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:10:27 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:10:27 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:10:27 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:10:27 AM) |> method; (PlayerClass.UpdatePoints) [3539]
(11/27/2023 12:10:27 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:27 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 0)
(11/27/2023 12:10:27 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:27 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:10:27 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (695, 695)
(11/27/2023 12:10:27 AM) |> method; (PlayerClass.UpdatePoints) [4956]
(11/27/2023 12:10:27 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:27 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 0)
(11/27/2023 12:10:27 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:27 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-9)
(11/27/2023 12:10:27 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-8)
(11/27/2023 12:10:27 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (68), Added; (red 0; 0 Points)
(11/27/2023 12:10:27 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:27 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 0)
(11/27/2023 12:10:27 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:10:27 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 32), Value; (3)
(11/27/2023 12:10:27 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:27 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:10:27 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/27/2023 12:10:27 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:27 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:10:27 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:10:27 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:10:27 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:10:27 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:10:27 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:10:27 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:10:27 AM) |> method; (PlayerClass.UpdatePoints) [3556]
(11/27/2023 12:10:27 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:27 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 0)
(11/27/2023 12:10:27 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:27 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:10:27 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:10:27 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:10:27 AM) |> method; (PlayerClass.UpdatePoints) [4978]
(11/27/2023 12:10:27 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:27 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 0)
(11/27/2023 12:10:27 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:27 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (68), Added; (Nothing)
(11/27/2023 12:10:27 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:27 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (6)
Player1CardCount; (2)

    PlusAmount (0)
Discard Pile Count; (68), Top Card; (red, 0)
(11/27/2023 12:10:27 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (6)
Player1CardCount; (1)

    PlusAmount (0)
Discard Pile Count; (68), Top Card; (red, 0)
(11/27/2023 12:10:29 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (4)
(11/27/2023 12:10:29 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (4)
(11/27/2023 12:10:32 AM) |> method; (GameLogicClass.DrawPile_Clicked)
(11/27/2023 12:10:32 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:10:32 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 31), Value; (17)
(11/27/2023 12:10:32 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:32 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:10:32 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (1), add one
(11/27/2023 12:10:32 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:32 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:10:32 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:10:32 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:10:32 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:10:32 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:10:32 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:10:32 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:10:32 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:10:32 AM) |> method; (PlayerClass.UpdatePoints) [3593]
(11/27/2023 12:10:32 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:32 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 0)
(11/27/2023 12:10:32 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:32 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:10:32 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:10:32 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:10:32 AM) |> method; (PlayerClass.UpdatePoints) [5000]
(11/27/2023 12:10:32 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:32 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 0)
(11/27/2023 12:10:32 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:32 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (68), Added; (Nothing)
(11/27/2023 12:10:32 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:32 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 0)
(11/27/2023 12:10:32 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (1)
(11/27/2023 12:10:32 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (1), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 1
(11/27/2023 12:10:32 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (1)
(11/27/2023 12:10:32 AM) |> method; (GameLogicClass.CardPlay), c_card; (red) (skip), error
(11/27/2023 12:10:32 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:32 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:10:32 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:10:32 AM) |> method; (GameLogicClass.CardClickLogic), In skip
(11/27/2023 12:10:32 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:10:32 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:10:32 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (1), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, skip), Player Index (1)
(11/27/2023 12:10:32 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:32 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:10:32 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:10:32 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:10:32 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:10:32 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:10:32 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:10:32 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:10:32 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:10:32 AM) |> method; (PlayerClass.UpdatePoints) [3630]
(11/27/2023 12:10:32 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:32 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red skip)
(11/27/2023 12:10:32 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:32 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:10:32 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (695, 695)
(11/27/2023 12:10:32 AM) |> method; (PlayerClass.UpdatePoints) [5002]
(11/27/2023 12:10:32 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:32 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red skip)
(11/27/2023 12:10:32 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:32 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-10)
(11/27/2023 12:10:32 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (1)
(11/27/2023 12:10:32 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (69), Added; (red skip; 20 Points)
(11/27/2023 12:10:32 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:32 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red skip)
(11/27/2023 12:10:32 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:10:32 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 30), Value; (5)
(11/27/2023 12:10:32 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:32 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:10:32 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/27/2023 12:10:32 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:32 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:10:32 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:10:32 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:10:32 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:10:32 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:10:32 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:10:32 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:10:32 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:10:32 AM) |> method; (PlayerClass.UpdatePoints) [3667]
(11/27/2023 12:10:32 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:32 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red skip)
(11/27/2023 12:10:32 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:32 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:10:32 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:10:32 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:10:32 AM) |> method; (PlayerClass.UpdatePoints) [5012]
(11/27/2023 12:10:32 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:32 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red skip)
(11/27/2023 12:10:32 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:32 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (69), Added; (Nothing)
(11/27/2023 12:10:32 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:32 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (7)
Player1CardCount; (2)

    PlusAmount (0)
Discard Pile Count; (69), Top Card; (red, skip)
(11/27/2023 12:10:32 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (7)
Player1CardCount; (1)

    PlusAmount (0)
Discard Pile Count; (69), Top Card; (red, skip)
(11/27/2023 12:10:32 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (7)
Player1CardCount; (2)

    PlusAmount (0)
Discard Pile Count; (69), Top Card; (red, skip)
(11/27/2023 12:10:33 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (6)
(11/27/2023 12:10:33 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (6)
(11/27/2023 12:10:33 AM) |> method; (GameLogicClass.CardPlay), c_card; (red) (skip), error
(11/27/2023 12:10:33 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:33 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:10:33 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:10:33 AM) |> method; (GameLogicClass.CardClickLogic), In skip
(11/27/2023 12:10:33 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:10:33 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:10:33 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (6), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, skip), Player Index (0)
(11/27/2023 12:10:33 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:33 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:10:33 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:10:33 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:10:33 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:10:33 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:10:33 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:10:33 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:10:33 AM) |> method; (PlayerClass.UpdatePoints) [3684]
(11/27/2023 12:10:34 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:34 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red skip)
(11/27/2023 12:10:34 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:34 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:10:34 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:10:34 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:10:34 AM) |> method; (PlayerClass.UpdatePoints) [5022]
(11/27/2023 12:10:34 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:34 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red skip)
(11/27/2023 12:10:34 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:34 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (5)
(11/27/2023 12:10:34 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-9)
(11/27/2023 12:10:34 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (70), Added; (red skip; 20 Points)
(11/27/2023 12:10:34 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:34 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (6)
Player1CardCount; (2)

    PlusAmount (0)
Discard Pile Count; (70), Top Card; (red, skip)
(11/27/2023 12:10:35 AM) |> method; (GameLogicClass.DrawPile_Clicked)
(11/27/2023 12:10:35 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:10:35 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 29), Value; (5)
(11/27/2023 12:10:35 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:35 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:10:35 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (1), add one
(11/27/2023 12:10:35 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:35 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:10:35 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:10:35 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:10:35 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:10:35 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:10:35 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:10:35 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:10:35 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:10:35 AM) |> method; (PlayerClass.UpdatePoints) [3701]
(11/27/2023 12:10:35 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:35 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red skip)
(11/27/2023 12:10:35 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:35 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:10:35 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:10:35 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:10:35 AM) |> method; (PlayerClass.UpdatePoints) [5032]
(11/27/2023 12:10:35 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:35 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red skip)
(11/27/2023 12:10:35 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:35 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (70), Added; (Nothing)
(11/27/2023 12:10:35 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:35 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red skip)
(11/27/2023 12:10:35 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:10:35 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 28), Value; (6)
(11/27/2023 12:10:35 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:35 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:10:35 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/27/2023 12:10:35 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:35 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:10:35 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:10:35 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:10:35 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:10:35 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:10:35 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:10:35 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:10:35 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:10:35 AM) |> method; (PlayerClass.UpdatePoints) [3718]
(11/27/2023 12:10:36 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:36 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red skip)
(11/27/2023 12:10:36 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:36 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:10:36 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:10:36 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:10:36 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:10:36 AM) |> method; (PlayerClass.UpdatePoints) [5045]
(11/27/2023 12:10:36 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:36 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red skip)
(11/27/2023 12:10:36 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:36 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (70), Added; (Nothing)
(11/27/2023 12:10:36 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:36 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (7)
Player1CardCount; (3)

    PlusAmount (0)
Discard Pile Count; (70), Top Card; (red, skip)
(11/27/2023 12:10:36 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (7)
Player1CardCount; (2)

    PlusAmount (0)
Discard Pile Count; (70), Top Card; (red, skip)
(11/27/2023 12:10:37 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (6)
(11/27/2023 12:10:37 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (6)
(11/27/2023 12:10:37 AM) |> method; (GameLogicClass.DrawPile_Clicked)
(11/27/2023 12:10:37 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:10:37 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 27), Value; (19)
(11/27/2023 12:10:37 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:37 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:10:37 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (1), add one
(11/27/2023 12:10:37 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:37 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 765)
(11/27/2023 12:10:37 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:10:37 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:10:38 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:10:38 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:10:38 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:10:38 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:10:38 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 765)
(11/27/2023 12:10:38 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (885, 885)
(11/27/2023 12:10:38 AM) |> method; (PlayerClass.UpdatePoints) [3755]
(11/27/2023 12:10:38 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:38 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red skip)
(11/27/2023 12:10:38 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:38 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:10:38 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:10:38 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:10:38 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:10:38 AM) |> method; (PlayerClass.UpdatePoints) [5058]
(11/27/2023 12:10:38 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:38 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red skip)
(11/27/2023 12:10:38 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:38 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (70), Added; (Nothing)
(11/27/2023 12:10:38 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:38 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red skip)
(11/27/2023 12:10:38 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:10:38 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 26), Value; (6)
(11/27/2023 12:10:38 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:38 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:10:38 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/27/2023 12:10:38 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:38 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 765)
(11/27/2023 12:10:38 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:10:38 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:10:38 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:10:38 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:10:38 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:10:38 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:10:38 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 765)
(11/27/2023 12:10:38 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (885, 885)
(11/27/2023 12:10:38 AM) |> method; (PlayerClass.UpdatePoints) [3792]
(11/27/2023 12:10:38 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:38 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red skip)
(11/27/2023 12:10:38 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:38 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:10:38 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:10:38 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:10:38 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:10:38 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:10:38 AM) |> method; (PlayerClass.UpdatePoints) [5075]
(11/27/2023 12:10:38 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:38 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red skip)
(11/27/2023 12:10:38 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:38 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (70), Added; (Nothing)
(11/27/2023 12:10:38 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:38 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (8)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (70), Top Card; (red, skip)
(11/27/2023 12:10:38 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (8)
Player1CardCount; (3)

    PlusAmount (0)
Discard Pile Count; (70), Top Card; (red, skip)
(11/27/2023 12:10:39 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (7)
(11/27/2023 12:10:39 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (7)
(11/27/2023 12:10:39 AM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (skip), error
(11/27/2023 12:10:39 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:39 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:10:39 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:10:39 AM) |> method; (GameLogicClass.CardClickLogic), In skip
(11/27/2023 12:10:39 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:10:39 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:10:39 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (7), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, skip), Player Index (0)
(11/27/2023 12:10:39 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:39 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:10:39 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:10:39 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:10:39 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:10:39 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:10:39 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:10:39 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:10:39 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:10:39 AM) |> method; (PlayerClass.UpdatePoints) [3809]
(11/27/2023 12:10:39 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:39 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow skip)
(11/27/2023 12:10:39 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:39 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:10:39 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:10:39 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:10:39 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:10:39 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:10:39 AM) |> method; (PlayerClass.UpdatePoints) [5092]
(11/27/2023 12:10:39 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:39 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow skip)
(11/27/2023 12:10:39 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:39 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-4)
(11/27/2023 12:10:39 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-10)
(11/27/2023 12:10:39 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (71), Added; (yellow skip; 20 Points)
(11/27/2023 12:10:39 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:39 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (7)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (71), Top Card; (yellow, skip)
(11/27/2023 12:10:40 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (1)
(11/27/2023 12:10:40 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (1)
(11/27/2023 12:10:40 AM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (5), error
(11/27/2023 12:10:40 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:40 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:10:40 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:10:40 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:10:40 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (1), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 5), Player Index (1)
(11/27/2023 12:10:40 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:40 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:10:40 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:10:40 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:10:40 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:10:40 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:10:40 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:10:40 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:10:40 AM) |> method; (PlayerClass.UpdatePoints) [3821]
(11/27/2023 12:10:40 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:40 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 5)
(11/27/2023 12:10:40 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:40 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:10:40 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:10:40 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:10:40 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:10:40 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:10:40 AM) |> method; (PlayerClass.UpdatePoints) [5109]
(11/27/2023 12:10:40 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:40 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 5)
(11/27/2023 12:10:40 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:40 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (1)
(11/27/2023 12:10:40 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (0)
(11/27/2023 12:10:40 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (72), Added; (yellow 5; 5 Points)
(11/27/2023 12:10:40 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:40 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 5)
(11/27/2023 12:10:40 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 1), Value; (0)
(11/27/2023 12:10:40 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:10:40 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (2), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 0
(11/27/2023 12:10:40 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:10:40 AM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (2), error
(11/27/2023 12:10:40 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:40 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:10:40 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:10:40 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:10:40 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 2), Player Index (0)
(11/27/2023 12:10:40 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:40 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:10:40 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:10:40 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:10:40 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:10:40 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:10:40 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:10:40 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:10:40 AM) |> method; (PlayerClass.UpdatePoints) [3833]
(11/27/2023 12:10:40 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:40 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 2)
(11/27/2023 12:10:40 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:40 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:10:40 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:10:40 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:10:40 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:10:40 AM) |> method; (PlayerClass.UpdatePoints) [5124]
(11/27/2023 12:10:40 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:40 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 2)
(11/27/2023 12:10:40 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:40 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-6)
(11/27/2023 12:10:40 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-4)
(11/27/2023 12:10:40 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (73), Added; (yellow 2; 2 Points)
(11/27/2023 12:10:40 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:40 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (6)
Player1CardCount; (3)

    PlusAmount (0)
Discard Pile Count; (73), Top Card; (yellow, 2)
(11/27/2023 12:10:40 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (6)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (73), Top Card; (yellow, 2)
(11/27/2023 12:10:42 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (1)
(11/27/2023 12:10:42 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (1)
(11/27/2023 12:10:42 AM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (1), error
(11/27/2023 12:10:42 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:42 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:10:42 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:10:42 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:10:42 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (1), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 1), Player Index (1)
(11/27/2023 12:10:42 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:42 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:10:42 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:10:42 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:10:42 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:10:42 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:10:42 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:10:42 AM) |> method; (PlayerClass.UpdatePoints) [3844]
(11/27/2023 12:10:42 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:42 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 1)
(11/27/2023 12:10:42 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:42 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:10:42 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:10:42 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:10:42 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:10:42 AM) |> method; (PlayerClass.UpdatePoints) [5139]
(11/27/2023 12:10:42 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:42 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 1)
(11/27/2023 12:10:42 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:42 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (3)
(11/27/2023 12:10:42 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (5)
(11/27/2023 12:10:42 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (74), Added; (yellow 1; 1 Points)
(11/27/2023 12:10:42 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:42 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 1)
(11/27/2023 12:10:42 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:10:42 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (1), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 0
(11/27/2023 12:10:42 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:10:42 AM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (8), error
(11/27/2023 12:10:42 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:42 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:10:42 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:10:42 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:10:42 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 8), Player Index (0)
(11/27/2023 12:10:42 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:42 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:10:42 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:10:42 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:10:42 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:10:42 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:10:42 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:10:42 AM) |> method; (PlayerClass.UpdatePoints) [3855]
(11/27/2023 12:10:42 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:42 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (yellow 8)
(11/27/2023 12:10:42 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:42 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:10:42 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:10:42 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:10:42 AM) |> method; (PlayerClass.UpdatePoints) [5146]
(11/27/2023 12:10:42 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:42 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (yellow 8)
(11/27/2023 12:10:42 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:42 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (3)
(11/27/2023 12:10:42 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-2)
(11/27/2023 12:10:42 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (75), Added; (yellow 8; 8 Points)
(11/27/2023 12:10:42 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:42 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (5)
Player1CardCount; (2)

    PlusAmount (0)
Discard Pile Count; (75), Top Card; (yellow, 8)
(11/27/2023 12:10:42 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (5)
Player1CardCount; (3)

    PlusAmount (0)
Discard Pile Count; (75), Top Card; (yellow, 8)
(11/27/2023 12:10:44 AM) |> method; (GameLogicClass.DrawPile_Clicked)
(11/27/2023 12:10:44 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:10:44 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 25), Value; (12)
(11/27/2023 12:10:44 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:44 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:10:44 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (1), add one
(11/27/2023 12:10:44 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:44 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:10:44 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:10:44 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:10:44 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:10:44 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:10:44 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:10:44 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:10:44 AM) |> method; (PlayerClass.UpdatePoints) [3875]
(11/27/2023 12:10:44 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:44 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (yellow 8)
(11/27/2023 12:10:44 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:44 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:10:44 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:10:44 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:10:44 AM) |> method; (PlayerClass.UpdatePoints) [5153]
(11/27/2023 12:10:44 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:44 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (yellow 8)
(11/27/2023 12:10:44 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:44 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (75), Added; (Nothing)
(11/27/2023 12:10:44 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:44 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (yellow 8)
(11/27/2023 12:10:44 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:10:44 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 24), Value; (10)
(11/27/2023 12:10:44 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:44 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:10:44 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/27/2023 12:10:44 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:44 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:10:44 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:10:44 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:10:44 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:10:44 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:10:44 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:10:44 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:10:44 AM) |> method; (PlayerClass.UpdatePoints) [3895]
(11/27/2023 12:10:44 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:44 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (yellow 8)
(11/27/2023 12:10:44 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:44 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:10:44 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:10:44 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:10:44 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:10:44 AM) |> method; (PlayerClass.UpdatePoints) [5166]
(11/27/2023 12:10:44 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:44 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (yellow 8)
(11/27/2023 12:10:44 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:44 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (75), Added; (Nothing)
(11/27/2023 12:10:44 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:44 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (6)
Player1CardCount; (3)

    PlusAmount (0)
Discard Pile Count; (75), Top Card; (yellow, 8)
(11/27/2023 12:10:44 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (6)
Player1CardCount; (2)

    PlusAmount (0)
Discard Pile Count; (75), Top Card; (yellow, 8)
(11/27/2023 12:10:46 AM) |> method; (GameLogicClass.DrawPile_Clicked)
(11/27/2023 12:10:46 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:10:46 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 23), Value; (14)
(11/27/2023 12:10:46 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:46 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:10:46 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (1), add one
(11/27/2023 12:10:46 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:46 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:10:46 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:10:46 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:10:46 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:10:46 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:10:46 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:10:46 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:10:46 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:10:46 AM) |> method; (PlayerClass.UpdatePoints) [3922]
(11/27/2023 12:10:46 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:46 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 8)
(11/27/2023 12:10:46 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:46 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:10:46 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:10:46 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:10:46 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:10:46 AM) |> method; (PlayerClass.UpdatePoints) [5179]
(11/27/2023 12:10:46 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:46 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (yellow 8)
(11/27/2023 12:10:46 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:46 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (75), Added; (Nothing)
(11/27/2023 12:10:46 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:46 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (yellow 8)
(11/27/2023 12:10:46 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:10:46 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 22), Value; (1)
(11/27/2023 12:10:46 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:46 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:10:46 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/27/2023 12:10:46 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:46 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:10:46 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:10:46 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:10:46 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:10:46 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:10:46 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:10:46 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:10:46 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:10:46 AM) |> method; (PlayerClass.UpdatePoints) [3949]
(11/27/2023 12:10:46 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:46 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 8)
(11/27/2023 12:10:46 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:46 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:10:46 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:10:46 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:10:46 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:10:46 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:10:46 AM) |> method; (PlayerClass.UpdatePoints) [5200]
(11/27/2023 12:10:46 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:46 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 8)
(11/27/2023 12:10:46 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:46 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (75), Added; (Nothing)
(11/27/2023 12:10:46 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:46 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (7)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (75), Top Card; (yellow, 8)
(11/27/2023 12:10:46 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (7)
Player1CardCount; (3)

    PlusAmount (0)
Discard Pile Count; (75), Top Card; (yellow, 8)
(11/27/2023 12:10:47 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (6)
(11/27/2023 12:10:47 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (6)
(11/27/2023 12:10:47 AM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (7), error
(11/27/2023 12:10:47 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:47 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:10:47 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:10:47 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:10:47 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (6), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 7), Player Index (1)
(11/27/2023 12:10:47 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:47 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:10:47 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:10:47 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:10:47 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:10:47 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:10:47 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:10:47 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:10:47 AM) |> method; (PlayerClass.UpdatePoints) [3969]
(11/27/2023 12:10:48 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:48 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (yellow 7)
(11/27/2023 12:10:48 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:48 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:10:48 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:10:48 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:10:48 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:10:48 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:10:48 AM) |> method; (PlayerClass.UpdatePoints) [5221]
(11/27/2023 12:10:48 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:48 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (yellow 7)
(11/27/2023 12:10:48 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:48 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-8)
(11/27/2023 12:10:48 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (7)
(11/27/2023 12:10:48 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (76), Added; (yellow 7; 7 Points)
(11/27/2023 12:10:48 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:48 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (yellow 7)
(11/27/2023 12:10:48 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:10:48 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 21), Value; (10)
(11/27/2023 12:10:48 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:48 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:10:48 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/27/2023 12:10:48 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:48 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:10:48 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:10:48 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:10:48 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:10:48 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:10:48 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:10:48 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:10:48 AM) |> method; (PlayerClass.UpdatePoints) [3989]
(11/27/2023 12:10:48 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:48 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (yellow 7)
(11/27/2023 12:10:48 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:48 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:10:48 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:10:48 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:10:48 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:10:48 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:10:48 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:10:48 AM) |> method; (PlayerClass.UpdatePoints) [5244]
(11/27/2023 12:10:48 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:48 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 7)
(11/27/2023 12:10:48 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:48 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (76), Added; (Nothing)
(11/27/2023 12:10:48 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:48 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (6)
Player1CardCount; (5)

    PlusAmount (0)
Discard Pile Count; (76), Top Card; (yellow, 7)
(11/27/2023 12:10:48 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (6)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (76), Top Card; (yellow, 7)
(11/27/2023 12:10:49 AM) |> method; (GameLogicClass.DrawPile_Clicked)
(11/27/2023 12:10:49 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:10:49 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 20), Value; (16)
(11/27/2023 12:10:49 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:49 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:10:49 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (1), add one
(11/27/2023 12:10:49 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:49 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:10:49 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:10:49 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:10:49 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:10:49 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:10:49 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:10:49 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:10:49 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:10:49 AM) |> method; (PlayerClass.UpdatePoints) [4015]
(11/27/2023 12:10:50 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:50 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (yellow 7)
(11/27/2023 12:10:50 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:50 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:10:50 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:10:50 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:10:50 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:10:50 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:10:50 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:10:50 AM) |> method; (PlayerClass.UpdatePoints) [5267]
(11/27/2023 12:10:50 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:50 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 7)
(11/27/2023 12:10:50 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:50 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (76), Added; (Nothing)
(11/27/2023 12:10:50 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:50 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 7)
(11/27/2023 12:10:50 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (4)
(11/27/2023 12:10:50 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (1), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 4
(11/27/2023 12:10:50 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (4)
(11/27/2023 12:10:50 AM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (2), error
(11/27/2023 12:10:50 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:50 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:10:50 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:10:50 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:10:50 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (4), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 2), Player Index (0)
(11/27/2023 12:10:50 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:50 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:10:50 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:10:50 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:10:50 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:10:50 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:10:50 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:10:50 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:10:50 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:10:50 AM) |> method; (PlayerClass.UpdatePoints) [4041]
(11/27/2023 12:10:50 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:50 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 2)
(11/27/2023 12:10:50 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:50 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:10:50 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:10:50 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:10:50 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:10:50 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:10:50 AM) |> method; (PlayerClass.UpdatePoints) [5288]
(11/27/2023 12:10:50 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:50 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (yellow 2)
(11/27/2023 12:10:50 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:50 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (7)
(11/27/2023 12:10:50 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (4)
(11/27/2023 12:10:50 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (77), Added; (yellow 2; 2 Points)
(11/27/2023 12:10:50 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:50 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (7)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (77), Top Card; (yellow, 2)
(11/27/2023 12:10:50 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (7)
Player1CardCount; (5)

    PlusAmount (0)
Discard Pile Count; (77), Top Card; (yellow, 2)
(11/27/2023 12:10:52 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (1)
(11/27/2023 12:10:52 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (1)
(11/27/2023 12:10:52 AM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (2), error
(11/27/2023 12:10:52 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:52 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:10:52 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:10:52 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:10:52 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (1), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 2), Player Index (1)
(11/27/2023 12:10:52 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:52 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:10:52 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:10:52 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:10:52 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:10:52 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:10:52 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:10:52 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:10:52 AM) |> method; (PlayerClass.UpdatePoints) [4065]
(11/27/2023 12:10:52 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:52 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 2)
(11/27/2023 12:10:52 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:52 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:10:52 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:10:52 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:10:52 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:10:52 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:10:52 AM) |> method; (PlayerClass.UpdatePoints) [5309]
(11/27/2023 12:10:52 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:52 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (blue 2)
(11/27/2023 12:10:52 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:52 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-4)
(11/27/2023 12:10:52 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-4)
(11/27/2023 12:10:52 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (78), Added; (blue 2; 2 Points)
(11/27/2023 12:10:52 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:52 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (blue 2)
(11/27/2023 12:10:52 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:10:52 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 19), Value; (2)
(11/27/2023 12:10:52 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:52 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:10:52 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/27/2023 12:10:52 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:52 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:10:52 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:10:52 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:10:52 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:10:52 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:10:52 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:10:52 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:10:52 AM) |> method; (PlayerClass.UpdatePoints) [4089]
(11/27/2023 12:10:52 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:52 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 2)
(11/27/2023 12:10:52 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:52 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:10:52 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:10:52 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:10:52 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:10:52 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:10:52 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:10:52 AM) |> method; (PlayerClass.UpdatePoints) [5330]
(11/27/2023 12:10:52 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:52 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (blue 2)
(11/27/2023 12:10:52 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:52 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (78), Added; (Nothing)
(11/27/2023 12:10:52 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:52 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (6)
Player1CardCount; (5)

    PlusAmount (0)
Discard Pile Count; (78), Top Card; (blue, 2)
(11/27/2023 12:10:52 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (6)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (78), Top Card; (blue, 2)
(11/27/2023 12:10:56 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (5)
(11/27/2023 12:10:56 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (5)
(11/27/2023 12:10:56 AM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (6), error
(11/27/2023 12:10:56 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:56 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:10:56 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:10:56 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:10:56 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (5), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 6), Player Index (1)
(11/27/2023 12:10:56 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:56 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:10:56 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:10:56 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:10:56 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:10:56 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:10:56 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:10:56 AM) |> method; (PlayerClass.UpdatePoints) [4107]
(11/27/2023 12:10:56 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:56 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (blue 6)
(11/27/2023 12:10:56 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:56 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:10:56 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:10:56 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:10:56 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:10:56 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:10:56 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:10:56 AM) |> method; (PlayerClass.UpdatePoints) [5351]
(11/27/2023 12:10:56 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:56 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 6)
(11/27/2023 12:10:56 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:56 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (1)
(11/27/2023 12:10:56 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (0)
(11/27/2023 12:10:56 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (79), Added; (blue 6; 6 Points)
(11/27/2023 12:10:56 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:56 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 6)
(11/27/2023 12:10:56 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/27/2023 12:10:56 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (1), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 2
(11/27/2023 12:10:56 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/27/2023 12:10:56 AM) |> method; (GameLogicClass.CardPlay), c_card; (red) (6), error
(11/27/2023 12:10:56 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:56 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:10:56 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:10:56 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:10:56 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (2), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 6), Player Index (0)
(11/27/2023 12:10:56 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:56 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:10:56 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:10:56 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:10:56 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:10:56 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:10:56 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:10:56 AM) |> method; (PlayerClass.UpdatePoints) [4125]
(11/27/2023 12:10:56 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:56 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 6)
(11/27/2023 12:10:56 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:56 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:10:56 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:10:56 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:10:56 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:10:56 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:10:56 AM) |> method; (PlayerClass.UpdatePoints) [5366]
(11/27/2023 12:10:56 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:56 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 6)
(11/27/2023 12:10:56 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:56 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-4)
(11/27/2023 12:10:56 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (0)
(11/27/2023 12:10:56 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (80), Added; (red 6; 6 Points)
(11/27/2023 12:10:56 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:56 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (5)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (80), Top Card; (red, 6)
(11/27/2023 12:10:56 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (5)
Player1CardCount; (5)

    PlusAmount (0)
Discard Pile Count; (80), Top Card; (red, 6)
(11/27/2023 12:10:58 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (4)
(11/27/2023 12:10:58 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (4)
(11/27/2023 12:10:58 AM) |> method; (GameLogicClass.CardPlay), c_card; (red) (9), error
(11/27/2023 12:10:58 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:58 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:10:58 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:10:58 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:10:58 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (4), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 9), Player Index (1)
(11/27/2023 12:10:58 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:58 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:10:58 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:10:58 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:10:58 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:10:58 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:10:58 AM) |> method; (PlayerClass.UpdatePoints) [4134]
(11/27/2023 12:10:58 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:58 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 9)
(11/27/2023 12:10:58 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:58 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:10:58 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:10:58 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:10:58 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:10:58 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:10:58 AM) |> method; (PlayerClass.UpdatePoints) [5381]
(11/27/2023 12:10:58 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:58 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 9)
(11/27/2023 12:10:58 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:58 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-9)
(11/27/2023 12:10:58 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-4)
(11/27/2023 12:10:58 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (81), Added; (red 9; 9 Points)
(11/27/2023 12:10:58 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:58 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 9)
(11/27/2023 12:10:58 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/27/2023 12:10:58 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (1), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 2
(11/27/2023 12:10:58 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/27/2023 12:10:58 AM) |> method; (GameLogicClass.CardPlay), c_card; (red) (8), error
(11/27/2023 12:10:58 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:10:58 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:10:58 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:10:58 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:10:58 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (2), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 8), Player Index (0)
(11/27/2023 12:10:58 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:58 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:10:58 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:10:58 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:10:58 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:10:58 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:10:58 AM) |> method; (PlayerClass.UpdatePoints) [4143]
(11/27/2023 12:10:58 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:58 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 8)
(11/27/2023 12:10:58 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:10:58 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:10:58 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:10:58 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:10:58 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:10:58 AM) |> method; (PlayerClass.UpdatePoints) [5388]
(11/27/2023 12:10:58 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:10:58 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 8)
(11/27/2023 12:10:58 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:10:58 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-2)
(11/27/2023 12:10:58 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-2)
(11/27/2023 12:10:58 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (82), Added; (red 8; 8 Points)
(11/27/2023 12:10:58 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:10:58 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (4)
Player1CardCount; (3)

    PlusAmount (0)
Discard Pile Count; (82), Top Card; (red, 8)
(11/27/2023 12:10:58 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (4)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (82), Top Card; (red, 8)
(11/27/2023 12:11:01 AM) |> method; (GameLogicClass.DrawPile_Clicked)
(11/27/2023 12:11:01 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:11:01 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 18), Value; (3)
(11/27/2023 12:11:01 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:11:01 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:11:01 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (1), add one
(11/27/2023 12:11:01 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:11:01 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:11:01 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:11:01 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:11:01 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:11:01 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:11:01 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:11:01 AM) |> method; (PlayerClass.UpdatePoints) [4154]
(11/27/2023 12:11:01 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:11:01 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 8)
(11/27/2023 12:11:01 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:11:01 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:11:01 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:11:01 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:11:01 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:11:01 AM) |> method; (PlayerClass.UpdatePoints) [5395]
(11/27/2023 12:11:01 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:11:01 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 8)
(11/27/2023 12:11:01 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:11:01 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (82), Added; (Nothing)
(11/27/2023 12:11:01 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:11:01 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 8)
(11/27/2023 12:11:01 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:11:01 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 17), Value; (10)
(11/27/2023 12:11:01 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:11:01 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:11:01 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/27/2023 12:11:01 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:11:01 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:11:01 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:11:01 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:11:01 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:11:01 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:11:01 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:11:01 AM) |> method; (PlayerClass.UpdatePoints) [4165]
(11/27/2023 12:11:01 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:11:01 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 8)
(11/27/2023 12:11:01 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:11:01 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:11:01 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:11:01 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:11:01 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:11:01 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:11:01 AM) |> method; (PlayerClass.UpdatePoints) [5422]
(11/27/2023 12:11:01 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:11:01 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 8)
(11/27/2023 12:11:01 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:11:01 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (82), Added; (Nothing)
(11/27/2023 12:11:01 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:11:01 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (5)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (82), Top Card; (red, 8)
(11/27/2023 12:11:01 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (5)
Player1CardCount; (3)

    PlusAmount (0)
Discard Pile Count; (82), Top Card; (red, 8)
(11/27/2023 12:11:02 AM) |> method; (GameLogicClass.DrawPile_Clicked)
(11/27/2023 12:11:02 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:11:02 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 16), Value; (9)
(11/27/2023 12:11:02 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:11:02 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:11:02 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (1), add one
(11/27/2023 12:11:02 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:11:02 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:11:02 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:11:02 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:11:02 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:11:02 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:11:02 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:11:02 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:11:02 AM) |> method; (PlayerClass.UpdatePoints) [4180]
(11/27/2023 12:11:02 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:11:02 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 8)
(11/27/2023 12:11:02 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:11:02 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:11:02 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:11:02 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:11:02 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:11:02 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:11:02 AM) |> method; (PlayerClass.UpdatePoints) [5449]
(11/27/2023 12:11:02 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:11:02 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 8)
(11/27/2023 12:11:02 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:11:02 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (82), Added; (Nothing)
(11/27/2023 12:11:02 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:11:02 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 8)
(11/27/2023 12:11:02 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:11:02 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 15), Value; (9)
(11/27/2023 12:11:02 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:11:02 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:11:02 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/27/2023 12:11:02 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:11:02 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:11:02 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:11:02 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:11:02 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:11:02 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:11:02 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:11:02 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:11:02 AM) |> method; (PlayerClass.UpdatePoints) [4195]
(11/27/2023 12:11:02 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:11:02 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 8)
(11/27/2023 12:11:02 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:11:02 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:11:02 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:11:02 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:11:02 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:11:03 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:11:03 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:11:03 AM) |> method; (PlayerClass.UpdatePoints) [5478]
(11/27/2023 12:11:03 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:11:03 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 8)
(11/27/2023 12:11:03 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:11:03 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (82), Added; (Nothing)
(11/27/2023 12:11:03 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:11:03 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (6)
Player1CardCount; (5)

    PlusAmount (0)
Discard Pile Count; (82), Top Card; (red, 8)
(11/27/2023 12:11:03 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (6)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (82), Top Card; (red, 8)
(11/27/2023 12:11:04 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (5)
(11/27/2023 12:11:04 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (5)
(11/27/2023 12:11:04 AM) |> method; (GameLogicClass.DrawPile_Clicked)
(11/27/2023 12:11:04 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:11:04 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 14), Value; (6)
(11/27/2023 12:11:04 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:11:04 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:11:04 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (1), add one
(11/27/2023 12:11:04 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:11:04 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:11:04 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:11:04 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:11:04 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:11:04 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:11:04 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:11:04 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:11:04 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:11:04 AM) |> method; (PlayerClass.UpdatePoints) [4214]
(11/27/2023 12:11:04 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:11:04 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 8)
(11/27/2023 12:11:04 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:11:04 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:11:04 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:11:05 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:11:05 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:11:05 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:11:05 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:11:05 AM) |> method; (PlayerClass.UpdatePoints) [5507]
(11/27/2023 12:11:05 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:11:05 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 8)
(11/27/2023 12:11:05 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:11:05 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (82), Added; (Nothing)
(11/27/2023 12:11:05 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:11:05 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 8)
(11/27/2023 12:11:05 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:11:05 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 13), Value; (8)
(11/27/2023 12:11:05 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:11:05 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:11:05 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/27/2023 12:11:05 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:11:05 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:11:05 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:11:05 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:11:05 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:11:05 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:11:05 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:11:05 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:11:05 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:11:05 AM) |> method; (PlayerClass.UpdatePoints) [4233]
(11/27/2023 12:11:05 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:11:05 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 8)
(11/27/2023 12:11:05 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:11:05 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/27/2023 12:11:05 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:11:05 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:11:05 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:11:05 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:11:05 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/27/2023 12:11:05 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:11:05 AM) |> method; (PlayerClass.UpdatePoints) [5540]
(11/27/2023 12:11:05 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:11:05 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (red 8)
(11/27/2023 12:11:05 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:11:05 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (82), Added; (Nothing)
(11/27/2023 12:11:05 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:11:05 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (7)
Player1CardCount; (6)

    PlusAmount (0)
Discard Pile Count; (82), Top Card; (red, 8)
(11/27/2023 12:11:05 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (7)
Player1CardCount; (5)

    PlusAmount (0)
Discard Pile Count; (82), Top Card; (red, 8)
(11/27/2023 12:11:06 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (6)
(11/27/2023 12:11:06 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (6)
(11/27/2023 12:11:06 AM) |> method; (GameLogicClass.CardPlay), c_card; (red) (4), error
(11/27/2023 12:11:06 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:11:06 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:11:06 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:11:06 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:11:06 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (6), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 4), Player Index (1)
(11/27/2023 12:11:06 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:11:06 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:11:06 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:11:06 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:11:06 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:11:06 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:11:06 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:11:06 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:11:06 AM) |> method; (PlayerClass.UpdatePoints) [4248]
(11/27/2023 12:11:06 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:11:06 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 4)
(11/27/2023 12:11:06 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:11:06 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/27/2023 12:11:06 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:11:06 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:11:06 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:11:06 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:11:06 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/27/2023 12:11:06 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:11:06 AM) |> method; (PlayerClass.UpdatePoints) [5573]
(11/27/2023 12:11:06 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:11:06 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 4)
(11/27/2023 12:11:06 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:11:06 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-7)
(11/27/2023 12:11:06 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-1)
(11/27/2023 12:11:06 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (83), Added; (red 4; 4 Points)
(11/27/2023 12:11:06 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:11:06 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 4)
(11/27/2023 12:11:06 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 1), Value; (0)
(11/27/2023 12:11:06 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (1)
(11/27/2023 12:11:06 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (2), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 1
(11/27/2023 12:11:06 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (1)
(11/27/2023 12:11:06 AM) |> method; (GameLogicClass.CardPlay), c_card; (green) (4), error
(11/27/2023 12:11:06 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:11:06 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:11:06 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:11:06 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:11:06 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (1), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 4), Player Index (0)
(11/27/2023 12:11:06 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:11:06 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:11:06 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:11:06 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:11:06 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:11:06 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:11:06 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:11:06 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:11:06 AM) |> method; (PlayerClass.UpdatePoints) [4263]
(11/27/2023 12:11:06 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:11:06 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 4)
(11/27/2023 12:11:06 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:11:06 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:11:06 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:11:06 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:11:06 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:11:06 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:11:06 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:11:06 AM) |> method; (PlayerClass.UpdatePoints) [5602]
(11/27/2023 12:11:06 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:11:06 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 4)
(11/27/2023 12:11:06 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:11:06 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (3)
(11/27/2023 12:11:06 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (3)
(11/27/2023 12:11:06 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (84), Added; (green 4; 4 Points)
(11/27/2023 12:11:06 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:11:06 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (6)
Player1CardCount; (5)

    PlusAmount (0)
Discard Pile Count; (84), Top Card; (green, 4)
(11/27/2023 12:11:06 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (6)
Player1CardCount; (6)

    PlusAmount (0)
Discard Pile Count; (84), Top Card; (green, 4)
(11/27/2023 12:11:08 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (1)
(11/27/2023 12:11:08 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (1)
(11/27/2023 12:11:08 AM) |> method; (GameLogicClass.CardPlay), c_card; (green) (5), error
(11/27/2023 12:11:08 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:11:08 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:11:08 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:11:08 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:11:08 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (1), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 5), Player Index (1)
(11/27/2023 12:11:08 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:11:08 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:11:08 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:11:08 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:11:08 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:11:08 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:11:08 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:11:08 AM) |> method; (PlayerClass.UpdatePoints) [4273]
(11/27/2023 12:11:08 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:11:08 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 5)
(11/27/2023 12:11:08 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:11:08 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:11:08 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:11:08 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:11:08 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:11:08 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:11:08 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:11:08 AM) |> method; (PlayerClass.UpdatePoints) [5631]
(11/27/2023 12:11:08 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:11:08 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 5)
(11/27/2023 12:11:08 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:11:08 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-7)
(11/27/2023 12:11:08 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (2)
(11/27/2023 12:11:08 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (85), Added; (green 5; 5 Points)
(11/27/2023 12:11:08 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:11:08 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 5)
(11/27/2023 12:11:08 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 2), Value; (0)
(11/27/2023 12:11:08 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:11:08 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (3), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 0
(11/27/2023 12:11:08 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:11:08 AM) |> method; (GameLogicClass.CardPlay), c_card; (green) (3), error
(11/27/2023 12:11:08 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:11:08 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:11:08 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:11:08 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:11:08 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 3), Player Index (0)
(11/27/2023 12:11:08 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:11:08 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:11:08 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:11:08 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:11:08 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:11:08 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:11:08 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:11:08 AM) |> method; (PlayerClass.UpdatePoints) [4283]
(11/27/2023 12:11:08 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:11:08 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 3)
(11/27/2023 12:11:08 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:11:08 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:11:08 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:11:08 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:11:08 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:11:08 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:11:08 AM) |> method; (PlayerClass.UpdatePoints) [5657]
(11/27/2023 12:11:08 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:11:08 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 3)
(11/27/2023 12:11:08 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:11:08 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-5)
(11/27/2023 12:11:08 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (6)
(11/27/2023 12:11:08 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (86), Added; (green 3; 3 Points)
(11/27/2023 12:11:08 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:11:08 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (5)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (86), Top Card; (green, 3)
(11/27/2023 12:11:08 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (5)
Player1CardCount; (5)

    PlusAmount (0)
Discard Pile Count; (86), Top Card; (green, 3)
(11/27/2023 12:11:09 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:11:09 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (0)
(11/27/2023 12:11:09 AM) |> method; (GameLogicClass.CardPlay), c_card; (green) (3), error
(11/27/2023 12:11:09 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:11:09 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:11:09 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:11:09 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:11:09 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 3), Player Index (1)
(11/27/2023 12:11:09 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:11:09 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:11:09 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:11:09 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:11:09 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:11:09 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:11:09 AM) |> method; (PlayerClass.UpdatePoints) [4290]
(11/27/2023 12:11:09 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:11:09 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 3)
(11/27/2023 12:11:09 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:11:09 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:11:09 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:11:09 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:11:09 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:11:09 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:11:09 AM) |> method; (PlayerClass.UpdatePoints) [5683]
(11/27/2023 12:11:09 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:11:09 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 3)
(11/27/2023 12:11:09 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:11:09 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-1)
(11/27/2023 12:11:09 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (8)
(11/27/2023 12:11:09 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (87), Added; (green 3; 3 Points)
(11/27/2023 12:11:09 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:11:09 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 3)
(11/27/2023 12:11:09 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 1), Value; (0)
(11/27/2023 12:11:09 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/27/2023 12:11:09 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (2), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 2
(11/27/2023 12:11:09 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/27/2023 12:11:09 AM) |> method; (GameLogicClass.CardPlay), c_card; (green) (2), error
(11/27/2023 12:11:09 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:11:09 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:11:09 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:11:09 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:11:09 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (2), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 2), Player Index (0)
(11/27/2023 12:11:09 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:11:09 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:11:09 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:11:09 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:11:09 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:11:09 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:11:09 AM) |> method; (PlayerClass.UpdatePoints) [4297]
(11/27/2023 12:11:09 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:11:09 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 2)
(11/27/2023 12:11:09 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:11:09 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:11:09 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:11:09 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:11:09 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:11:09 AM) |> method; (PlayerClass.UpdatePoints) [5707]
(11/27/2023 12:11:09 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:11:09 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 2)
(11/27/2023 12:11:09 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:11:09 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-3)
(11/27/2023 12:11:09 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-3)
(11/27/2023 12:11:09 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (88), Added; (green 2; 2 Points)
(11/27/2023 12:11:09 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:11:09 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (4)
Player1CardCount; (3)

    PlusAmount (0)
Discard Pile Count; (88), Top Card; (green, 2)
(11/27/2023 12:11:09 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (4)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (88), Top Card; (green, 2)
(11/27/2023 12:11:10 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:11:10 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (0)
(11/27/2023 12:11:10 AM) |> method; (GameLogicClass.CardPlay), c_card; (green) (1), error
(11/27/2023 12:11:10 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:11:10 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:11:10 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:11:10 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:11:10 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 1), Player Index (1)
(11/27/2023 12:11:10 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:11:10 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:11:10 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:11:10 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:11:10 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:11:10 AM) |> method; (PlayerClass.UpdatePoints) [4303]
(11/27/2023 12:11:10 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:11:10 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 1)
(11/27/2023 12:11:10 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:11:10 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:11:10 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:11:10 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:11:10 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:11:10 AM) |> method; (PlayerClass.UpdatePoints) [5731]
(11/27/2023 12:11:10 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:11:10 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 1)
(11/27/2023 12:11:10 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:11:10 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (0)
(11/27/2023 12:11:10 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-10)
(11/27/2023 12:11:10 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (89), Added; (green 1; 1 Points)
(11/27/2023 12:11:10 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:11:10 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 1)
(11/27/2023 12:11:10 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/27/2023 12:11:10 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (1), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 2
(11/27/2023 12:11:10 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/27/2023 12:11:10 AM) |> method; (GameLogicClass.CardPlay), c_card; (green) (4), error
(11/27/2023 12:11:10 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:11:10 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:11:10 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:11:10 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:11:10 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (2), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 4), Player Index (0)
(11/27/2023 12:11:10 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:11:10 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:11:10 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:11:10 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:11:10 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:11:10 AM) |> method; (PlayerClass.UpdatePoints) [4309]
(11/27/2023 12:11:10 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:11:10 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 4)
(11/27/2023 12:11:10 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:11:10 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:11:10 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:11:10 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:11:10 AM) |> method; (PlayerClass.UpdatePoints) [5751]
(11/27/2023 12:11:10 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:11:10 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green 4)
(11/27/2023 12:11:10 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:11:10 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-1)
(11/27/2023 12:11:10 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-6)
(11/27/2023 12:11:10 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (90), Added; (green 4; 4 Points)
(11/27/2023 12:11:10 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:11:10 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (3)
Player1CardCount; (2)

    PlusAmount (0)
Discard Pile Count; (90), Top Card; (green, 4)
(11/27/2023 12:11:10 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (3)
Player1CardCount; (3)

    PlusAmount (0)
Discard Pile Count; (90), Top Card; (green, 4)
(11/27/2023 12:11:11 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (1)
(11/27/2023 12:11:11 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (1)
(11/27/2023 12:11:11 AM) |> method; (GameLogicClass.CardPlay), c_card; (green) (2), error
(11/27/2023 12:11:11 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:11:11 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:11:11 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:11:11 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:11:11 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (1), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 2), Player Index (1)
(11/27/2023 12:11:11 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:11:11 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:11:11 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:11:11 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:11:11 AM) |> method; (PlayerClass.UpdatePoints) [4313]
(11/27/2023 12:11:11 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:11:11 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 2)
(11/27/2023 12:11:11 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:11:11 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:11:11 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:11:11 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:11:11 AM) |> method; (PlayerClass.UpdatePoints) [5771]
(11/27/2023 12:11:11 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:11:11 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green 2)
(11/27/2023 12:11:11 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:11:11 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-6)
(11/27/2023 12:11:11 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-3)
(11/27/2023 12:11:11 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (91), Added; (green 2; 2 Points)
(11/27/2023 12:11:11 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:11:11 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green 2)
(11/27/2023 12:11:11 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:11:11 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 12), Value; (8)
(11/27/2023 12:11:11 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:11:11 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:11:11 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/27/2023 12:11:11 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:11:11 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:11:11 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:11:11 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:11:11 AM) |> method; (PlayerClass.UpdatePoints) [4317]
(11/27/2023 12:11:11 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:11:11 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 2)
(11/27/2023 12:11:11 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:11:11 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:11:11 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:11:11 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:11:11 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:11:11 AM) |> method; (PlayerClass.UpdatePoints) [5797]
(11/27/2023 12:11:11 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:11:11 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 2)
(11/27/2023 12:11:11 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:11:11 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (91), Added; (Nothing)
(11/27/2023 12:11:11 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:11:11 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (2)
Player1CardCount; (3)

    PlusAmount (0)
Discard Pile Count; (91), Top Card; (green, 2)
(11/27/2023 12:11:11 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (2)
Player1CardCount; (2)

    PlusAmount (0)
Discard Pile Count; (91), Top Card; (green, 2)
(11/27/2023 12:11:12 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:11:12 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (0)
(11/27/2023 12:11:12 AM) |> method; (GameLogicClass.CardPlay), c_card; (green) (0), error
(11/27/2023 12:11:12 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:11:12 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:11:12 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:11:12 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:11:12 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 0), Player Index (1)
(11/27/2023 12:11:12 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:11:12 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:11:12 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (695, 695)
(11/27/2023 12:11:12 AM) |> method; (PlayerClass.UpdatePoints) [4321]
(11/27/2023 12:11:12 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:11:12 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green 0)
(11/27/2023 12:11:12 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:11:12 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:11:12 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:11:12 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:11:12 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:11:12 AM) |> method; (PlayerClass.UpdatePoints) [5823]
(11/27/2023 12:11:12 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:11:12 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 0)
(11/27/2023 12:11:12 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:11:12 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (1)
(11/27/2023 12:11:12 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (4)
(11/27/2023 12:11:12 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (92), Added; (green 0; 0 Points)
(11/27/2023 12:11:12 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:11:12 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 0)
(11/27/2023 12:11:12 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 1), Value; (0)
(11/27/2023 12:11:12 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:11:12 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (2), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 0
(11/27/2023 12:11:12 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:11:12 AM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (0), error
(11/27/2023 12:11:12 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:11:12 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:11:12 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:11:12 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:11:12 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 0), Player Index (0)
(11/27/2023 12:11:12 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:11:12 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:11:12 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (695, 695)
(11/27/2023 12:11:12 AM) |> method; (PlayerClass.UpdatePoints) [4325]
(11/27/2023 12:11:12 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:11:12 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 0)
(11/27/2023 12:11:12 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:11:12 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:11:12 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:11:12 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:11:12 AM) |> method; (PlayerClass.UpdatePoints) [5849]
(11/27/2023 12:11:12 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:11:12 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 0)
(11/27/2023 12:11:12 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:11:13 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (6)
(11/27/2023 12:11:13 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-2)
(11/27/2023 12:11:13 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (93), Added; (yellow 0; 0 Points)
(11/27/2023 12:11:13 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:11:13 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (1)
Player1CardCount; (2)

    PlusAmount (0)
Discard Pile Count; (93), Top Card; (yellow, 0)
(11/27/2023 12:11:13 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (1)
Player1CardCount; (3)

    PlusAmount (0)
Discard Pile Count; (93), Top Card; (yellow, 0)
(11/27/2023 12:11:14 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:11:14 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (0)
(11/27/2023 12:11:14 AM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (4), error
(11/27/2023 12:11:14 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:11:14 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:11:14 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:11:14 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:11:14 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 4), Player Index (1)
(11/27/2023 12:11:14 AM) |> method; (WinConditonForm.WinConditonForm) ---------------------------------------------------
(11/27/2023 12:11:14 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:15:16 AM) |> ----------------------------------------------
(11/27/2023 12:15:16 AM) |> Method; (SetupFormClass.SetupFormClass) [Start Up]
(11/27/2023 12:15:18 AM) |> method; (SetupFormClass.twoPlayersBT_Click) [2v2; false, PlayerAmount = 2]
(11/27/2023 12:15:19 AM) |> method; (SetupFormClass.doneBT_Click)
(11/27/2023 12:15:19 AM) |> method; (Form_PauseMenu.Form_PauseMenu)
(11/27/2023 12:15:19 AM) |> method; (GameForm.GameForm), Width: (1440), Height; (870), Size; ({Width=1440, Height=870})
(11/27/2023 12:15:19 AM) |> method; (PlayerClass.PlayerClass) [Player init], is AI (False), Team; (1)
(11/27/2023 12:15:19 AM) |> method; (AIClass.AIClass()) [AI INIT]
(11/27/2023 12:15:19 AM) |> method; (PlayerClass.PlayerClass) [Player init], is AI (True), Team; (1)
(11/27/2023 12:15:19 AM) |> method; (GameLogicClass.MakeDrawPile)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (0),
    NormalPoints; (0),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_0.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (1),
    NormalPoints; (1),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_1.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (2),
    NormalPoints; (2),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_2.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (3),
    NormalPoints; (3),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_3.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (4),
    NormalPoints; (4),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_4.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (5),
    NormalPoints; (5),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_5.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (6),
    NormalPoints; (6),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_6.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (7),
    NormalPoints; (7),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_7.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (8),
    NormalPoints; (8),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_8.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (9),
    NormalPoints; (9),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_9.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (+),
    NormalPoints; (10),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_+2.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (r),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_reverse.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (s),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_skip.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (0),
    NormalPoints; (0),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_0.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (1),
    NormalPoints; (1),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_1.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (2),
    NormalPoints; (2),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_2.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (3),
    NormalPoints; (3),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_3.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (4),
    NormalPoints; (4),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_4.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (5),
    NormalPoints; (5),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_5.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (6),
    NormalPoints; (6),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_6.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (7),
    NormalPoints; (7),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_7.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (8),
    NormalPoints; (8),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_8.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (9),
    NormalPoints; (9),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_9.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (+),
    NormalPoints; (10),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_+2.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (r),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_reverse.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (s),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_skip.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (0),
    NormalPoints; (0),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_0.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (1),
    NormalPoints; (1),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_1.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (2),
    NormalPoints; (2),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_2.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (3),
    NormalPoints; (3),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_3.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (4),
    NormalPoints; (4),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_4.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (5),
    NormalPoints; (5),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_5.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (6),
    NormalPoints; (6),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_6.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (7),
    NormalPoints; (7),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_7.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (8),
    NormalPoints; (8),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_8.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (9),
    NormalPoints; (9),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_9.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (+),
    NormalPoints; (10),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_+2.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (r),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_reverse.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (s),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_skip.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (0),
    NormalPoints; (0),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_0.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (1),
    NormalPoints; (1),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_1.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (2),
    NormalPoints; (2),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_2.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (3),
    NormalPoints; (3),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_3.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (4),
    NormalPoints; (4),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_4.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (5),
    NormalPoints; (5),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_5.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (6),
    NormalPoints; (6),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_6.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (7),
    NormalPoints; (7),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_7.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (8),
    NormalPoints; (8),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_8.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (9),
    NormalPoints; (9),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_9.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (+),
    NormalPoints; (10),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_+2.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (r),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_reverse.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (s),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_skip.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (1),
    NormalPoints; (1),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_1.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (2),
    NormalPoints; (2),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_2.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (3),
    NormalPoints; (3),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_3.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (4),
    NormalPoints; (4),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_4.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (5),
    NormalPoints; (5),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_5.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (6),
    NormalPoints; (6),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_6.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (7),
    NormalPoints; (7),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_7.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (8),
    NormalPoints; (8),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_8.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (9),
    NormalPoints; (9),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_9.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (+),
    NormalPoints; (10),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_+2.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (r),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_reverse.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (s),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_skip.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (1),
    NormalPoints; (1),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_1.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (2),
    NormalPoints; (2),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_2.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (3),
    NormalPoints; (3),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_3.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (4),
    NormalPoints; (4),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_4.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (5),
    NormalPoints; (5),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_5.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (6),
    NormalPoints; (6),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_6.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (7),
    NormalPoints; (7),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_7.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (8),
    NormalPoints; (8),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_8.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (9),
    NormalPoints; (9),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_9.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (+),
    NormalPoints; (10),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_+2.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (r),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_reverse.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (s),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_skip.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (1),
    NormalPoints; (1),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_1.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (2),
    NormalPoints; (2),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_2.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (3),
    NormalPoints; (3),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_3.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (4),
    NormalPoints; (4),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_4.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (5),
    NormalPoints; (5),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_5.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (6),
    NormalPoints; (6),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_6.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (7),
    NormalPoints; (7),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_7.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (8),
    NormalPoints; (8),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_8.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (9),
    NormalPoints; (9),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_9.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (+),
    NormalPoints; (10),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_+2.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (r),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_reverse.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (s),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_skip.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (1),
    NormalPoints; (1),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_1.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (2),
    NormalPoints; (2),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_2.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (3),
    NormalPoints; (3),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_3.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (4),
    NormalPoints; (4),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_4.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (5),
    NormalPoints; (5),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_5.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (6),
    NormalPoints; (6),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_6.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (7),
    NormalPoints; (7),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_7.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (8),
    NormalPoints; (8),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_8.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (9),
    NormalPoints; (9),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_9.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (+),
    NormalPoints; (10),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_+2.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (r),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_reverse.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (s),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_skip.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (w),
    NormalNumber; (+),
    NormalPoints; (50),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\wild_+4_wild.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (w),
    NormalNumber; (+),
    NormalPoints; (50),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\wild_+4_wild.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (w),
    NormalNumber; (+),
    NormalPoints; (50),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\wild_+4_wild.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (w),
    NormalNumber; (+),
    NormalPoints; (50),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\wild_+4_wild.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (w),
    NormalNumber; (w),
    NormalPoints; (40),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\wild_wild.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (w),
    NormalNumber; (w),
    NormalPoints; (40),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\wild_wild.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (w),
    NormalNumber; (w),
    NormalPoints; (40),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\wild_wild.png)
(11/27/2023 12:15:19 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (w),
    NormalNumber; (w),
    NormalPoints; (40),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\wild_wild.png)
(11/27/2023 12:15:19 AM) |> method; (GameLogicClass.Deal)
(11/27/2023 12:15:19 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:15:19 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 107), Value; (47)
(11/27/2023 12:15:19 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:15:19 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:15:19 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 106), Value; (4)
(11/27/2023 12:15:19 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:15:19 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:15:19 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 105), Value; (70)
(11/27/2023 12:15:19 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:15:19 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:15:19 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 104), Value; (51)
(11/27/2023 12:15:19 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:15:19 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:15:19 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 103), Value; (39)
(11/27/2023 12:15:19 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:15:19 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:15:19 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 102), Value; (70)
(11/27/2023 12:15:19 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:15:19 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:15:19 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 101), Value; (24)
(11/27/2023 12:15:19 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:15:19 AM) |> method; (GameLogicClass.Deal)
(11/27/2023 12:15:19 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:15:19 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 100), Value; (39)
(11/27/2023 12:15:19 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:15:19 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:15:19 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 99), Value; (51)
(11/27/2023 12:15:19 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:15:19 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:15:19 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 98), Value; (15)
(11/27/2023 12:15:19 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:15:19 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:15:19 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 97), Value; (56)
(11/27/2023 12:15:19 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:15:19 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:15:19 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 96), Value; (10)
(11/27/2023 12:15:19 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:15:19 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:15:19 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 95), Value; (16)
(11/27/2023 12:15:20 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:15:20 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:15:20 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 94), Value; (51)
(11/27/2023 12:15:20 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:15:20 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:15:20 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 93), Value; (60)
(11/27/2023 12:15:20 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:15:20 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:15:20 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:15:20 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 93), Value; (42)
(11/27/2023 12:15:20 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:15:20 AM) |> method; (GameLogicClass.DisplayDrawPile) [drew stuff]
(11/27/2023 12:15:20 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], Gamerules;
    do_DrawtoMatch (False),
    do_Flip (False),
    do_ChianAdds (False),
    do_2v2 (False, teams (1, 1, 3, 4)
    Player Amount (2)
    Card Amount (7)
Player Index; (0), Discard Pile Count; (1), Top Card; (System.Drawing.Bitmap)
(11/27/2023 12:15:20 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:15:20 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:15:20 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:15:20 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:15:20 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:15:20 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:15:20 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:15:20 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:15:20 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:15:20 AM) |> method; (PlayerClass.UpdatePoints) [64]
(11/27/2023 12:15:20 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:15:20 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue reverse)
(11/27/2023 12:15:20 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:15:20 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 5)
(11/27/2023 12:15:20 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:15:20 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:15:20 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:15:20 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:15:20 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:15:20 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 5)
(11/27/2023 12:15:20 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:15:20 AM) |> method; (PlayerClass.UpdatePoints) [49]
(11/27/2023 12:15:20 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:15:20 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue reverse)
(11/27/2023 12:15:20 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:15:20 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (8)
(11/27/2023 12:15:20 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-8)
(11/27/2023 12:15:20 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (1), Added; (blue reverse; 20 Points)
(11/27/2023 12:15:20 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:15:20 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (7)
Player1CardCount; (7)

    PlusAmount (0)
Discard Pile Count; (1), Top Card; (blue, reverse)
(11/27/2023 12:15:22 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:15:22 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (0)
(11/27/2023 12:15:22 AM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (8), error
(11/27/2023 12:15:22 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:15:22 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:15:22 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:15:22 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:15:22 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 8), Player Index (1)
(11/27/2023 12:15:22 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:15:22 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:15:22 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:15:22 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:15:22 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:15:22 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:15:22 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:15:22 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:15:22 AM) |> method; (PlayerClass.UpdatePoints) [120]
(11/27/2023 12:15:22 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:15:22 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 8)
(11/27/2023 12:15:22 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:15:22 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 5)
(11/27/2023 12:15:22 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:15:22 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:15:22 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:15:22 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:15:22 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:15:22 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 5)
(11/27/2023 12:15:22 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:15:22 AM) |> method; (PlayerClass.UpdatePoints) [98]
(11/27/2023 12:15:22 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:15:22 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 8)
(11/27/2023 12:15:22 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:15:22 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-8)
(11/27/2023 12:15:22 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (5)
(11/27/2023 12:15:22 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (2), Added; (blue 8; 8 Points)
(11/27/2023 12:15:22 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:15:22 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 8)
(11/27/2023 12:15:22 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:15:22 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (1), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 0
(11/27/2023 12:15:22 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:15:22 AM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (3), error
(11/27/2023 12:15:22 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:15:22 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:15:22 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:15:22 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:15:22 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 3), Player Index (0)
(11/27/2023 12:15:22 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:15:22 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:15:22 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:15:22 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:15:22 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:15:22 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:15:22 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:15:22 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:15:22 AM) |> method; (PlayerClass.UpdatePoints) [176]
(11/27/2023 12:15:22 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:15:22 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 3)
(11/27/2023 12:15:22 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:15:22 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/27/2023 12:15:22 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:15:22 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:15:22 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:15:22 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:15:22 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/27/2023 12:15:22 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:15:22 AM) |> method; (PlayerClass.UpdatePoints) [144]
(11/27/2023 12:15:22 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:15:22 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 3)
(11/27/2023 12:15:22 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:15:22 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-5)
(11/27/2023 12:15:22 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-10)
(11/27/2023 12:15:22 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (3), Added; (blue 3; 3 Points)
(11/27/2023 12:15:22 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:15:22 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (6)
Player1CardCount; (6)

    PlusAmount (0)
Discard Pile Count; (3), Top Card; (blue, 3)
(11/27/2023 12:15:22 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (6)
Player1CardCount; (7)

    PlusAmount (0)
Discard Pile Count; (3), Top Card; (blue, 3)
(11/27/2023 12:15:23 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (3)
(11/27/2023 12:15:23 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (3)
(11/27/2023 12:15:23 AM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (1), error
(11/27/2023 12:15:23 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:15:23 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:15:23 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:15:23 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:15:23 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (3), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 1), Player Index (1)
(11/27/2023 12:15:23 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:15:23 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:15:23 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:15:23 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:15:23 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:15:23 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:15:23 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:15:23 AM) |> method; (PlayerClass.UpdatePoints) [231]
(11/27/2023 12:15:23 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:15:23 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (blue 1)
(11/27/2023 12:15:23 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:15:23 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/27/2023 12:15:23 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:15:23 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:15:23 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:15:23 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:15:23 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/27/2023 12:15:23 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:15:23 AM) |> method; (PlayerClass.UpdatePoints) [190]
(11/27/2023 12:15:23 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:15:23 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 1)
(11/27/2023 12:15:23 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:15:23 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-1)
(11/27/2023 12:15:23 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-6)
(11/27/2023 12:15:23 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (4), Added; (blue 1; 1 Points)
(11/27/2023 12:15:23 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:15:23 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 1)
(11/27/2023 12:15:23 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/27/2023 12:15:23 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (1), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 2
(11/27/2023 12:15:23 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/27/2023 12:15:23 AM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (1), error
(11/27/2023 12:15:23 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:15:23 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:15:23 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:15:23 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:15:23 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (2), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 1), Player Index (0)
(11/27/2023 12:15:23 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:15:23 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:15:23 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:15:23 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:15:23 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:15:23 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:15:23 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:15:23 AM) |> method; (PlayerClass.UpdatePoints) [286]
(11/27/2023 12:15:23 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:15:23 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 1)
(11/27/2023 12:15:23 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:15:23 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:15:23 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:15:23 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:15:23 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:15:23 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:15:23 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:15:23 AM) |> method; (PlayerClass.UpdatePoints) [235]
(11/27/2023 12:15:23 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:15:23 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 1)
(11/27/2023 12:15:23 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:15:23 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-8)
(11/27/2023 12:15:23 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (2)
(11/27/2023 12:15:23 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (5), Added; (yellow 1; 1 Points)
(11/27/2023 12:15:23 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:15:23 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (5)
Player1CardCount; (5)

    PlusAmount (0)
Discard Pile Count; (5), Top Card; (yellow, 1)
(11/27/2023 12:15:23 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (5)
Player1CardCount; (6)

    PlusAmount (0)
Discard Pile Count; (5), Top Card; (yellow, 1)
(11/27/2023 12:15:24 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (3)
(11/27/2023 12:15:24 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (3)
(11/27/2023 12:15:24 AM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (skip), error
(11/27/2023 12:15:24 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:15:24 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:15:24 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:15:24 AM) |> method; (GameLogicClass.CardClickLogic), In skip
(11/27/2023 12:15:24 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:15:24 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:15:24 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (3), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, skip), Player Index (0)
(11/27/2023 12:15:24 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:15:24 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:15:24 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:15:24 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:15:24 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:15:24 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:15:24 AM) |> method; (PlayerClass.UpdatePoints) [321]
(11/27/2023 12:15:24 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:15:24 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow skip)
(11/27/2023 12:15:24 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:15:24 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:15:24 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:15:24 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:15:24 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:15:24 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:15:24 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:15:24 AM) |> method; (PlayerClass.UpdatePoints) [280]
(11/27/2023 12:15:24 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:15:24 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow skip)
(11/27/2023 12:15:24 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:15:24 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-7)
(11/27/2023 12:15:24 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (1)
(11/27/2023 12:15:24 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (6), Added; (yellow skip; 20 Points)
(11/27/2023 12:15:24 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:15:24 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (4)
Player1CardCount; (5)

    PlusAmount (0)
Discard Pile Count; (6), Top Card; (yellow, skip)
(11/27/2023 12:15:25 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (3)
(11/27/2023 12:15:25 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (3)
(11/27/2023 12:15:25 AM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (skip), error
(11/27/2023 12:15:25 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:15:25 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:15:25 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:15:25 AM) |> method; (GameLogicClass.CardClickLogic), In skip
(11/27/2023 12:15:25 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:15:25 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:15:25 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (3), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, skip), Player Index (0)
(11/27/2023 12:15:25 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:15:25 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:15:25 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:15:25 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:15:25 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:15:25 AM) |> method; (PlayerClass.UpdatePoints) [336]
(11/27/2023 12:15:25 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:15:25 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow skip)
(11/27/2023 12:15:25 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:15:25 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:15:25 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:15:25 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:15:25 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:15:25 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:15:25 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:15:25 AM) |> method; (PlayerClass.UpdatePoints) [325]
(11/27/2023 12:15:25 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:15:25 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow skip)
(11/27/2023 12:15:25 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:15:25 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (6)
(11/27/2023 12:15:25 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (0)
(11/27/2023 12:15:25 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (7), Added; (yellow skip; 20 Points)
(11/27/2023 12:15:25 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:15:25 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (3)
Player1CardCount; (5)

    PlusAmount (0)
Discard Pile Count; (7), Top Card; (yellow, skip)
(11/27/2023 12:15:26 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (1)
(11/27/2023 12:15:26 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (1)
(11/27/2023 12:15:26 AM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (9), error
(11/27/2023 12:15:26 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:15:26 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:15:26 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:15:26 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:15:26 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (1), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 9), Player Index (1)
(11/27/2023 12:15:26 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:15:26 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:15:26 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:15:26 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:15:26 AM) |> method; (PlayerClass.UpdatePoints) [342]
(11/27/2023 12:15:26 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:15:26 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (yellow 9)
(11/27/2023 12:15:26 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:15:26 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:15:26 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:15:26 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:15:26 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:15:26 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:15:26 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:15:26 AM) |> method; (PlayerClass.UpdatePoints) [370]
(11/27/2023 12:15:26 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:15:26 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 9)
(11/27/2023 12:15:26 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:15:26 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-7)
(11/27/2023 12:15:26 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (5)
(11/27/2023 12:15:26 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (8), Added; (yellow 9; 9 Points)
(11/27/2023 12:15:26 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:15:26 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 9)
(11/27/2023 12:15:26 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 1), Value; (0)
(11/27/2023 12:15:26 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (1)
(11/27/2023 12:15:26 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (2), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 1
(11/27/2023 12:15:26 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (1)
(11/27/2023 12:15:26 AM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (3), error
(11/27/2023 12:15:26 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:15:26 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:15:26 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:15:26 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:15:26 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (1), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 3), Player Index (0)
(11/27/2023 12:15:26 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:15:26 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:15:26 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:15:26 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:15:26 AM) |> method; (PlayerClass.UpdatePoints) [348]
(11/27/2023 12:15:26 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:15:26 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (yellow 3)
(11/27/2023 12:15:26 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:15:26 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:15:26 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:15:26 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:15:26 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:15:26 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:15:26 AM) |> method; (PlayerClass.UpdatePoints) [412]
(11/27/2023 12:15:26 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:15:26 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 3)
(11/27/2023 12:15:26 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:15:26 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-4)
(11/27/2023 12:15:26 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (5)
(11/27/2023 12:15:26 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (9), Added; (yellow 3; 3 Points)
(11/27/2023 12:15:26 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:15:26 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (2)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (9), Top Card; (yellow, 3)
(11/27/2023 12:15:26 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (2)
Player1CardCount; (5)

    PlusAmount (0)
Discard Pile Count; (9), Top Card; (yellow, 3)
(11/27/2023 12:15:28 AM) |> method; (GameLogicClass.DrawPile_Clicked)
(11/27/2023 12:15:28 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:15:28 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 92), Value; (23)
(11/27/2023 12:15:28 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:15:28 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:15:28 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (1), add one
(11/27/2023 12:15:28 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:15:28 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:15:28 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:15:28 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:15:28 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:15:28 AM) |> method; (PlayerClass.UpdatePoints) [356]
(11/27/2023 12:15:28 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:15:28 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (yellow 3)
(11/27/2023 12:15:28 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:15:28 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:15:28 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:15:28 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:15:28 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:15:28 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:15:28 AM) |> method; (PlayerClass.UpdatePoints) [454]
(11/27/2023 12:15:28 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:15:28 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 3)
(11/27/2023 12:15:28 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:15:28 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (9), Added; (Nothing)
(11/27/2023 12:15:28 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:15:28 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 3)
(11/27/2023 12:15:28 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/27/2023 12:15:28 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (1), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 2
(11/27/2023 12:15:28 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/27/2023 12:15:28 AM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (6), error
(11/27/2023 12:15:28 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:15:28 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:15:28 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:15:28 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:15:28 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (2), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 6), Player Index (0)
(11/27/2023 12:15:28 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:15:28 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:15:28 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:15:28 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:15:28 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:15:28 AM) |> method; (PlayerClass.UpdatePoints) [364]
(11/27/2023 12:15:28 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:15:28 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (yellow 6)
(11/27/2023 12:15:28 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:15:28 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:15:28 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:15:28 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:15:28 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:15:28 AM) |> method; (PlayerClass.UpdatePoints) [490]
(11/27/2023 12:15:28 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:15:28 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 6)
(11/27/2023 12:15:28 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:15:28 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (1)
(11/27/2023 12:15:28 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-7)
(11/27/2023 12:15:28 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (10), Added; (yellow 6; 6 Points)
(11/27/2023 12:15:28 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:15:28 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (3)
Player1CardCount; (3)

    PlusAmount (0)
Discard Pile Count; (10), Top Card; (yellow, 6)
(11/27/2023 12:15:28 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (3)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (10), Top Card; (yellow, 6)
(11/27/2023 12:15:30 AM) |> method; (GameLogicClass.DrawPile_Clicked)
(11/27/2023 12:15:30 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:15:30 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 91), Value; (89)
(11/27/2023 12:15:30 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:15:30 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:15:30 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (1), add one
(11/27/2023 12:15:30 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:15:30 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:15:30 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:15:30 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:15:30 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:15:30 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:15:30 AM) |> method; (PlayerClass.UpdatePoints) [412]
(11/27/2023 12:15:30 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:15:30 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 6)
(11/27/2023 12:15:30 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:15:30 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:15:30 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:15:30 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:15:30 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:15:30 AM) |> method; (PlayerClass.UpdatePoints) [526]
(11/27/2023 12:15:30 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:15:30 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 6)
(11/27/2023 12:15:30 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:15:30 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (10), Added; (Nothing)
(11/27/2023 12:15:30 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:15:30 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 6)
(11/27/2023 12:15:30 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:15:30 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (1), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 0
(11/27/2023 12:15:30 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:15:30 AM) |> method; (GameLogicClass.CardPlay), c_card; (red) (6), error
(11/27/2023 12:15:30 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:15:30 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:15:30 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:15:30 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:15:30 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 6), Player Index (0)
(11/27/2023 12:15:30 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:15:30 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:15:30 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:15:30 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:15:30 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:15:30 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:15:30 AM) |> method; (PlayerClass.UpdatePoints) [460]
(11/27/2023 12:15:30 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:15:30 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 6)
(11/27/2023 12:15:30 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:15:30 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:15:30 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:15:30 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:15:30 AM) |> method; (PlayerClass.UpdatePoints) [556]
(11/27/2023 12:15:30 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:15:30 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 6)
(11/27/2023 12:15:30 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:15:30 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-1)
(11/27/2023 12:15:30 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (6)
(11/27/2023 12:15:30 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (11), Added; (red 6; 6 Points)
(11/27/2023 12:15:30 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:15:30 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (4)
Player1CardCount; (2)

    PlusAmount (0)
Discard Pile Count; (11), Top Card; (red, 6)
(11/27/2023 12:15:30 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (4)
Player1CardCount; (3)

    PlusAmount (0)
Discard Pile Count; (11), Top Card; (red, 6)
(11/27/2023 12:15:31 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:15:31 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (0)
(11/27/2023 12:15:31 AM) |> method; (GameLogicClass.CardPlay), c_card; (red) (4), error
(11/27/2023 12:15:31 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:15:31 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:15:31 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:15:31 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:15:31 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 4), Player Index (1)
(11/27/2023 12:15:31 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:15:31 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:15:31 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:15:31 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:15:31 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:15:31 AM) |> method; (PlayerClass.UpdatePoints) [504]
(11/27/2023 12:15:31 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:15:31 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 4)
(11/27/2023 12:15:31 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:15:31 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:15:31 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:15:31 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:15:31 AM) |> method; (PlayerClass.UpdatePoints) [586]
(11/27/2023 12:15:31 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:15:31 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 4)
(11/27/2023 12:15:31 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:15:31 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-10)
(11/27/2023 12:15:31 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (8)
(11/27/2023 12:15:31 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (12), Added; (red 4; 4 Points)
(11/27/2023 12:15:31 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:15:31 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 4)
(11/27/2023 12:15:31 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 1), Value; (0)
(11/27/2023 12:15:31 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:15:31 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (2), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 0
(11/27/2023 12:15:31 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:15:31 AM) |> method; (GameLogicClass.CardPlay), c_card; (red) (reverse), reverce, True
(11/27/2023 12:15:31 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:15:31 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:15:31 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:15:31 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:15:31 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, reverse), Player Index (0)
(11/27/2023 12:15:31 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:15:31 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:15:31 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:15:31 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:15:31 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:15:31 AM) |> method; (PlayerClass.UpdatePoints) [548]
(11/27/2023 12:15:31 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:15:32 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red reverse)
(11/27/2023 12:15:32 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:15:32 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:15:32 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (695, 695)
(11/27/2023 12:15:32 AM) |> method; (PlayerClass.UpdatePoints) [596]
(11/27/2023 12:15:32 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:15:32 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red reverse)
(11/27/2023 12:15:32 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:15:32 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (0)
(11/27/2023 12:15:32 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-1)
(11/27/2023 12:15:32 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (13), Added; (red reverse; 20 Points)
(11/27/2023 12:15:32 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:15:32 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (3)
Player1CardCount; (1)

    PlusAmount (0)
Discard Pile Count; (13), Top Card; (red, reverse)
(11/27/2023 12:15:32 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (3)
Player1CardCount; (2)

    PlusAmount (0)
Discard Pile Count; (13), Top Card; (red, reverse)
(11/27/2023 12:15:32 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:15:32 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (0)
(11/27/2023 12:15:32 AM) |> method; (GameLogicClass.CardPlay), c_card; (red) (2), error
(11/27/2023 12:15:32 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:15:32 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:15:32 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:15:32 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:15:32 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 2), Player Index (1)
(11/27/2023 12:15:32 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:15:32 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:15:32 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:15:32 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:15:32 AM) |> method; (PlayerClass.UpdatePoints) [590]
(11/27/2023 12:15:32 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:15:32 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 2)
(11/27/2023 12:15:32 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:15:32 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:15:32 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (695, 695)
(11/27/2023 12:15:32 AM) |> method; (PlayerClass.UpdatePoints) [606]
(11/27/2023 12:15:32 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:15:32 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 2)
(11/27/2023 12:15:32 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:15:32 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (4)
(11/27/2023 12:15:32 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (2)
(11/27/2023 12:15:32 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (14), Added; (red 2; 2 Points)
(11/27/2023 12:15:32 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:15:32 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 2)
(11/27/2023 12:15:32 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:15:32 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (1), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 0
(11/27/2023 12:15:32 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:15:32 AM) |> method; (GameLogicClass.CardPlay), c_card; (red) (+2), add, 2
(11/27/2023 12:15:32 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:15:32 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:15:32 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:15:32 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 90), Value; (33)
(11/27/2023 12:15:32 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:15:32 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:15:32 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 89), Value; (21)
(11/27/2023 12:15:32 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:15:32 AM) |> method; (GameLogicClass.AddCards), cards added; (AddCards Index: 0 AddCards Index: 0 )
(11/27/2023 12:15:32 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:15:32 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:15:32 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, +2), Player Index (0)
(11/27/2023 12:15:32 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:15:32 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:15:32 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:15:32 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:15:32 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:15:32 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:15:32 AM) |> method; (PlayerClass.UpdatePoints) [632]
(11/27/2023 12:15:32 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:15:32 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red +2)
(11/27/2023 12:15:32 AM) |> method; (WinConditonForm.WinConditonForm) ---------------------------------------------------
(11/27/2023 12:15:32 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (2)
Player1CardCount; (1)

    PlusAmount (0)
Discard Pile Count; (15), Top Card; (red, +2)
(11/27/2023 12:16:03 AM) |> ----------------------------------------------
(11/27/2023 12:16:03 AM) |> Method; (SetupFormClass.SetupFormClass) [Start Up]
(11/27/2023 12:16:07 AM) |> method; (SetupFormClass.twoPlayersBT_Click) [2v2; false, PlayerAmount = 2]
(11/27/2023 12:16:08 AM) |> method; (SetupFormClass.doneBT_Click)
(11/27/2023 12:16:08 AM) |> method; (Form_PauseMenu.Form_PauseMenu)
(11/27/2023 12:16:08 AM) |> method; (GameForm.GameForm), Width: (1440), Height; (870), Size; ({Width=1440, Height=870})
(11/27/2023 12:16:08 AM) |> method; (PlayerClass.PlayerClass) [Player init], is AI (False), Team; (1)
(11/27/2023 12:16:08 AM) |> method; (AIClass.AIClass()) [AI INIT]
(11/27/2023 12:16:08 AM) |> method; (PlayerClass.PlayerClass) [Player init], is AI (True), Team; (1)
(11/27/2023 12:16:08 AM) |> method; (GameLogicClass.MakeDrawPile)
(11/27/2023 12:16:08 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (0),
    NormalPoints; (0),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_0.png)
(11/27/2023 12:16:08 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (1),
    NormalPoints; (1),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_1.png)
(11/27/2023 12:16:08 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (2),
    NormalPoints; (2),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_2.png)
(11/27/2023 12:16:08 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (3),
    NormalPoints; (3),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_3.png)
(11/27/2023 12:16:08 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (4),
    NormalPoints; (4),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_4.png)
(11/27/2023 12:16:08 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (5),
    NormalPoints; (5),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_5.png)
(11/27/2023 12:16:08 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (6),
    NormalPoints; (6),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_6.png)
(11/27/2023 12:16:08 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (7),
    NormalPoints; (7),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_7.png)
(11/27/2023 12:16:08 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (8),
    NormalPoints; (8),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_8.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (9),
    NormalPoints; (9),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_9.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (+),
    NormalPoints; (10),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_+2.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (r),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_reverse.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (s),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_skip.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (0),
    NormalPoints; (0),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_0.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (1),
    NormalPoints; (1),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_1.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (2),
    NormalPoints; (2),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_2.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (3),
    NormalPoints; (3),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_3.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (4),
    NormalPoints; (4),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_4.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (5),
    NormalPoints; (5),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_5.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (6),
    NormalPoints; (6),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_6.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (7),
    NormalPoints; (7),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_7.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (8),
    NormalPoints; (8),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_8.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (9),
    NormalPoints; (9),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_9.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (+),
    NormalPoints; (10),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_+2.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (r),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_reverse.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (s),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_skip.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (0),
    NormalPoints; (0),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_0.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (1),
    NormalPoints; (1),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_1.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (2),
    NormalPoints; (2),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_2.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (3),
    NormalPoints; (3),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_3.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (4),
    NormalPoints; (4),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_4.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (5),
    NormalPoints; (5),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_5.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (6),
    NormalPoints; (6),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_6.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (7),
    NormalPoints; (7),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_7.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (8),
    NormalPoints; (8),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_8.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (9),
    NormalPoints; (9),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_9.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (+),
    NormalPoints; (10),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_+2.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (r),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_reverse.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (s),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_skip.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (0),
    NormalPoints; (0),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_0.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (1),
    NormalPoints; (1),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_1.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (2),
    NormalPoints; (2),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_2.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (3),
    NormalPoints; (3),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_3.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (4),
    NormalPoints; (4),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_4.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (5),
    NormalPoints; (5),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_5.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (6),
    NormalPoints; (6),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_6.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (7),
    NormalPoints; (7),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_7.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (8),
    NormalPoints; (8),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_8.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (9),
    NormalPoints; (9),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_9.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (+),
    NormalPoints; (10),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_+2.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (r),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_reverse.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (s),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_skip.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (1),
    NormalPoints; (1),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_1.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (2),
    NormalPoints; (2),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_2.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (3),
    NormalPoints; (3),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_3.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (4),
    NormalPoints; (4),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_4.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (5),
    NormalPoints; (5),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_5.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (6),
    NormalPoints; (6),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_6.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (7),
    NormalPoints; (7),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_7.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (8),
    NormalPoints; (8),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_8.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (9),
    NormalPoints; (9),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_9.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (+),
    NormalPoints; (10),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_+2.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (r),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_reverse.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (r),
    NormalNumber; (s),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\red_skip.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (1),
    NormalPoints; (1),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_1.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (2),
    NormalPoints; (2),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_2.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (3),
    NormalPoints; (3),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_3.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (4),
    NormalPoints; (4),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_4.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (5),
    NormalPoints; (5),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_5.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (6),
    NormalPoints; (6),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_6.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (7),
    NormalPoints; (7),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_7.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (8),
    NormalPoints; (8),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_8.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (9),
    NormalPoints; (9),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_9.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (+),
    NormalPoints; (10),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_+2.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (r),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_reverse.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (y),
    NormalNumber; (s),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\yellow_skip.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (1),
    NormalPoints; (1),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_1.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (2),
    NormalPoints; (2),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_2.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (3),
    NormalPoints; (3),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_3.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (4),
    NormalPoints; (4),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_4.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (5),
    NormalPoints; (5),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_5.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (6),
    NormalPoints; (6),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_6.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (7),
    NormalPoints; (7),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_7.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (8),
    NormalPoints; (8),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_8.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (9),
    NormalPoints; (9),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_9.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (+),
    NormalPoints; (10),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_+2.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (r),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_reverse.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (g),
    NormalNumber; (s),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\green_skip.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (1),
    NormalPoints; (1),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_1.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (2),
    NormalPoints; (2),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_2.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (3),
    NormalPoints; (3),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_3.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (4),
    NormalPoints; (4),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_4.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (5),
    NormalPoints; (5),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_5.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (6),
    NormalPoints; (6),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_6.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (7),
    NormalPoints; (7),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_7.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (8),
    NormalPoints; (8),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_8.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (9),
    NormalPoints; (9),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_9.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (+),
    NormalPoints; (10),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_+2.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (r),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_reverse.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (b),
    NormalNumber; (s),
    NormalPoints; (20),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\blue_skip.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (w),
    NormalNumber; (+),
    NormalPoints; (50),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\wild_+4_wild.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (w),
    NormalNumber; (+),
    NormalPoints; (50),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\wild_+4_wild.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (w),
    NormalNumber; (+),
    NormalPoints; (50),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\wild_+4_wild.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (w),
    NormalNumber; (+),
    NormalPoints; (50),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\wild_+4_wild.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (w),
    NormalNumber; (w),
    NormalPoints; (40),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\wild_wild.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (w),
    NormalNumber; (w),
    NormalPoints; (40),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\wild_wild.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (w),
    NormalNumber; (w),
    NormalPoints; (40),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\wild_wild.png)
(11/27/2023 12:16:09 AM) |> method; (CardClass.CardClass) [Card INIT],
    NormalColor; (w),
    NormalNumber; (w),
    NormalPoints; (40),
    Image; (C:\Users\travis\Documents\GitHub\uno\bin\Debug\\small\\wild_wild.png)
(11/27/2023 12:16:09 AM) |> method; (GameLogicClass.Deal)
(11/27/2023 12:16:09 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:16:09 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 107), Value; (32)
(11/27/2023 12:16:09 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:09 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:16:09 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 106), Value; (102)
(11/27/2023 12:16:09 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:09 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:16:09 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 105), Value; (55)
(11/27/2023 12:16:09 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:09 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:16:09 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 104), Value; (20)
(11/27/2023 12:16:09 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:09 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:16:09 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 103), Value; (71)
(11/27/2023 12:16:09 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:09 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:16:09 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 102), Value; (57)
(11/27/2023 12:16:09 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:09 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:16:09 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 101), Value; (29)
(11/27/2023 12:16:09 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:09 AM) |> method; (GameLogicClass.Deal)
(11/27/2023 12:16:09 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:16:09 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 100), Value; (12)
(11/27/2023 12:16:09 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:09 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:16:09 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 99), Value; (7)
(11/27/2023 12:16:09 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:09 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:16:09 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 98), Value; (41)
(11/27/2023 12:16:09 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:09 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:16:09 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 97), Value; (41)
(11/27/2023 12:16:09 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:09 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:16:09 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 96), Value; (90)
(11/27/2023 12:16:09 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:09 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:16:09 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 95), Value; (20)
(11/27/2023 12:16:09 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:09 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:16:09 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 94), Value; (28)
(11/27/2023 12:16:09 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:09 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:16:09 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 93), Value; (78)
(11/27/2023 12:16:09 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:09 AM) |> method; (GameLogicClass.DisplayDrawPile) [drew stuff]
(11/27/2023 12:16:09 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], Gamerules;
    do_DrawtoMatch (False),
    do_Flip (False),
    do_ChianAdds (False),
    do_2v2 (False, teams (1, 1, 3, 4)
    Player Amount (2)
    Card Amount (7)
Player Index; (0), Discard Pile Count; (1), Top Card; (System.Drawing.Bitmap)
(11/27/2023 12:16:09 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:09 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:16:09 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:16:09 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:16:09 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:16:09 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:16:09 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:16:09 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:16:09 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:16:09 AM) |> method; (PlayerClass.UpdatePoints) [101]
(11/27/2023 12:16:09 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:09 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 3)
(11/27/2023 12:16:09 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:09 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 5)
(11/27/2023 12:16:09 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:16:09 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:16:09 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:16:09 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:16:09 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:16:09 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 5)
(11/27/2023 12:16:09 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:16:09 AM) |> method; (PlayerClass.UpdatePoints) [110]
(11/27/2023 12:16:09 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:09 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 3)
(11/27/2023 12:16:09 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:16:09 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-8)
(11/27/2023 12:16:09 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (1)
(11/27/2023 12:16:09 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (1), Added; (blue 3; 3 Points)
(11/27/2023 12:16:09 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:16:09 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (7)
Player1CardCount; (7)

    PlusAmount (0)
Discard Pile Count; (1), Top Card; (blue, 3)
(11/27/2023 12:16:13 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (1)
(11/27/2023 12:16:13 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (1)
(11/27/2023 12:16:13 AM) |> method; (wildFormClass.wildFormClass)
(11/27/2023 12:16:16 AM) |> method; (wildFormClass.redBT_Click) [this.Tag = red]
(11/27/2023 12:16:16 AM) |> method; (GameLogicClass.CardPlay), c_card; (red) (+4_wild), add, 4
(11/27/2023 12:16:16 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:16 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:16:16 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:16:16 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 92), Value; (45)
(11/27/2023 12:16:16 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:16 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:16:16 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 91), Value; (81)
(11/27/2023 12:16:16 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:16 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:16:16 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 90), Value; (9)
(11/27/2023 12:16:16 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:16 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:16:16 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 89), Value; (22)
(11/27/2023 12:16:16 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:16 AM) |> method; (GameLogicClass.AddCards), cards added; (AddCards Index: 1 AddCards Index: 1 AddCards Index: 1 AddCards Index: 1 )
(11/27/2023 12:16:16 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:16:16 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:16:16 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (1), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, +4_wild), Player Index (1)
(11/27/2023 12:16:16 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:16 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:16:16 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:16:16 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:16:16 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:16:16 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:16:16 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:16:16 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:16:16 AM) |> method; (PlayerClass.UpdatePoints) [152]
(11/27/2023 12:16:16 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:16 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red +4_wild)
(11/27/2023 12:16:16 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:16 AM) |> method; (CardClass.SetPBLocation), x, y; (420, 5)
(11/27/2023 12:16:16 AM) |> method; (CardClass.SetPBLocation), x, y; (475, 5)
(11/27/2023 12:16:16 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 5)
(11/27/2023 12:16:16 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:16:16 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:16:16 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:16:16 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:16:16 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:16:16 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 5)
(11/27/2023 12:16:16 AM) |> method; (CardClass.SetPBLocation), x, y; (915, 5)
(11/27/2023 12:16:16 AM) |> method; (CardClass.SetPBLocation), x, y; (970, 5)
(11/27/2023 12:16:16 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (970, 970)
(11/27/2023 12:16:16 AM) |> method; (PlayerClass.UpdatePoints) [242]
(11/27/2023 12:16:16 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:16 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red +4_wild)
(11/27/2023 12:16:16 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:16:16 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (6)
(11/27/2023 12:16:16 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-10)
(11/27/2023 12:16:17 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (2), Added; (red +4_wild; 50 Points)
(11/27/2023 12:16:17 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:16:17 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red +4_wild)
(11/27/2023 12:16:17 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 4), Value; (2)
(11/27/2023 12:16:17 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (4)
(11/27/2023 12:16:17 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (5), Card index; (2), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 4
(11/27/2023 12:16:17 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (4)
(11/27/2023 12:16:17 AM) |> method; (wildFormClass.wildFormClass)
(11/27/2023 12:16:21 AM) |> method; (wildFormClass.redBT_Click) [this.Tag = red]
(11/27/2023 12:16:22 AM) |> method; (GameLogicClass.CardPlay), c_card; (red) (+4_wild), add, 4
(11/27/2023 12:16:22 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:22 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:16:22 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:16:22 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 88), Value; (79)
(11/27/2023 12:16:22 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:22 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:16:22 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 87), Value; (51)
(11/27/2023 12:16:22 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:22 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:16:22 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 86), Value; (1)
(11/27/2023 12:16:22 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:22 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:16:22 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 85), Value; (4)
(11/27/2023 12:16:22 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:22 AM) |> method; (GameLogicClass.AddCards), cards added; (AddCards Index: 0 AddCards Index: 0 AddCards Index: 0 AddCards Index: 0 )
(11/27/2023 12:16:22 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:16:22 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:16:22 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (4), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, +4_wild), Player Index (0)
(11/27/2023 12:16:22 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:22 AM) |> method; (CardClass.SetPBLocation), x, y; (445, 765)
(11/27/2023 12:16:22 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 765)
(11/27/2023 12:16:22 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:16:22 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:16:22 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:16:22 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:16:22 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:16:22 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:16:22 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 765)
(11/27/2023 12:16:22 AM) |> method; (CardClass.SetPBLocation), x, y; (940, 765)
(11/27/2023 12:16:22 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (940, 940)
(11/27/2023 12:16:22 AM) |> method; (PlayerClass.UpdatePoints) [220]
(11/27/2023 12:16:22 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:22 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red +4_wild)
(11/27/2023 12:16:22 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:22 AM) |> method; (CardClass.SetPBLocation), x, y; (445, 5)
(11/27/2023 12:16:22 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 5)
(11/27/2023 12:16:22 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/27/2023 12:16:22 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:16:22 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:16:22 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:16:22 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:16:22 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/27/2023 12:16:22 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 5)
(11/27/2023 12:16:22 AM) |> method; (CardClass.SetPBLocation), x, y; (940, 5)
(11/27/2023 12:16:22 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (940, 940)
(11/27/2023 12:16:22 AM) |> method; (PlayerClass.UpdatePoints) [324]
(11/27/2023 12:16:22 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:22 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red +4_wild)
(11/27/2023 12:16:22 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:16:22 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-6)
(11/27/2023 12:16:22 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (8)
(11/27/2023 12:16:22 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (3), Added; (red +4_wild; 50 Points)
(11/27/2023 12:16:22 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:16:22 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (10)
Player1CardCount; (10)

    PlusAmount (0)
Discard Pile Count; (3), Top Card; (red, +4_wild)
(11/27/2023 12:16:22 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (6)
Player1CardCount; (11)

    PlusAmount (0)
Discard Pile Count; (3), Top Card; (red, +4_wild)
(11/27/2023 12:16:23 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (4)
(11/27/2023 12:16:23 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (4)
(11/27/2023 12:16:23 AM) |> method; (GameLogicClass.CardPlay), c_card; (red) (9), error
(11/27/2023 12:16:23 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:23 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:16:23 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:16:23 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:16:23 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (4), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 9), Player Index (1)
(11/27/2023 12:16:23 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:23 AM) |> method; (CardClass.SetPBLocation), x, y; (475, 765)
(11/27/2023 12:16:23 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:16:23 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:16:23 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:16:23 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:16:23 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:16:24 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:16:24 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:16:24 AM) |> method; (CardClass.SetPBLocation), x, y; (915, 765)
(11/27/2023 12:16:24 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (915, 915)
(11/27/2023 12:16:24 AM) |> method; (PlayerClass.UpdatePoints) [279]
(11/27/2023 12:16:24 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:24 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 9)
(11/27/2023 12:16:24 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:24 AM) |> method; (CardClass.SetPBLocation), x, y; (445, 5)
(11/27/2023 12:16:24 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 5)
(11/27/2023 12:16:24 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/27/2023 12:16:24 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:16:24 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:16:24 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:16:24 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:16:24 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/27/2023 12:16:24 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 5)
(11/27/2023 12:16:24 AM) |> method; (CardClass.SetPBLocation), x, y; (940, 5)
(11/27/2023 12:16:24 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (940, 940)
(11/27/2023 12:16:24 AM) |> method; (PlayerClass.UpdatePoints) [406]
(11/27/2023 12:16:24 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:24 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 9)
(11/27/2023 12:16:24 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:16:24 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (1)
(11/27/2023 12:16:24 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-5)
(11/27/2023 12:16:24 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (4), Added; (red 9; 9 Points)
(11/27/2023 12:16:24 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:16:24 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 9)
(11/27/2023 12:16:24 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 3), Value; (1)
(11/27/2023 12:16:24 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (1)
(11/27/2023 12:16:24 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (4), Card index; (1), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 1
(11/27/2023 12:16:24 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (1)
(11/27/2023 12:16:24 AM) |> method; (GameLogicClass.CardPlay), c_card; (red) (7), error
(11/27/2023 12:16:24 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:24 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:16:24 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:16:24 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:16:24 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (1), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 7), Player Index (0)
(11/27/2023 12:16:24 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:24 AM) |> method; (CardClass.SetPBLocation), x, y; (475, 765)
(11/27/2023 12:16:24 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:16:24 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:16:24 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:16:24 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:16:24 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:16:24 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:16:24 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:16:24 AM) |> method; (CardClass.SetPBLocation), x, y; (915, 765)
(11/27/2023 12:16:24 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (915, 915)
(11/27/2023 12:16:24 AM) |> method; (PlayerClass.UpdatePoints) [338]
(11/27/2023 12:16:24 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:24 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 7)
(11/27/2023 12:16:24 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:24 AM) |> method; (CardClass.SetPBLocation), x, y; (475, 5)
(11/27/2023 12:16:24 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 5)
(11/27/2023 12:16:24 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:16:24 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:16:24 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:16:24 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:16:24 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:16:24 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 5)
(11/27/2023 12:16:24 AM) |> method; (CardClass.SetPBLocation), x, y; (915, 5)
(11/27/2023 12:16:24 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (915, 915)
(11/27/2023 12:16:24 AM) |> method; (PlayerClass.UpdatePoints) [481]
(11/27/2023 12:16:24 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:24 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 7)
(11/27/2023 12:16:24 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:16:24 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-2)
(11/27/2023 12:16:24 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (7)
(11/27/2023 12:16:24 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (5), Added; (red 7; 7 Points)
(11/27/2023 12:16:24 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:16:24 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (9)
Player1CardCount; (9)

    PlusAmount (0)
Discard Pile Count; (5), Top Card; (red, 7)
(11/27/2023 12:16:24 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (9)
Player1CardCount; (10)

    PlusAmount (0)
Discard Pile Count; (5), Top Card; (red, 7)
(11/27/2023 12:16:25 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (1)
(11/27/2023 12:16:25 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (1)
(11/27/2023 12:16:25 AM) |> method; (GameLogicClass.CardPlay), c_card; (red) (5), error
(11/27/2023 12:16:25 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:25 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:16:25 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:16:25 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:16:25 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (1), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 5), Player Index (1)
(11/27/2023 12:16:25 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 765)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 765)
(11/27/2023 12:16:25 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (885, 885)
(11/27/2023 12:16:25 AM) |> method; (PlayerClass.UpdatePoints) [392]
(11/27/2023 12:16:25 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:25 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 5)
(11/27/2023 12:16:25 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (475, 5)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 5)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 5)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (915, 5)
(11/27/2023 12:16:25 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (915, 915)
(11/27/2023 12:16:25 AM) |> method; (PlayerClass.UpdatePoints) [556]
(11/27/2023 12:16:25 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:25 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 5)
(11/27/2023 12:16:25 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:16:25 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (5)
(11/27/2023 12:16:25 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-8)
(11/27/2023 12:16:25 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (6), Added; (red 5; 5 Points)
(11/27/2023 12:16:25 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:16:25 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 5)
(11/27/2023 12:16:25 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 2), Value; (0)
(11/27/2023 12:16:25 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:16:25 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (3), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 0
(11/27/2023 12:16:25 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:16:25 AM) |> method; (GameLogicClass.CardPlay), c_card; (red) (skip), error
(11/27/2023 12:16:25 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:25 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:16:25 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:16:25 AM) |> method; (GameLogicClass.CardClickLogic), In skip
(11/27/2023 12:16:25 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:16:25 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:16:25 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, skip), Player Index (1)
(11/27/2023 12:16:25 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 765)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 765)
(11/27/2023 12:16:25 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (885, 885)
(11/27/2023 12:16:25 AM) |> method; (PlayerClass.UpdatePoints) [446]
(11/27/2023 12:16:25 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:25 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red skip)
(11/27/2023 12:16:25 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 5)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 5)
(11/27/2023 12:16:25 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (885, 885)
(11/27/2023 12:16:25 AM) |> method; (PlayerClass.UpdatePoints) [611]
(11/27/2023 12:16:25 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:25 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red skip)
(11/27/2023 12:16:25 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:16:25 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-3)
(11/27/2023 12:16:25 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-5)
(11/27/2023 12:16:25 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (7), Added; (red skip; 20 Points)
(11/27/2023 12:16:25 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:16:25 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red skip)
(11/27/2023 12:16:25 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 1), Value; (0)
(11/27/2023 12:16:25 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (4)
(11/27/2023 12:16:25 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (2), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 4
(11/27/2023 12:16:25 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (4)
(11/27/2023 12:16:25 AM) |> method; (GameLogicClass.CardPlay), c_card; (red) (3), error
(11/27/2023 12:16:25 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:25 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:16:25 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:16:25 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:16:25 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (4), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 3), Player Index (0)
(11/27/2023 12:16:25 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 765)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:16:25 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 765)
(11/27/2023 12:16:25 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (885, 885)
(11/27/2023 12:16:25 AM) |> method; (PlayerClass.UpdatePoints) [500]
(11/27/2023 12:16:26 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:26 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 3)
(11/27/2023 12:16:26 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:26 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 5)
(11/27/2023 12:16:26 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:16:26 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:16:26 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:16:26 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:16:26 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:16:26 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 5)
(11/27/2023 12:16:26 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:16:26 AM) |> method; (PlayerClass.UpdatePoints) [663]
(11/27/2023 12:16:26 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:26 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 3)
(11/27/2023 12:16:26 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:16:26 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (4)
(11/27/2023 12:16:26 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-7)
(11/27/2023 12:16:26 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (8), Added; (red 3; 3 Points)
(11/27/2023 12:16:26 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:16:26 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (8)
Player1CardCount; (7)

    PlusAmount (0)
Discard Pile Count; (8), Top Card; (red, 3)
(11/27/2023 12:16:26 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (8)
Player1CardCount; (8)

    PlusAmount (0)
Discard Pile Count; (8), Top Card; (red, 3)
(11/27/2023 12:16:26 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (8)
Player1CardCount; (9)

    PlusAmount (0)
Discard Pile Count; (8), Top Card; (red, 3)
(11/27/2023 12:16:26 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (7)
(11/27/2023 12:16:26 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (7)
(11/27/2023 12:16:26 AM) |> method; (GameLogicClass.CardPlay), c_card; (red) (5), error
(11/27/2023 12:16:26 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:26 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:16:26 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:16:26 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:16:26 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (7), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 5), Player Index (1)
(11/27/2023 12:16:26 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:26 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:16:26 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:16:26 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:16:26 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:16:26 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:16:26 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:16:26 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:16:26 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:16:26 AM) |> method; (PlayerClass.UpdatePoints) [549]
(11/27/2023 12:16:26 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:26 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 5)
(11/27/2023 12:16:26 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:26 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 5)
(11/27/2023 12:16:26 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:16:26 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:16:26 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:16:26 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:16:26 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:16:26 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 5)
(11/27/2023 12:16:26 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:16:26 AM) |> method; (PlayerClass.UpdatePoints) [715]
(11/27/2023 12:16:27 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:27 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 5)
(11/27/2023 12:16:27 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:16:27 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (2)
(11/27/2023 12:16:27 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (7)
(11/27/2023 12:16:27 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (9), Added; (red 5; 5 Points)
(11/27/2023 12:16:27 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:16:27 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 5)
(11/27/2023 12:16:27 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (5)
(11/27/2023 12:16:27 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (1), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 5
(11/27/2023 12:16:27 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (5)
(11/27/2023 12:16:27 AM) |> method; (GameLogicClass.CardPlay), c_card; (red) (+2), add, 2
(11/27/2023 12:16:27 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:27 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:16:27 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:16:27 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 84), Value; (9)
(11/27/2023 12:16:27 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:27 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:16:27 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 83), Value; (72)
(11/27/2023 12:16:27 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:27 AM) |> method; (GameLogicClass.AddCards), cards added; (AddCards Index: 0 AddCards Index: 0 )
(11/27/2023 12:16:27 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:16:27 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:16:27 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (5), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, +2), Player Index (0)
(11/27/2023 12:16:27 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:27 AM) |> method; (CardClass.SetPBLocation), x, y; (475, 765)
(11/27/2023 12:16:27 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:16:27 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:16:27 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:16:27 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:16:27 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:16:27 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:16:27 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:16:27 AM) |> method; (CardClass.SetPBLocation), x, y; (915, 765)
(11/27/2023 12:16:27 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (915, 915)
(11/27/2023 12:16:27 AM) |> method; (PlayerClass.UpdatePoints) [604]
(11/27/2023 12:16:27 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:27 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red +2)
(11/27/2023 12:16:27 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:27 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/27/2023 12:16:27 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:16:27 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:16:27 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:16:27 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:16:27 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/27/2023 12:16:27 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:16:27 AM) |> method; (PlayerClass.UpdatePoints) [757]
(11/27/2023 12:16:27 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:27 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red +2)
(11/27/2023 12:16:27 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:16:27 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-7)
(11/27/2023 12:16:27 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-3)
(11/27/2023 12:16:27 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (10), Added; (red +2; 10 Points)
(11/27/2023 12:16:27 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:16:27 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (9)
Player1CardCount; (6)

    PlusAmount (0)
Discard Pile Count; (10), Top Card; (red, +2)
(11/27/2023 12:16:27 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (7)
Player1CardCount; (7)

    PlusAmount (0)
Discard Pile Count; (10), Top Card; (red, +2)
(11/27/2023 12:16:28 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (6)
(11/27/2023 12:16:28 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (6)
(11/27/2023 12:16:28 AM) |> method; (GameLogicClass.CardPlay), c_card; (red) (1), error
(11/27/2023 12:16:28 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:28 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:16:28 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:16:29 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:16:29 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (6), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 1), Player Index (1)
(11/27/2023 12:16:29 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:29 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 765)
(11/27/2023 12:16:29 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:16:29 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:16:29 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:16:29 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:16:29 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:16:29 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:16:29 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 765)
(11/27/2023 12:16:29 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (885, 885)
(11/27/2023 12:16:29 AM) |> method; (PlayerClass.UpdatePoints) [658]
(11/27/2023 12:16:29 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:29 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 1)
(11/27/2023 12:16:29 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:29 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/27/2023 12:16:29 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:16:29 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:16:29 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:16:29 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:16:29 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/27/2023 12:16:29 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:16:29 AM) |> method; (PlayerClass.UpdatePoints) [799]
(11/27/2023 12:16:29 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:29 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 1)
(11/27/2023 12:16:29 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:16:29 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (2)
(11/27/2023 12:16:29 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-8)
(11/27/2023 12:16:29 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (11), Added; (red 1; 1 Points)
(11/27/2023 12:16:29 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:16:29 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (red 1)
(11/27/2023 12:16:29 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (5)
(11/27/2023 12:16:29 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (1), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 5
(11/27/2023 12:16:29 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (5)
(11/27/2023 12:16:29 AM) |> method; (GameLogicClass.CardPlay), c_card; (green) (1), error
(11/27/2023 12:16:29 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:29 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:16:29 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:16:29 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:16:29 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (5), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 1), Player Index (0)
(11/27/2023 12:16:29 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:29 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 765)
(11/27/2023 12:16:29 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:16:29 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:16:29 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:16:29 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:16:29 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:16:29 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:16:29 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 765)
(11/27/2023 12:16:29 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (885, 885)
(11/27/2023 12:16:29 AM) |> method; (PlayerClass.UpdatePoints) [712]
(11/27/2023 12:16:29 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:29 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 1)
(11/27/2023 12:16:29 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:29 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:16:29 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:16:29 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:16:29 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:16:29 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:16:29 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:16:29 AM) |> method; (PlayerClass.UpdatePoints) [840]
(11/27/2023 12:16:29 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:29 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 1)
(11/27/2023 12:16:29 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:16:29 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (6)
(11/27/2023 12:16:29 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-8)
(11/27/2023 12:16:29 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (12), Added; (green 1; 1 Points)
(11/27/2023 12:16:29 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:16:29 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (8)
Player1CardCount; (5)

    PlusAmount (0)
Discard Pile Count; (12), Top Card; (green, 1)
(11/27/2023 12:16:29 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (8)
Player1CardCount; (6)

    PlusAmount (0)
Discard Pile Count; (12), Top Card; (green, 1)
(11/27/2023 12:16:30 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:16:30 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (0)
(11/27/2023 12:16:30 AM) |> method; (GameLogicClass.CardPlay), c_card; (green) (6), error
(11/27/2023 12:16:30 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:30 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:16:30 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:16:30 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:16:30 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 6), Player Index (1)
(11/27/2023 12:16:30 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:30 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:16:30 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:16:30 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:16:30 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:16:30 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:16:30 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:16:30 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:16:30 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:16:30 AM) |> method; (PlayerClass.UpdatePoints) [760]
(11/27/2023 12:16:31 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:31 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 6)
(11/27/2023 12:16:31 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:31 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:16:31 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:16:31 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:16:31 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:16:31 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:16:31 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:16:31 AM) |> method; (PlayerClass.UpdatePoints) [881]
(11/27/2023 12:16:31 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:31 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 6)
(11/27/2023 12:16:31 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:16:31 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-2)
(11/27/2023 12:16:31 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-4)
(11/27/2023 12:16:31 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (13), Added; (green 6; 6 Points)
(11/27/2023 12:16:31 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:16:31 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 6)
(11/27/2023 12:16:31 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (3)
(11/27/2023 12:16:31 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (1), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 3
(11/27/2023 12:16:31 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (3)
(11/27/2023 12:16:31 AM) |> method; (GameLogicClass.CardPlay), c_card; (green) (8), error
(11/27/2023 12:16:31 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:31 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:16:31 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:16:31 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:16:31 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (3), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 8), Player Index (0)
(11/27/2023 12:16:31 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:31 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:16:31 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:16:31 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:16:31 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:16:31 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:16:31 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:16:31 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:16:31 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:16:31 AM) |> method; (PlayerClass.UpdatePoints) [808]
(11/27/2023 12:16:31 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:31 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 8)
(11/27/2023 12:16:31 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:31 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:16:31 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:16:31 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:16:31 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:16:31 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:16:31 AM) |> method; (PlayerClass.UpdatePoints) [914]
(11/27/2023 12:16:31 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:31 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 8)
(11/27/2023 12:16:31 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:16:31 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-3)
(11/27/2023 12:16:31 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (6)
(11/27/2023 12:16:31 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (14), Added; (green 8; 8 Points)
(11/27/2023 12:16:31 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:16:31 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (7)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (14), Top Card; (green, 8)
(11/27/2023 12:16:31 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (7)
Player1CardCount; (5)

    PlusAmount (0)
Discard Pile Count; (14), Top Card; (green, 8)
(11/27/2023 12:16:32 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/27/2023 12:16:32 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (2)
(11/27/2023 12:16:32 AM) |> method; (GameLogicClass.CardPlay), c_card; (green) (4), error
(11/27/2023 12:16:32 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:32 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:16:32 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:16:32 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:16:32 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (2), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 4), Player Index (1)
(11/27/2023 12:16:32 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:32 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:16:32 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:16:32 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:16:32 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:16:32 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:16:32 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:16:32 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:16:32 AM) |> method; (PlayerClass.UpdatePoints) [852]
(11/27/2023 12:16:32 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:32 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green 4)
(11/27/2023 12:16:32 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:32 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:16:32 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:16:32 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:16:32 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:16:32 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:16:32 AM) |> method; (PlayerClass.UpdatePoints) [947]
(11/27/2023 12:16:32 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:32 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green 4)
(11/27/2023 12:16:32 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:16:32 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (7)
(11/27/2023 12:16:32 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-8)
(11/27/2023 12:16:32 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (15), Added; (green 4; 4 Points)
(11/27/2023 12:16:32 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:16:32 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green 4)
(11/27/2023 12:16:32 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:16:32 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 82), Value; (13)
(11/27/2023 12:16:32 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:32 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:16:32 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/27/2023 12:16:32 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:32 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:16:32 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:16:32 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:16:32 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:16:32 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:16:32 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:16:32 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:16:32 AM) |> method; (PlayerClass.UpdatePoints) [896]
(11/27/2023 12:16:32 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:32 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green 4)
(11/27/2023 12:16:32 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:32 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:16:32 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:16:33 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:16:33 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:16:33 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:16:33 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:16:33 AM) |> method; (PlayerClass.UpdatePoints) [986]
(11/27/2023 12:16:33 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:33 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green 4)
(11/27/2023 12:16:33 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:16:33 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (15), Added; (Nothing)
(11/27/2023 12:16:33 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:16:33 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (6)
Player1CardCount; (5)

    PlusAmount (0)
Discard Pile Count; (15), Top Card; (green, 4)
(11/27/2023 12:16:33 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (6)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (15), Top Card; (green, 4)
(11/27/2023 12:16:35 AM) |> method; (GameLogicClass.DrawPile_Clicked)
(11/27/2023 12:16:35 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:16:35 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 81), Value; (75)
(11/27/2023 12:16:35 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:35 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:16:35 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (1), add one
(11/27/2023 12:16:35 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:35 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:16:35 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:16:35 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:16:35 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:16:35 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:16:35 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:16:35 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:16:35 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:16:35 AM) |> method; (PlayerClass.UpdatePoints) [960]
(11/27/2023 12:16:35 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:35 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green 4)
(11/27/2023 12:16:35 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:35 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:16:35 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:16:35 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:16:35 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:16:35 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:16:35 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:16:35 AM) |> method; (PlayerClass.UpdatePoints) [1025]
(11/27/2023 12:16:36 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:36 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green 4)
(11/27/2023 12:16:36 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:16:36 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (15), Added; (Nothing)
(11/27/2023 12:16:36 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:16:36 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green 4)
(11/27/2023 12:16:36 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:16:36 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 80), Value; (21)
(11/27/2023 12:16:36 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:36 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:16:36 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one
(11/27/2023 12:16:36 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:36 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:16:36 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:16:36 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:16:36 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:16:36 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:16:36 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:16:36 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:16:36 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:16:36 AM) |> method; (PlayerClass.UpdatePoints) [1024]
(11/27/2023 12:16:36 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:36 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green 4)
(11/27/2023 12:16:36 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:36 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/27/2023 12:16:36 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:16:36 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:16:36 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:16:36 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:16:36 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/27/2023 12:16:36 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:16:36 AM) |> method; (PlayerClass.UpdatePoints) [1071]
(11/27/2023 12:16:36 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:36 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 4)
(11/27/2023 12:16:36 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:16:36 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (15), Added; (Nothing)
(11/27/2023 12:16:36 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:16:36 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (7)
Player1CardCount; (6)

    PlusAmount (0)
Discard Pile Count; (15), Top Card; (green, 4)
(11/27/2023 12:16:36 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (7)
Player1CardCount; (5)

    PlusAmount (0)
Discard Pile Count; (15), Top Card; (green, 4)
(11/27/2023 12:16:37 AM) |> method; (GameLogicClass.DrawPile_Clicked)
(11/27/2023 12:16:37 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:16:37 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 79), Value; (51)
(11/27/2023 12:16:37 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:37 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:16:37 AM) |> method; (GameLogicClass.DrawPileClickLogic), Player index; (1), add one
(11/27/2023 12:16:37 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:37 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 765)
(11/27/2023 12:16:37 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:16:37 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:16:37 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:16:37 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:16:37 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:16:37 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:16:37 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 765)
(11/27/2023 12:16:37 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (885, 885)
(11/27/2023 12:16:37 AM) |> method; (PlayerClass.UpdatePoints) [1096]
(11/27/2023 12:16:38 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:38 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (green 4)
(11/27/2023 12:16:38 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:38 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 5)
(11/27/2023 12:16:38 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:16:38 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:16:38 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:16:38 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:16:38 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 5)
(11/27/2023 12:16:38 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:16:38 AM) |> method; (PlayerClass.UpdatePoints) [1117]
(11/27/2023 12:16:38 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:38 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 4)
(11/27/2023 12:16:38 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:16:38 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (15), Added; (Nothing)
(11/27/2023 12:16:38 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:16:38 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 4)
(11/27/2023 12:16:38 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (5)
(11/27/2023 12:16:38 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (1), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 5
(11/27/2023 12:16:38 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (5)
(11/27/2023 12:16:38 AM) |> method; (GameLogicClass.CardPlay), c_card; (green) (7), error
(11/27/2023 12:16:38 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:38 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:16:38 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:16:38 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:16:38 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (5), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 7), Player Index (0)
(11/27/2023 12:16:38 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:38 AM) |> method; (CardClass.SetPBLocation), x, y; (500, 765)
(11/27/2023 12:16:38 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:16:38 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:16:38 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:16:38 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:16:38 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:16:38 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:16:38 AM) |> method; (CardClass.SetPBLocation), x, y; (885, 765)
(11/27/2023 12:16:38 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (885, 885)
(11/27/2023 12:16:38 AM) |> method; (PlayerClass.UpdatePoints) [1168]
(11/27/2023 12:16:38 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:38 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 7)
(11/27/2023 12:16:38 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:38 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:16:38 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:16:38 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:16:38 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:16:38 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:16:38 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:16:38 AM) |> method; (PlayerClass.UpdatePoints) [1156]
(11/27/2023 12:16:38 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:38 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (green 7)
(11/27/2023 12:16:38 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:16:38 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-2)
(11/27/2023 12:16:38 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-3)
(11/27/2023 12:16:38 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (16), Added; (green 7; 7 Points)
(11/27/2023 12:16:38 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:16:38 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (8)
Player1CardCount; (5)

    PlusAmount (0)
Discard Pile Count; (16), Top Card; (green, 7)
(11/27/2023 12:16:38 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (8)
Player1CardCount; (6)

    PlusAmount (0)
Discard Pile Count; (16), Top Card; (green, 7)
(11/27/2023 12:16:41 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:16:41 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (0)
(11/27/2023 12:16:41 AM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (7), error
(11/27/2023 12:16:41 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:41 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:16:41 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:16:41 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:16:41 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 7), Player Index (1)
(11/27/2023 12:16:41 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:41 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:16:41 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:16:41 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:16:41 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:16:41 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:16:41 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:16:41 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:16:41 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:16:41 AM) |> method; (PlayerClass.UpdatePoints) [1233]
(11/27/2023 12:16:41 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:41 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 7)
(11/27/2023 12:16:41 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:41 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 5)
(11/27/2023 12:16:41 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:16:41 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:16:41 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:16:41 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 5)
(11/27/2023 12:16:41 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:16:41 AM) |> method; (PlayerClass.UpdatePoints) [1195]
(11/27/2023 12:16:41 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:41 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 7)
(11/27/2023 12:16:41 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:16:41 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-3)
(11/27/2023 12:16:41 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (1)
(11/27/2023 12:16:41 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (17), Added; (yellow 7; 7 Points)
(11/27/2023 12:16:41 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:16:41 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 7)
(11/27/2023 12:16:41 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 2), Value; (0)
(11/27/2023 12:16:41 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:16:41 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (3), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 0
(11/27/2023 12:16:41 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:16:41 AM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (7), error
(11/27/2023 12:16:41 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:41 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:16:41 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:16:41 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:16:41 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 7), Player Index (0)
(11/27/2023 12:16:41 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:41 AM) |> method; (CardClass.SetPBLocation), x, y; (530, 765)
(11/27/2023 12:16:41 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:16:41 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:16:41 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:16:41 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:16:41 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:16:41 AM) |> method; (CardClass.SetPBLocation), x, y; (860, 765)
(11/27/2023 12:16:41 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (860, 860)
(11/27/2023 12:16:41 AM) |> method; (PlayerClass.UpdatePoints) [1298]
(11/27/2023 12:16:41 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:41 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 7)
(11/27/2023 12:16:41 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:41 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:16:41 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:16:41 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:16:41 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:16:41 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:16:41 AM) |> method; (PlayerClass.UpdatePoints) [1227]
(11/27/2023 12:16:41 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:41 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 7)
(11/27/2023 12:16:41 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:16:41 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-7)
(11/27/2023 12:16:41 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-3)
(11/27/2023 12:16:41 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (18), Added; (blue 7; 7 Points)
(11/27/2023 12:16:41 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:16:41 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (7)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (18), Top Card; (blue, 7)
(11/27/2023 12:16:41 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (7)
Player1CardCount; (5)

    PlusAmount (0)
Discard Pile Count; (18), Top Card; (blue, 7)
(11/27/2023 12:16:44 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (5)
(11/27/2023 12:16:44 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (5)
(11/27/2023 12:16:44 AM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (skip), error
(11/27/2023 12:16:44 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:44 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:16:44 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:16:44 AM) |> method; (GameLogicClass.CardClickLogic), In skip
(11/27/2023 12:16:44 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:16:44 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:16:44 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (5), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, skip), Player Index (0)
(11/27/2023 12:16:44 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:44 AM) |> method; (CardClass.SetPBLocation), x, y; (555, 765)
(11/27/2023 12:16:44 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:16:44 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:16:44 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:16:44 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:16:44 AM) |> method; (CardClass.SetPBLocation), x, y; (830, 765)
(11/27/2023 12:16:44 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (830, 830)
(11/27/2023 12:16:44 AM) |> method; (PlayerClass.UpdatePoints) [1343]
(11/27/2023 12:16:44 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:44 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue skip)
(11/27/2023 12:16:44 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:44 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:16:44 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:16:44 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:16:44 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:16:44 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:16:44 AM) |> method; (PlayerClass.UpdatePoints) [1259]
(11/27/2023 12:16:44 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:44 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue skip)
(11/27/2023 12:16:44 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:16:44 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-4)
(11/27/2023 12:16:44 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-3)
(11/27/2023 12:16:44 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (19), Added; (blue skip; 20 Points)
(11/27/2023 12:16:44 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:16:44 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (6)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (19), Top Card; (blue, skip)
(11/27/2023 12:16:45 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (1)
(11/27/2023 12:16:45 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (1)
(11/27/2023 12:16:45 AM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (9), error
(11/27/2023 12:16:45 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:45 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:16:45 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:16:45 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:16:45 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (1), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 9), Player Index (1)
(11/27/2023 12:16:45 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:45 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:16:45 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:16:45 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:16:45 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:16:45 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:16:45 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:16:45 AM) |> method; (PlayerClass.UpdatePoints) [1379]
(11/27/2023 12:16:45 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:45 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 9)
(11/27/2023 12:16:45 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:45 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 5)
(11/27/2023 12:16:45 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:16:45 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:16:45 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 5)
(11/27/2023 12:16:45 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:16:45 AM) |> method; (PlayerClass.UpdatePoints) [1291]
(11/27/2023 12:16:45 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:45 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 9)
(11/27/2023 12:16:45 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:16:45 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-1)
(11/27/2023 12:16:45 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (3)
(11/27/2023 12:16:45 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (20), Added; (blue 9; 9 Points)
(11/27/2023 12:16:45 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:16:45 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 9)
(11/27/2023 12:16:45 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 1), Value; (0)
(11/27/2023 12:16:45 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:16:45 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (2), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 0
(11/27/2023 12:16:45 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:16:45 AM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (8), error
(11/27/2023 12:16:45 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:45 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:16:45 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:16:45 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:16:45 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 8), Player Index (0)
(11/27/2023 12:16:45 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:45 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:16:45 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:16:45 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:16:45 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:16:45 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:16:45 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:16:45 AM) |> method; (PlayerClass.UpdatePoints) [1415]
(11/27/2023 12:16:45 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:45 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 8)
(11/27/2023 12:16:45 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:45 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:16:45 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:16:45 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:16:45 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:16:45 AM) |> method; (PlayerClass.UpdatePoints) [1315]
(11/27/2023 12:16:45 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:45 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 8)
(11/27/2023 12:16:45 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:16:45 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (2)
(11/27/2023 12:16:45 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-3)
(11/27/2023 12:16:45 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (21), Added; (blue 8; 8 Points)
(11/27/2023 12:16:45 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:16:45 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (5)
Player1CardCount; (3)

    PlusAmount (0)
Discard Pile Count; (21), Top Card; (blue, 8)
(11/27/2023 12:16:45 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (5)
Player1CardCount; (4)

    PlusAmount (0)
Discard Pile Count; (21), Top Card; (blue, 8)
(11/27/2023 12:16:46 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (2)
(11/27/2023 12:16:46 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (2)
(11/27/2023 12:16:47 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (3)
(11/27/2023 12:16:47 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (3)
(11/27/2023 12:16:47 AM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (5), error
(11/27/2023 12:16:47 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:47 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:16:47 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:16:47 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:16:47 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (3), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 5), Player Index (1)
(11/27/2023 12:16:47 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:47 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:16:47 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:16:47 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:16:47 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:16:47 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:16:47 AM) |> method; (PlayerClass.UpdatePoints) [1446]
(11/27/2023 12:16:47 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:47 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (blue 5)
(11/27/2023 12:16:47 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:47 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 5)
(11/27/2023 12:16:47 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:16:47 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 5)
(11/27/2023 12:16:47 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:16:47 AM) |> method; (PlayerClass.UpdatePoints) [1339]
(11/27/2023 12:16:47 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:47 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 5)
(11/27/2023 12:16:47 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:16:47 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-6)
(11/27/2023 12:16:47 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (6)
(11/27/2023 12:16:47 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (22), Added; (blue 5; 5 Points)
(11/27/2023 12:16:47 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:16:47 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 5)
(11/27/2023 12:16:47 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (1)
(11/27/2023 12:16:47 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (1), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 1
(11/27/2023 12:16:47 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (1)
(11/27/2023 12:16:47 AM) |> method; (GameLogicClass.CardPlay), c_card; (blue) (8), error
(11/27/2023 12:16:47 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:47 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:16:47 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:16:47 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:16:47 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (1), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 8), Player Index (0)
(11/27/2023 12:16:47 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:47 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:16:47 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:16:47 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:16:47 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:16:47 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:16:47 AM) |> method; (PlayerClass.UpdatePoints) [1477]
(11/27/2023 12:16:47 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:47 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (blue 8)
(11/27/2023 12:16:47 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:47 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:16:47 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:16:47 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:16:47 AM) |> method; (PlayerClass.UpdatePoints) [1355]
(11/27/2023 12:16:47 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:47 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (), Top deck (blue 8)
(11/27/2023 12:16:47 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:16:47 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-8)
(11/27/2023 12:16:47 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-10)
(11/27/2023 12:16:47 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (23), Added; (blue 8; 8 Points)
(11/27/2023 12:16:47 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:16:47 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (4)
Player1CardCount; (2)

    PlusAmount (0)
Discard Pile Count; (23), Top Card; (blue, 8)
(11/27/2023 12:16:47 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (4)
Player1CardCount; (3)

    PlusAmount (0)
Discard Pile Count; (23), Top Card; (blue, 8)
(11/27/2023 12:16:48 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (3)
(11/27/2023 12:16:48 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (3)
(11/27/2023 12:16:48 AM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (8), error
(11/27/2023 12:16:48 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:48 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:16:48 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:16:48 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1
(11/27/2023 12:16:48 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (3), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 8), Player Index (1)
(11/27/2023 12:16:48 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:48 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:16:48 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:16:48 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:16:48 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (750, 750)
(11/27/2023 12:16:48 AM) |> method; (PlayerClass.UpdatePoints) [1500]
(11/27/2023 12:16:48 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:48 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 8)
(11/27/2023 12:16:48 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:48 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 5)
(11/27/2023 12:16:48 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 5)
(11/27/2023 12:16:48 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (720, 720)
(11/27/2023 12:16:48 AM) |> method; (PlayerClass.UpdatePoints) [1371]
(11/27/2023 12:16:48 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:48 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 8)
(11/27/2023 12:16:48 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:16:48 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-9)
(11/27/2023 12:16:48 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-9)
(11/27/2023 12:16:48 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (24), Added; (yellow 8; 8 Points)
(11/27/2023 12:16:48 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:16:48 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 8)
(11/27/2023 12:16:48 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 1), Value; (0)
(11/27/2023 12:16:48 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:16:48 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (2), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 0
(11/27/2023 12:16:48 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:16:48 AM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (+2), add, 2
(11/27/2023 12:16:48 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:48 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:16:48 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:16:49 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 78), Value; (60)
(11/27/2023 12:16:49 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:49 AM) |> method; (GameLogicClass.CardClass)
(11/27/2023 12:16:49 AM) |> method; (RandomNumber.Between), Between; (min: 0, max: 77), Value; (36)
(11/27/2023 12:16:49 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:49 AM) |> method; (GameLogicClass.AddCards), cards added; (AddCards Index: 0 AddCards Index: 0 )
(11/27/2023 12:16:49 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:16:49 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0
(11/27/2023 12:16:49 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, +2), Player Index (0)
(11/27/2023 12:16:49 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:49 AM) |> method; (CardClass.SetPBLocation), x, y; (585, 765)
(11/27/2023 12:16:49 AM) |> method; (CardClass.SetPBLocation), x, y; (640, 765)
(11/27/2023 12:16:49 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 765)
(11/27/2023 12:16:49 AM) |> method; (CardClass.SetPBLocation), x, y; (750, 765)
(11/27/2023 12:16:49 AM) |> method; (CardClass.SetPBLocation), x, y; (805, 765)
(11/27/2023 12:16:49 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (805, 805)
(11/27/2023 12:16:49 AM) |> method; (PlayerClass.UpdatePoints) [1531]
(11/27/2023 12:16:49 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:49 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow +2)
(11/27/2023 12:16:49 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:49 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:16:49 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (695, 695)
(11/27/2023 12:16:49 AM) |> method; (PlayerClass.UpdatePoints) [1377]
(11/27/2023 12:16:49 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:49 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow +2)
(11/27/2023 12:16:49 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:16:49 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (6)
(11/27/2023 12:16:49 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (8)
(11/27/2023 12:16:49 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (25), Added; (yellow +2; 10 Points)
(11/27/2023 12:16:49 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:16:49 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (5)
Player1CardCount; (1)

    PlusAmount (0)
Discard Pile Count; (25), Top Card; (yellow, +2)
(11/27/2023 12:16:49 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (False),
    Player0CardCount; (3)
Player1CardCount; (2)

    PlusAmount (0)
Discard Pile Count; (25), Top Card; (yellow, +2)
(11/27/2023 12:16:50 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:16:50 AM) |> method; (GameLogicClass.cardPB_Click), Card Index (0)
(11/27/2023 12:16:50 AM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (reverse), reverce, True
(11/27/2023 12:16:50 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:50 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:16:50 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:16:50 AM) |> method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1
(11/27/2023 12:16:50 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, reverse), Player Index (1)
(11/27/2023 12:16:50 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:50 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:16:50 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:16:50 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:16:50 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:16:50 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:16:50 AM) |> method; (PlayerClass.UpdatePoints) [1542]
(11/27/2023 12:16:50 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:50 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow reverse)
(11/27/2023 12:16:50 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:50 AM) |> method; (CardClass.SetPBLocation), x, y; (695, 5)
(11/27/2023 12:16:50 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (695, 695)
(11/27/2023 12:16:50 AM) |> method; (PlayerClass.UpdatePoints) [1383]
(11/27/2023 12:16:50 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:50 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow reverse)
(11/27/2023 12:16:50 AM) |> method; (PlayerClass.ActivateClick)
(11/27/2023 12:16:50 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-8)
(11/27/2023 12:16:50 AM) |> method; (RandomNumber.Between), Between; (min: -10, max: 10), Value; (-2)
(11/27/2023 12:16:50 AM) |> method; (GameLogicClass.DisplayDiscardPile), Discard Pile Count; (26), Added; (yellow reverse; 20 Points)
(11/27/2023 12:16:50 AM) |> method; (GameLogicClass.DisplayDrawPile) [nothing to do]
(11/27/2023 12:16:50 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow reverse)
(11/27/2023 12:16:50 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:16:50 AM) |> Method; (AIClass.Play()) [AI Play], Current player team; (1), Player e_Hand amount; (1), Card index; (0), Card (e_Hand); (System.Drawing.Bitmap), game.is_Flipped; (False); CardIndex (Hand); 0
(11/27/2023 12:16:50 AM) |> method; (GameLogicClass.FindPictureInList), Card Index; (0)
(11/27/2023 12:16:50 AM) |> method; (GameLogicClass.CardPlay), c_card; (yellow) (6), error
(11/27/2023 12:16:50 AM) |> method; (Extensions.pop), Thing Popped; (uno.CardClass)
(11/27/2023 12:16:50 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:16:50 AM) |> method; (GameLogicClass.AddLogic)
(11/27/2023 12:16:50 AM) |> method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0
(11/27/2023 12:16:50 AM) |> method; (GameLogicClass.CardClickLogic), Card Index; (0), Card Color; (System.Drawing.Bitmap), Top Deck (System.Windows.Forms.PictureBox, SizeMode: StretchImage, 6), Player Index (0)
(11/27/2023 12:16:50 AM) |> method; (PlayerClass.DeactivateClick)
(11/27/2023 12:16:50 AM) |> method; (CardClass.SetPBLocation), x, y; (610, 765)
(11/27/2023 12:16:50 AM) |> method; (CardClass.SetPBLocation), x, y; (665, 765)
(11/27/2023 12:16:50 AM) |> method; (CardClass.SetPBLocation), x, y; (720, 765)
(11/27/2023 12:16:50 AM) |> method; (CardClass.SetPBLocation), x, y; (775, 765)
(11/27/2023 12:16:50 AM) |> method; (PlayerClass.FindCardPosition), Positions x,y (775, 775)
(11/27/2023 12:16:50 AM) |> method; (PlayerClass.UpdatePoints) [1553]
(11/27/2023 12:16:50 AM) |> method; (PlayerClass.DrawCards) [Player.Team == 1 || Game.is_Flipped]
(11/27/2023 12:16:50 AM) |> method; (PlayerClass.EligableCards) [find e_Hand]; eHand; (System.Windows.Forms.PictureBox, SizeMode: StretchImage, System.Windows.Forms.PictureBox, SizeMode: StretchImage, ), Top deck (yellow 6)
(11/27/2023 12:16:50 AM) |> method; (WinConditonForm.WinConditonForm) ---------------------------------------------------
(11/27/2023 12:16:50 AM) |> method; (GameLogicClass.GameLogicClass) [Game INIT], UpdateScreen;
    is_Flipped (False),
    is_Reverced (True),
    Player0CardCount; (4)
Player1CardCount; (1)

    PlusAmount (0)
Discard Pile Count; (27), Top Card; (yellow, 6)
(11/27/2023 12:17:16 AM) |> method; (GameForm.GameForm_FormClosing)
(11/27/2023 12:17:16 AM) |> method; (Form_PauseMenu.closeBT_Click) [closes here??] ---------------------------------------------------
