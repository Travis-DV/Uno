----------------------------------------------, (1/30/2023 10:44:32 PM)
Method; (StartUp), (1/30/2023 10:44:32 PM)
Method; (flipGameBT_Click), (1/30/2023 10:44:38 PM)
Method; (normalGameBT_Click), (1/30/2023 10:44:39 PM)
----------------------------------------------, (2/2/2023 2:48:34 PM)
Method; (StartUp), (2/2/2023 2:48:34 PM)
---------------------------------------------- |> (8/19/2023 6:42:55 PM)
Method; (StartUp) |> (8/19/2023 6:42:55 PM)
---------------------------------------------- |> (8/19/2023 6:43:12 PM)
Method; (StartUp) |> (8/19/2023 6:43:12 PM)
method; (PlayerClass.PlayerClass) [Player init], is AI (False) |> (8/19/2023 6:43:20 PM)
method; (PlayerClass.PlayerClass) [Player init], is AI (True) |> (8/19/2023 6:43:20 PM)
method; (AIClass.AIClass()) [AI INIT] |> (8/19/2023 6:43:20 PM)
method; (GameLogicClass.MakeDrawPile) |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:20 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:21 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:21 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:21 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:21 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:21 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:21 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:21 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:21 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:21 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:21 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:21 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:21 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:21 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:21 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:21 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:21 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:21 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:21 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:21 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:21 PM)
method; (CardClass.CardClass) [Card INIT] |> (8/19/2023 6:43:21 PM)
method; (GameLogicClass.Deal) |> (8/19/2023 6:43:21 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 6:43:21 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 6:43:21 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 6:43:21 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 6:43:21 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 6:43:21 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 6:43:21 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 6:43:21 PM)
method; (GameLogicClass.Deal) |> (8/19/2023 6:43:21 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 6:43:21 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 6:43:21 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 6:43:21 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 6:43:21 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 6:43:21 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 6:43:21 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 6:43:21 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 6:43:21 PM)
method; (GameLogicClass.DisplayDrawPile) [drew stuff] |> (8/19/2023 6:43:21 PM)
method; (GameLogicClass.GameLogicClass) [Game INIT], Gamerules;
                \n\tdo_DrawtoMatch (False),
                \n\tdo_Flip (False),
                \n\tdo_ChianAdds (False),
                \n\tdo_2v2 (False, teams (1, 1, 3, 4)
                \n\tPlayer Amount (2)
                \n\tCard Amount (7)
                \nPlayer Index; (0), Discard Pile Count; (1), Top Card; (uno.CardClass) |> (8/19/2023 6:43:21 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 6:43:21 PM)
method; (CardClass.SetPBLocation), x, y; (770, 945) |> (8/19/2023 6:43:21 PM)
method; (CardClass.SetPBLocation), x, y; (825, 945) |> (8/19/2023 6:43:21 PM)
method; (CardClass.SetPBLocation), x, y; (880, 945) |> (8/19/2023 6:43:21 PM)
method; (CardClass.SetPBLocation), x, y; (935, 945) |> (8/19/2023 6:43:21 PM)
method; (CardClass.SetPBLocation), x, y; (990, 945) |> (8/19/2023 6:43:21 PM)
method; (CardClass.SetPBLocation), x, y; (1045, 945) |> (8/19/2023 6:43:21 PM)
method; (CardClass.SetPBLocation), x, y; (1100, 945) |> (8/19/2023 6:43:21 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (1100, 1100) |> (8/19/2023 6:43:21 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 6:43:21 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 6:43:21 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 6:43:21 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 6:43:21 PM)
method; (CardClass.SetPBLocation), x, y; (770, 5) |> (8/19/2023 6:43:21 PM)
method; (CardClass.SetPBLocation), x, y; (825, 5) |> (8/19/2023 6:43:21 PM)
method; (CardClass.SetPBLocation), x, y; (880, 5) |> (8/19/2023 6:43:21 PM)
method; (CardClass.SetPBLocation), x, y; (935, 5) |> (8/19/2023 6:43:21 PM)
method; (CardClass.SetPBLocation), x, y; (990, 5) |> (8/19/2023 6:43:21 PM)
method; (CardClass.SetPBLocation), x, y; (1045, 5) |> (8/19/2023 6:43:21 PM)
method; (CardClass.SetPBLocation), x, y; (1100, 5) |> (8/19/2023 6:43:21 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (1100, 1100) |> (8/19/2023 6:43:21 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 6:43:21 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 6:43:21 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 6:43:21 PM)
method; (PlayerClass.ActivateClick) |> (8/19/2023 6:43:21 PM)
method; (GameLogicClass.DisplayDiscardPile) |> (8/19/2023 6:43:21 PM)
method; (GameLogicClass.DisplayDrawPile) [nothing to do] |> (8/19/2023 6:43:21 PM)
method; (GameLogicClass.GameLogicClass) [Game INIT], Gamerules;
                \n\tis_Flipped (False),
                \n\tis_Reverced (False),
                \n\tPlayerIndex (0, card amount 7),
                \n\tPlusAmount (0)
                \nDiscard Pile Count; (1), Top Card; (red, 2) |> (8/19/2023 6:43:21 PM)
method; (GameLogicClass.FindPictureInList) |> (8/19/2023 6:43:32 PM)
method; (GameLogicClass.cardPB_Click), Card Index (4) |> (8/19/2023 6:43:32 PM)
method; (GameLogicClass.CardPlay), c_card; (yellow) (2), error |> (8/19/2023 6:43:32 PM)
method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1 |> (8/19/2023 6:43:32 PM)
method; (GameLogicClass.AddLogic) |> (8/19/2023 6:43:32 PM)
method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1 |> (8/19/2023 6:43:32 PM)
method; (GameLogicClass.CardClickLogic), Card Index; (4), Top Deck (yellow, 2), Player Index (1) |> (8/19/2023 6:43:32 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 6:43:32 PM)
method; (CardClass.SetPBLocation), x, y; (795, 945) |> (8/19/2023 6:43:32 PM)
method; (CardClass.SetPBLocation), x, y; (850, 945) |> (8/19/2023 6:43:32 PM)
method; (CardClass.SetPBLocation), x, y; (905, 945) |> (8/19/2023 6:43:32 PM)
method; (CardClass.SetPBLocation), x, y; (960, 945) |> (8/19/2023 6:43:32 PM)
method; (CardClass.SetPBLocation), x, y; (1015, 945) |> (8/19/2023 6:43:32 PM)
method; (CardClass.SetPBLocation), x, y; (1070, 945) |> (8/19/2023 6:43:32 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (1070, 1070) |> (8/19/2023 6:43:32 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 6:43:32 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 6:43:32 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 6:43:32 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 6:43:32 PM)
method; (CardClass.SetPBLocation), x, y; (770, 5) |> (8/19/2023 6:43:32 PM)
method; (CardClass.SetPBLocation), x, y; (825, 5) |> (8/19/2023 6:43:32 PM)
method; (CardClass.SetPBLocation), x, y; (880, 5) |> (8/19/2023 6:43:32 PM)
method; (CardClass.SetPBLocation), x, y; (935, 5) |> (8/19/2023 6:43:32 PM)
method; (CardClass.SetPBLocation), x, y; (990, 5) |> (8/19/2023 6:43:32 PM)
method; (CardClass.SetPBLocation), x, y; (1045, 5) |> (8/19/2023 6:43:32 PM)
method; (CardClass.SetPBLocation), x, y; (1100, 5) |> (8/19/2023 6:43:32 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (1100, 1100) |> (8/19/2023 6:43:32 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 6:43:32 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 6:43:32 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 6:43:32 PM)
method; (PlayerClass.ActivateClick) |> (8/19/2023 6:43:32 PM)
method; (GameLogicClass.DisplayDiscardPile) |> (8/19/2023 6:43:32 PM)
method; (GameLogicClass.DisplayDrawPile) [nothing to do] |> (8/19/2023 6:43:32 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 6:43:32 PM)
method; (GameLogicClass.FindPictureInList) |> (8/19/2023 6:43:32 PM)
Method; (AIClass.Play()) [AI Play], Current player; (uno.PlayerClass), Player e_Hand amount; (2), Card index; (0), Card (e_Hand); (uno.CardClass), game.is_Flipped; (False); Card (Hand); 5 |> (8/19/2023 6:43:32 PM)
method; (GameLogicClass.FindPictureInList) |> (8/19/2023 6:43:32 PM)
method; (GameLogicClass.CardPlay), c_card; (yellow) (+4_wild), add, 4 |> (8/19/2023 6:43:35 PM)
method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0 |> (8/19/2023 6:43:35 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 6:43:35 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 6:43:35 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 6:43:35 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 6:43:35 PM)
method; (GameLogicClass.AddCards), cards added; (AddCards Index: 0 AddCards Index: 0 AddCards Index: 0 AddCards Index: 0 ) |> (8/19/2023 6:43:35 PM)
method; (GameLogicClass.AddLogic) |> (8/19/2023 6:43:35 PM)
method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0 |> (8/19/2023 6:43:35 PM)
method; (GameLogicClass.CardClickLogic), Card Index; (5), Top Deck (yellow, +4_wild), Player Index (0) |> (8/19/2023 6:43:35 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 6:43:35 PM)
method; (CardClass.SetPBLocation), x, y; (685, 945) |> (8/19/2023 6:43:35 PM)
method; (CardClass.SetPBLocation), x, y; (740, 945) |> (8/19/2023 6:43:35 PM)
method; (CardClass.SetPBLocation), x, y; (795, 945) |> (8/19/2023 6:43:35 PM)
method; (CardClass.SetPBLocation), x, y; (850, 945) |> (8/19/2023 6:43:35 PM)
method; (CardClass.SetPBLocation), x, y; (905, 945) |> (8/19/2023 6:43:35 PM)
method; (CardClass.SetPBLocation), x, y; (960, 945) |> (8/19/2023 6:43:35 PM)
method; (CardClass.SetPBLocation), x, y; (1015, 945) |> (8/19/2023 6:43:35 PM)
method; (CardClass.SetPBLocation), x, y; (1070, 945) |> (8/19/2023 6:43:35 PM)
method; (CardClass.SetPBLocation), x, y; (1125, 945) |> (8/19/2023 6:43:35 PM)
method; (CardClass.SetPBLocation), x, y; (1180, 945) |> (8/19/2023 6:43:35 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (1180, 1180) |> (8/19/2023 6:43:35 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 6:43:35 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 6:43:35 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 6:43:35 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 6:43:35 PM)
method; (CardClass.SetPBLocation), x, y; (795, 5) |> (8/19/2023 6:43:35 PM)
method; (CardClass.SetPBLocation), x, y; (850, 5) |> (8/19/2023 6:43:35 PM)
method; (CardClass.SetPBLocation), x, y; (905, 5) |> (8/19/2023 6:43:35 PM)
method; (CardClass.SetPBLocation), x, y; (960, 5) |> (8/19/2023 6:43:35 PM)
method; (CardClass.SetPBLocation), x, y; (1015, 5) |> (8/19/2023 6:43:35 PM)
method; (CardClass.SetPBLocation), x, y; (1070, 5) |> (8/19/2023 6:43:35 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (1070, 1070) |> (8/19/2023 6:43:35 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 6:43:35 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 6:43:35 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 6:43:36 PM)
method; (PlayerClass.ActivateClick) |> (8/19/2023 6:43:36 PM)
method; (GameLogicClass.DisplayDiscardPile) |> (8/19/2023 6:43:36 PM)
method; (GameLogicClass.DisplayDrawPile) [nothing to do] |> (8/19/2023 6:43:36 PM)
method; (GameLogicClass.GameLogicClass) [Game INIT], Gamerules;
                \n\tis_Flipped (False),
                \n\tis_Reverced (False),
                \n\tPlayerIndex (0, card amount 10),
                \n\tPlusAmount (0)
                \nDiscard Pile Count; (3), Top Card; (yellow, +4_wild) |> (8/19/2023 6:43:36 PM)
method; (GameLogicClass.GameLogicClass) [Game INIT], Gamerules;
                \n\tis_Flipped (False),
                \n\tis_Reverced (False),
                \n\tPlayerIndex (0, card amount 10),
                \n\tPlusAmount (0)
                \nDiscard Pile Count; (3), Top Card; (yellow, +4_wild) |> (8/19/2023 6:43:36 PM)
method; (GameLogicClass.FindPictureInList) |> (8/19/2023 6:43:40 PM)
method; (GameLogicClass.cardPB_Click), Card Index (7) |> (8/19/2023 6:43:40 PM)
method; (GameLogicClass.CardPlay), c_card; (yellow) (skip), error |> (8/19/2023 6:43:40 PM)
method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1 |> (8/19/2023 6:43:40 PM)
method; (GameLogicClass.AddLogic) |> (8/19/2023 6:43:40 PM)
method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1 |> (8/19/2023 6:43:41 PM)
method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0 |> (8/19/2023 6:43:41 PM)
method; (GameLogicClass.CardClickLogic), Card Index; (7), Top Deck (yellow, skip), Player Index (0) |> (8/19/2023 6:43:41 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 6:43:41 PM)
method; (CardClass.SetPBLocation), x, y; (715, 945) |> (8/19/2023 6:43:41 PM)
method; (CardClass.SetPBLocation), x, y; (770, 945) |> (8/19/2023 6:43:41 PM)
method; (CardClass.SetPBLocation), x, y; (825, 945) |> (8/19/2023 6:43:41 PM)
method; (CardClass.SetPBLocation), x, y; (880, 945) |> (8/19/2023 6:43:41 PM)
method; (CardClass.SetPBLocation), x, y; (935, 945) |> (8/19/2023 6:43:41 PM)
method; (CardClass.SetPBLocation), x, y; (990, 945) |> (8/19/2023 6:43:41 PM)
method; (CardClass.SetPBLocation), x, y; (1045, 945) |> (8/19/2023 6:43:41 PM)
method; (CardClass.SetPBLocation), x, y; (1100, 945) |> (8/19/2023 6:43:41 PM)
method; (CardClass.SetPBLocation), x, y; (1155, 945) |> (8/19/2023 6:43:41 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (1155, 1155) |> (8/19/2023 6:43:42 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 6:43:42 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 6:43:42 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 6:43:42 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 6:43:42 PM)
method; (CardClass.SetPBLocation), x, y; (795, 5) |> (8/19/2023 6:43:42 PM)
method; (CardClass.SetPBLocation), x, y; (850, 5) |> (8/19/2023 6:43:42 PM)
method; (CardClass.SetPBLocation), x, y; (905, 5) |> (8/19/2023 6:43:42 PM)
method; (CardClass.SetPBLocation), x, y; (960, 5) |> (8/19/2023 6:43:42 PM)
method; (CardClass.SetPBLocation), x, y; (1015, 5) |> (8/19/2023 6:43:42 PM)
method; (CardClass.SetPBLocation), x, y; (1070, 5) |> (8/19/2023 6:43:42 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (1070, 1070) |> (8/19/2023 6:43:42 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 6:43:42 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 6:43:42 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 6:43:42 PM)
method; (PlayerClass.ActivateClick) |> (8/19/2023 6:43:42 PM)
method; (GameLogicClass.DisplayDiscardPile) |> (8/19/2023 6:43:42 PM)
method; (GameLogicClass.DisplayDrawPile) [nothing to do] |> (8/19/2023 6:43:42 PM)
method; (GameLogicClass.GameLogicClass) [Game INIT], Gamerules;
                \n\tis_Flipped (False),
                \n\tis_Reverced (False),
                \n\tPlayerIndex (0, card amount 9),
                \n\tPlusAmount (0)
                \nDiscard Pile Count; (4), Top Card; (yellow, skip) |> (8/19/2023 6:43:42 PM)
method; (GameLogicClass.FindPictureInList) |> (8/19/2023 6:43:43 PM)
method; (GameLogicClass.cardPB_Click), Card Index (4) |> (8/19/2023 6:43:43 PM)
method; (GameLogicClass.CardPlay), c_card; (yellow) (6), error |> (8/19/2023 6:43:43 PM)
method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1 |> (8/19/2023 6:43:43 PM)
method; (GameLogicClass.AddLogic) |> (8/19/2023 6:43:43 PM)
method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1 |> (8/19/2023 6:43:43 PM)
method; (GameLogicClass.CardClickLogic), Card Index; (4), Top Deck (yellow, 6), Player Index (1) |> (8/19/2023 6:43:43 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 6:43:43 PM)
method; (CardClass.SetPBLocation), x, y; (740, 945) |> (8/19/2023 6:43:43 PM)
method; (CardClass.SetPBLocation), x, y; (795, 945) |> (8/19/2023 6:43:43 PM)
method; (CardClass.SetPBLocation), x, y; (850, 945) |> (8/19/2023 6:43:43 PM)
method; (CardClass.SetPBLocation), x, y; (905, 945) |> (8/19/2023 6:43:43 PM)
method; (CardClass.SetPBLocation), x, y; (960, 945) |> (8/19/2023 6:43:43 PM)
method; (CardClass.SetPBLocation), x, y; (1015, 945) |> (8/19/2023 6:43:43 PM)
method; (CardClass.SetPBLocation), x, y; (1070, 945) |> (8/19/2023 6:43:43 PM)
method; (CardClass.SetPBLocation), x, y; (1125, 945) |> (8/19/2023 6:43:43 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (1125, 1125) |> (8/19/2023 6:43:43 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 6:43:43 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 6:43:43 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 6:43:43 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 6:43:43 PM)
method; (CardClass.SetPBLocation), x, y; (795, 5) |> (8/19/2023 6:43:43 PM)
method; (CardClass.SetPBLocation), x, y; (850, 5) |> (8/19/2023 6:43:43 PM)
method; (CardClass.SetPBLocation), x, y; (905, 5) |> (8/19/2023 6:43:43 PM)
method; (CardClass.SetPBLocation), x, y; (960, 5) |> (8/19/2023 6:43:43 PM)
method; (CardClass.SetPBLocation), x, y; (1015, 5) |> (8/19/2023 6:43:43 PM)
method; (CardClass.SetPBLocation), x, y; (1070, 5) |> (8/19/2023 6:43:43 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (1070, 1070) |> (8/19/2023 6:43:43 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 6:43:43 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 6:43:43 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 6:43:43 PM)
method; (PlayerClass.ActivateClick) |> (8/19/2023 6:43:43 PM)
method; (GameLogicClass.DisplayDiscardPile) |> (8/19/2023 6:43:43 PM)
method; (GameLogicClass.DisplayDrawPile) [nothing to do] |> (8/19/2023 6:43:43 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 6:43:43 PM)
method; (GameLogicClass.FindPictureInList) |> (8/19/2023 6:43:43 PM)
Method; (AIClass.Play()) [AI Play], Current player; (uno.PlayerClass), Player e_Hand amount; (1), Card index; (0), Card (e_Hand); (uno.CardClass), game.is_Flipped; (False); Card (Hand); 4 |> (8/19/2023 6:43:43 PM)
method; (GameLogicClass.FindPictureInList) |> (8/19/2023 6:43:43 PM)
method; (GameLogicClass.CardPlay), c_card; (blue) (6), error |> (8/19/2023 6:43:43 PM)
method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0 |> (8/19/2023 6:43:43 PM)
method; (GameLogicClass.AddLogic) |> (8/19/2023 6:43:43 PM)
method; (GameLogicClass.NextPlayer), current; (1), max (2), next player 0 |> (8/19/2023 6:43:43 PM)
method; (GameLogicClass.CardClickLogic), Card Index; (4), Top Deck (blue, 6), Player Index (0) |> (8/19/2023 6:43:43 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 6:43:43 PM)
method; (CardClass.SetPBLocation), x, y; (740, 945) |> (8/19/2023 6:43:43 PM)
method; (CardClass.SetPBLocation), x, y; (795, 945) |> (8/19/2023 6:43:43 PM)
method; (CardClass.SetPBLocation), x, y; (850, 945) |> (8/19/2023 6:43:43 PM)
method; (CardClass.SetPBLocation), x, y; (905, 945) |> (8/19/2023 6:43:43 PM)
method; (CardClass.SetPBLocation), x, y; (960, 945) |> (8/19/2023 6:43:43 PM)
method; (CardClass.SetPBLocation), x, y; (1015, 945) |> (8/19/2023 6:43:43 PM)
method; (CardClass.SetPBLocation), x, y; (1070, 945) |> (8/19/2023 6:43:43 PM)
method; (CardClass.SetPBLocation), x, y; (1125, 945) |> (8/19/2023 6:43:43 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (1125, 1125) |> (8/19/2023 6:43:43 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 6:43:43 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 6:43:43 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 6:43:43 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 6:43:43 PM)
method; (CardClass.SetPBLocation), x, y; (825, 5) |> (8/19/2023 6:43:43 PM)
method; (CardClass.SetPBLocation), x, y; (880, 5) |> (8/19/2023 6:43:43 PM)
method; (CardClass.SetPBLocation), x, y; (935, 5) |> (8/19/2023 6:43:43 PM)
method; (CardClass.SetPBLocation), x, y; (990, 5) |> (8/19/2023 6:43:43 PM)
method; (CardClass.SetPBLocation), x, y; (1045, 5) |> (8/19/2023 6:43:43 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (1045, 1045) |> (8/19/2023 6:43:43 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 6:43:43 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 6:43:43 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 6:43:43 PM)
method; (PlayerClass.ActivateClick) |> (8/19/2023 6:43:43 PM)
method; (GameLogicClass.DisplayDiscardPile) |> (8/19/2023 6:43:43 PM)
method; (GameLogicClass.DisplayDrawPile) [nothing to do] |> (8/19/2023 6:43:43 PM)
method; (GameLogicClass.GameLogicClass) [Game INIT], Gamerules;
                \n\tis_Flipped (False),
                \n\tis_Reverced (False),
                \n\tPlayerIndex (0, card amount 8),
                \n\tPlusAmount (0)
                \nDiscard Pile Count; (6), Top Card; (blue, 6) |> (8/19/2023 6:43:43 PM)
method; (GameLogicClass.GameLogicClass) [Game INIT], Gamerules;
                \n\tis_Flipped (False),
                \n\tis_Reverced (False),
                \n\tPlayerIndex (0, card amount 8),
                \n\tPlusAmount (0)
                \nDiscard Pile Count; (6), Top Card; (blue, 6) |> (8/19/2023 6:43:43 PM)
method; (GameLogicClass.FindPictureInList) |> (8/19/2023 6:44:04 PM)
method; (GameLogicClass.cardPB_Click), Card Index (3) |> (8/19/2023 6:44:04 PM)
method; (GameLogicClass.CardPlay), c_card; (blue) (7), error |> (8/19/2023 6:44:04 PM)
method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1 |> (8/19/2023 6:44:04 PM)
method; (GameLogicClass.AddLogic) |> (8/19/2023 6:44:04 PM)
method; (GameLogicClass.NextPlayer), current; (0), max (2), next player +1 |> (8/19/2023 6:44:04 PM)
method; (GameLogicClass.CardClickLogic), Card Index; (3), Top Deck (blue, 7), Player Index (1) |> (8/19/2023 6:44:04 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 6:44:04 PM)
method; (CardClass.SetPBLocation), x, y; (770, 945) |> (8/19/2023 6:44:04 PM)
method; (CardClass.SetPBLocation), x, y; (825, 945) |> (8/19/2023 6:44:04 PM)
method; (CardClass.SetPBLocation), x, y; (880, 945) |> (8/19/2023 6:44:04 PM)
method; (CardClass.SetPBLocation), x, y; (935, 945) |> (8/19/2023 6:44:04 PM)
method; (CardClass.SetPBLocation), x, y; (990, 945) |> (8/19/2023 6:44:04 PM)
method; (CardClass.SetPBLocation), x, y; (1045, 945) |> (8/19/2023 6:44:04 PM)
method; (CardClass.SetPBLocation), x, y; (1100, 945) |> (8/19/2023 6:44:04 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (1100, 1100) |> (8/19/2023 6:44:04 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 6:44:04 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 6:44:04 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 6:44:04 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 6:44:04 PM)
method; (CardClass.SetPBLocation), x, y; (825, 5) |> (8/19/2023 6:44:04 PM)
method; (CardClass.SetPBLocation), x, y; (880, 5) |> (8/19/2023 6:44:04 PM)
method; (CardClass.SetPBLocation), x, y; (935, 5) |> (8/19/2023 6:44:04 PM)
method; (CardClass.SetPBLocation), x, y; (990, 5) |> (8/19/2023 6:44:04 PM)
method; (CardClass.SetPBLocation), x, y; (1045, 5) |> (8/19/2023 6:44:04 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (1045, 1045) |> (8/19/2023 6:44:04 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 6:44:04 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 6:44:04 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 6:44:04 PM)
method; (PlayerClass.ActivateClick) |> (8/19/2023 6:44:04 PM)
method; (GameLogicClass.DisplayDiscardPile) |> (8/19/2023 6:44:04 PM)
method; (GameLogicClass.DisplayDrawPile) [nothing to do] |> (8/19/2023 6:44:04 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 6:44:04 PM)
method; (GameLogicClass.FindPictureInList) |> (8/19/2023 6:44:04 PM)
Method; (AIClass.Play()) [AI Play], Current player; (uno.PlayerClass), Player e_Hand amount; (4), Card index; (1), Card (e_Hand); (uno.CardClass), game.is_Flipped; (False); Card (Hand); 2 |> (8/19/2023 6:44:04 PM)
method; (GameLogicClass.FindPictureInList) |> (8/19/2023 6:44:04 PM)
method; (GameLogicClass.CardPlay), c_card; (blue) (reverse), reverce, True |> (8/19/2023 6:44:04 PM)
method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0 |> (8/19/2023 6:44:04 PM)
method; (GameLogicClass.AddLogic) |> (8/19/2023 6:44:04 PM)
method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0 |> (8/19/2023 6:44:04 PM)
method; (GameLogicClass.CardClickLogic), Card Index; (2), Top Deck (blue, reverse), Player Index (0) |> (8/19/2023 6:44:04 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 6:44:04 PM)
method; (CardClass.SetPBLocation), x, y; (770, 945) |> (8/19/2023 6:44:04 PM)
method; (CardClass.SetPBLocation), x, y; (825, 945) |> (8/19/2023 6:44:04 PM)
method; (CardClass.SetPBLocation), x, y; (880, 945) |> (8/19/2023 6:44:04 PM)
method; (CardClass.SetPBLocation), x, y; (935, 945) |> (8/19/2023 6:44:04 PM)
method; (CardClass.SetPBLocation), x, y; (990, 945) |> (8/19/2023 6:44:04 PM)
method; (CardClass.SetPBLocation), x, y; (1045, 945) |> (8/19/2023 6:44:04 PM)
method; (CardClass.SetPBLocation), x, y; (1100, 945) |> (8/19/2023 6:44:04 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (1100, 1100) |> (8/19/2023 6:44:04 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 6:44:04 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 6:44:04 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 6:44:04 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 6:44:04 PM)
method; (CardClass.SetPBLocation), x, y; (850, 5) |> (8/19/2023 6:44:04 PM)
method; (CardClass.SetPBLocation), x, y; (905, 5) |> (8/19/2023 6:44:04 PM)
method; (CardClass.SetPBLocation), x, y; (960, 5) |> (8/19/2023 6:44:04 PM)
method; (CardClass.SetPBLocation), x, y; (1015, 5) |> (8/19/2023 6:44:04 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (1015, 1015) |> (8/19/2023 6:44:04 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 6:44:05 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 6:44:05 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 6:44:05 PM)
method; (PlayerClass.ActivateClick) |> (8/19/2023 6:44:05 PM)
method; (GameLogicClass.DisplayDiscardPile) |> (8/19/2023 6:44:05 PM)
method; (GameLogicClass.DisplayDrawPile) [nothing to do] |> (8/19/2023 6:44:05 PM)
method; (GameLogicClass.GameLogicClass) [Game INIT], Gamerules;
                \n\tis_Flipped (False),
                \n\tis_Reverced (True),
                \n\tPlayerIndex (0, card amount 7),
                \n\tPlusAmount (0)
                \nDiscard Pile Count; (8), Top Card; (blue, reverse) |> (8/19/2023 6:44:05 PM)
method; (GameLogicClass.GameLogicClass) [Game INIT], Gamerules;
                \n\tis_Flipped (False),
                \n\tis_Reverced (True),
                \n\tPlayerIndex (0, card amount 7),
                \n\tPlusAmount (0)
                \nDiscard Pile Count; (8), Top Card; (blue, reverse) |> (8/19/2023 6:44:05 PM)
method; (GameLogicClass.FindPictureInList) |> (8/19/2023 6:44:08 PM)
method; (GameLogicClass.cardPB_Click), Card Index (5) |> (8/19/2023 6:44:08 PM)
method; (GameLogicClass.CardPlay), c_card; (blue) (5), error |> (8/19/2023 6:44:08 PM)
method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1 |> (8/19/2023 6:44:08 PM)
method; (GameLogicClass.AddLogic) |> (8/19/2023 6:44:08 PM)
method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1 |> (8/19/2023 6:44:08 PM)
method; (GameLogicClass.CardClickLogic), Card Index; (5), Top Deck (blue, 5), Player Index (1) |> (8/19/2023 6:44:08 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 6:44:08 PM)
method; (CardClass.SetPBLocation), x, y; (795, 945) |> (8/19/2023 6:44:08 PM)
method; (CardClass.SetPBLocation), x, y; (850, 945) |> (8/19/2023 6:44:08 PM)
method; (CardClass.SetPBLocation), x, y; (905, 945) |> (8/19/2023 6:44:08 PM)
method; (CardClass.SetPBLocation), x, y; (960, 945) |> (8/19/2023 6:44:08 PM)
method; (CardClass.SetPBLocation), x, y; (1015, 945) |> (8/19/2023 6:44:08 PM)
method; (CardClass.SetPBLocation), x, y; (1070, 945) |> (8/19/2023 6:44:08 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (1070, 1070) |> (8/19/2023 6:44:08 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 6:44:08 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 6:44:08 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 6:44:08 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 6:44:08 PM)
method; (CardClass.SetPBLocation), x, y; (850, 5) |> (8/19/2023 6:44:08 PM)
method; (CardClass.SetPBLocation), x, y; (905, 5) |> (8/19/2023 6:44:08 PM)
method; (CardClass.SetPBLocation), x, y; (960, 5) |> (8/19/2023 6:44:08 PM)
method; (CardClass.SetPBLocation), x, y; (1015, 5) |> (8/19/2023 6:44:08 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (1015, 1015) |> (8/19/2023 6:44:08 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 6:44:08 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 6:44:08 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 6:44:08 PM)
method; (PlayerClass.ActivateClick) |> (8/19/2023 6:44:08 PM)
method; (GameLogicClass.DisplayDiscardPile) |> (8/19/2023 6:44:08 PM)
method; (GameLogicClass.DisplayDrawPile) [nothing to do] |> (8/19/2023 6:44:08 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 6:44:08 PM)
method; (GameLogicClass.FindPictureInList) |> (8/19/2023 6:44:08 PM)
Method; (AIClass.Play()) [AI Play], Current player; (uno.PlayerClass), Player e_Hand amount; (3), Card index; (0), Card (e_Hand); (uno.CardClass), game.is_Flipped; (False); Card (Hand); 1 |> (8/19/2023 6:44:08 PM)
method; (GameLogicClass.FindPictureInList) |> (8/19/2023 6:44:08 PM)
method; (GameLogicClass.CardPlay), c_card; (green) (5), error |> (8/19/2023 6:44:08 PM)
method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0 |> (8/19/2023 6:44:08 PM)
method; (GameLogicClass.AddLogic) |> (8/19/2023 6:44:08 PM)
method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0 |> (8/19/2023 6:44:08 PM)
method; (GameLogicClass.CardClickLogic), Card Index; (1), Top Deck (green, 5), Player Index (0) |> (8/19/2023 6:44:08 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 6:44:08 PM)
method; (CardClass.SetPBLocation), x, y; (795, 945) |> (8/19/2023 6:44:08 PM)
method; (CardClass.SetPBLocation), x, y; (850, 945) |> (8/19/2023 6:44:08 PM)
method; (CardClass.SetPBLocation), x, y; (905, 945) |> (8/19/2023 6:44:08 PM)
method; (CardClass.SetPBLocation), x, y; (960, 945) |> (8/19/2023 6:44:08 PM)
method; (CardClass.SetPBLocation), x, y; (1015, 945) |> (8/19/2023 6:44:08 PM)
method; (CardClass.SetPBLocation), x, y; (1070, 945) |> (8/19/2023 6:44:08 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (1070, 1070) |> (8/19/2023 6:44:08 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 6:44:08 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 6:44:08 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 6:44:08 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 6:44:08 PM)
method; (CardClass.SetPBLocation), x, y; (880, 5) |> (8/19/2023 6:44:08 PM)
method; (CardClass.SetPBLocation), x, y; (935, 5) |> (8/19/2023 6:44:08 PM)
method; (CardClass.SetPBLocation), x, y; (990, 5) |> (8/19/2023 6:44:08 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (990, 990) |> (8/19/2023 6:44:08 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 6:44:08 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 6:44:08 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 6:44:08 PM)
method; (PlayerClass.ActivateClick) |> (8/19/2023 6:44:08 PM)
method; (GameLogicClass.DisplayDiscardPile) |> (8/19/2023 6:44:08 PM)
method; (GameLogicClass.DisplayDrawPile) [nothing to do] |> (8/19/2023 6:44:08 PM)
method; (GameLogicClass.GameLogicClass) [Game INIT], Gamerules;
                \n\tis_Flipped (False),
                \n\tis_Reverced (True),
                \n\tPlayerIndex (0, card amount 6),
                \n\tPlusAmount (0)
                \nDiscard Pile Count; (10), Top Card; (green, 5) |> (8/19/2023 6:44:08 PM)
method; (GameLogicClass.GameLogicClass) [Game INIT], Gamerules;
                \n\tis_Flipped (False),
                \n\tis_Reverced (True),
                \n\tPlayerIndex (0, card amount 6),
                \n\tPlusAmount (0)
                \nDiscard Pile Count; (10), Top Card; (green, 5) |> (8/19/2023 6:44:08 PM)
method; (GameLogicClass.FindPictureInList) |> (8/19/2023 6:44:12 PM)
method; (GameLogicClass.cardPB_Click), Card Index (5) |> (8/19/2023 6:44:12 PM)
method; (GameLogicClass.FindPictureInList) |> (8/19/2023 6:44:16 PM)
method; (GameLogicClass.cardPB_Click), Card Index (5) |> (8/19/2023 6:44:16 PM)
method; (GameLogicClass.FindPictureInList) |> (8/19/2023 6:44:18 PM)
method; (GameLogicClass.cardPB_Click), Card Index (5) |> (8/19/2023 6:44:18 PM)
method; (GameLogicClass.FindPictureInList) |> (8/19/2023 6:44:20 PM)
method; (GameLogicClass.cardPB_Click), Card Index (4) |> (8/19/2023 6:44:20 PM)
method; (GameLogicClass.CardPlay), c_card; (green) (4), error |> (8/19/2023 6:44:20 PM)
method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1 |> (8/19/2023 6:44:20 PM)
method; (GameLogicClass.AddLogic) |> (8/19/2023 6:44:20 PM)
method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1 |> (8/19/2023 6:44:20 PM)
method; (GameLogicClass.CardClickLogic), Card Index; (4), Top Deck (green, 4), Player Index (1) |> (8/19/2023 6:44:20 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 6:44:20 PM)
method; (CardClass.SetPBLocation), x, y; (825, 945) |> (8/19/2023 6:44:20 PM)
method; (CardClass.SetPBLocation), x, y; (880, 945) |> (8/19/2023 6:44:20 PM)
method; (CardClass.SetPBLocation), x, y; (935, 945) |> (8/19/2023 6:44:20 PM)
method; (CardClass.SetPBLocation), x, y; (990, 945) |> (8/19/2023 6:44:20 PM)
method; (CardClass.SetPBLocation), x, y; (1045, 945) |> (8/19/2023 6:44:20 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (1045, 1045) |> (8/19/2023 6:44:20 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 6:44:20 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 6:44:20 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 6:44:20 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 6:44:20 PM)
method; (CardClass.SetPBLocation), x, y; (880, 5) |> (8/19/2023 6:44:20 PM)
method; (CardClass.SetPBLocation), x, y; (935, 5) |> (8/19/2023 6:44:20 PM)
method; (CardClass.SetPBLocation), x, y; (990, 5) |> (8/19/2023 6:44:20 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (990, 990) |> (8/19/2023 6:44:20 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 6:44:20 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 6:44:20 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 6:44:20 PM)
method; (PlayerClass.ActivateClick) |> (8/19/2023 6:44:20 PM)
method; (GameLogicClass.DisplayDiscardPile) |> (8/19/2023 6:44:20 PM)
method; (GameLogicClass.DisplayDrawPile) [nothing to do] |> (8/19/2023 6:44:20 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 6:44:20 PM)
method; (GameLogicClass.FindPictureInList) |> (8/19/2023 6:44:20 PM)
Method; (AIClass.Play()) [AI Play], Current player; (uno.PlayerClass), Player e_Hand amount; (1), Card index; (0), Card (e_Hand); (uno.CardClass), game.is_Flipped; (False); Card (Hand); 0 |> (8/19/2023 6:44:20 PM)
method; (GameLogicClass.FindPictureInList) |> (8/19/2023 6:44:20 PM)
method; (GameLogicClass.CardPlay), c_card; (green) (7), error |> (8/19/2023 6:44:20 PM)
method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0 |> (8/19/2023 6:44:20 PM)
method; (GameLogicClass.AddLogic) |> (8/19/2023 6:44:20 PM)
method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0 |> (8/19/2023 6:44:20 PM)
method; (GameLogicClass.CardClickLogic), Card Index; (0), Top Deck (green, 7), Player Index (0) |> (8/19/2023 6:44:20 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 6:44:20 PM)
method; (CardClass.SetPBLocation), x, y; (825, 945) |> (8/19/2023 6:44:20 PM)
method; (CardClass.SetPBLocation), x, y; (880, 945) |> (8/19/2023 6:44:20 PM)
method; (CardClass.SetPBLocation), x, y; (935, 945) |> (8/19/2023 6:44:20 PM)
method; (CardClass.SetPBLocation), x, y; (990, 945) |> (8/19/2023 6:44:20 PM)
method; (CardClass.SetPBLocation), x, y; (1045, 945) |> (8/19/2023 6:44:20 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (1045, 1045) |> (8/19/2023 6:44:20 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 6:44:20 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 6:44:20 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 6:44:20 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 6:44:20 PM)
method; (CardClass.SetPBLocation), x, y; (905, 5) |> (8/19/2023 6:44:20 PM)
method; (CardClass.SetPBLocation), x, y; (960, 5) |> (8/19/2023 6:44:20 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (960, 960) |> (8/19/2023 6:44:20 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 6:44:20 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 6:44:20 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 6:44:20 PM)
method; (PlayerClass.ActivateClick) |> (8/19/2023 6:44:20 PM)
method; (GameLogicClass.DisplayDiscardPile) |> (8/19/2023 6:44:20 PM)
method; (GameLogicClass.DisplayDrawPile) [nothing to do] |> (8/19/2023 6:44:20 PM)
method; (GameLogicClass.GameLogicClass) [Game INIT], Gamerules;
                \n\tis_Flipped (False),
                \n\tis_Reverced (True),
                \n\tPlayerIndex (0, card amount 5),
                \n\tPlusAmount (0)
                \nDiscard Pile Count; (12), Top Card; (green, 7) |> (8/19/2023 6:44:20 PM)
method; (GameLogicClass.GameLogicClass) [Game INIT], Gamerules;
                \n\tis_Flipped (False),
                \n\tis_Reverced (True),
                \n\tPlayerIndex (0, card amount 5),
                \n\tPlusAmount (0)
                \nDiscard Pile Count; (12), Top Card; (green, 7) |> (8/19/2023 6:44:20 PM)
method; (GameLogicClass.FindPictureInList) |> (8/19/2023 6:44:21 PM)
method; (GameLogicClass.cardPB_Click), Card Index (3) |> (8/19/2023 6:44:21 PM)
method; (GameLogicClass.CardPlay), c_card; (green) (9), error |> (8/19/2023 6:44:21 PM)
method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1 |> (8/19/2023 6:44:21 PM)
method; (GameLogicClass.AddLogic) |> (8/19/2023 6:44:21 PM)
method; (GameLogicClass.NextPlayer), current; (0), max (2), next player max-1 |> (8/19/2023 6:44:21 PM)
method; (GameLogicClass.CardClickLogic), Card Index; (3), Top Deck (green, 9), Player Index (1) |> (8/19/2023 6:44:21 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 6:44:21 PM)
method; (CardClass.SetPBLocation), x, y; (850, 945) |> (8/19/2023 6:44:21 PM)
method; (CardClass.SetPBLocation), x, y; (905, 945) |> (8/19/2023 6:44:21 PM)
method; (CardClass.SetPBLocation), x, y; (960, 945) |> (8/19/2023 6:44:21 PM)
method; (CardClass.SetPBLocation), x, y; (1015, 945) |> (8/19/2023 6:44:21 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (1015, 1015) |> (8/19/2023 6:44:22 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 6:44:22 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 6:44:22 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 6:44:22 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 6:44:22 PM)
method; (CardClass.SetPBLocation), x, y; (905, 5) |> (8/19/2023 6:44:22 PM)
method; (CardClass.SetPBLocation), x, y; (960, 5) |> (8/19/2023 6:44:22 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (960, 960) |> (8/19/2023 6:44:22 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 6:44:22 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 6:44:22 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 6:44:22 PM)
method; (PlayerClass.ActivateClick) |> (8/19/2023 6:44:22 PM)
method; (GameLogicClass.DisplayDiscardPile) |> (8/19/2023 6:44:22 PM)
method; (GameLogicClass.DisplayDrawPile) [nothing to do] |> (8/19/2023 6:44:22 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 6:44:22 PM)
method; (GameLogicClass.CardClass) |> (8/19/2023 6:44:22 PM)
method; (GameLogicClass.NextPlayer), current; (1), max (2), next player -1 0 |> (8/19/2023 6:44:22 PM)
method; (GameLogicClass.DrawPileClickLogic), Player index; (0), add one |> (8/19/2023 6:44:22 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 6:44:22 PM)
method; (CardClass.SetPBLocation), x, y; (850, 945) |> (8/19/2023 6:44:22 PM)
method; (CardClass.SetPBLocation), x, y; (905, 945) |> (8/19/2023 6:44:22 PM)
method; (CardClass.SetPBLocation), x, y; (960, 945) |> (8/19/2023 6:44:22 PM)
method; (CardClass.SetPBLocation), x, y; (1015, 945) |> (8/19/2023 6:44:22 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (1015, 1015) |> (8/19/2023 6:44:22 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 6:44:22 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 6:44:22 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 6:44:22 PM)
method; (PlayerClass.DeactivateClick) |> (8/19/2023 6:44:22 PM)
method; (CardClass.SetPBLocation), x, y; (880, 5) |> (8/19/2023 6:44:22 PM)
method; (CardClass.SetPBLocation), x, y; (935, 5) |> (8/19/2023 6:44:22 PM)
method; (CardClass.SetPBLocation), x, y; (990, 5) |> (8/19/2023 6:44:22 PM)
method; (PlayerClass.FindCardPosition), Positions x,y (990, 990) |> (8/19/2023 6:44:22 PM)
method; (PlayerClass.UpdatePoints) |> (8/19/2023 6:44:22 PM)
method; (PlayerClass.DrawCards) |> (8/19/2023 6:44:22 PM)
method; (PlayerClass.EligableCards) [find e_Hand]; Top deck ({TopOfDrawPile.Colors[INTis_Flipped]} {TopOfDrawPile.Numbers[INTis_Flipped]}) |> (8/19/2023 6:44:22 PM)
method; (PlayerClass.ActivateClick) |> (8/19/2023 6:44:22 PM)
method; (GameLogicClass.DisplayDiscardPile) |> (8/19/2023 6:44:22 PM)
method; (GameLogicClass.DisplayDrawPile) [nothing to do] |> (8/19/2023 6:44:22 PM)
method; (GameLogicClass.GameLogicClass) [Game INIT], Gamerules;
                \n\tis_Flipped (False),
                \n\tis_Reverced (True),
                \n\tPlayerIndex (0, card amount 4),
                \n\tPlusAmount (0)
                \nDiscard Pile Count; (13), Top Card; (green, 9) |> (8/19/2023 6:44:22 PM)
method; (GameLogicClass.GameLogicClass) [Game INIT], Gamerules;
                \n\tis_Flipped (False),
                \n\tis_Reverced (True),
                \n\tPlayerIndex (0, card amount 4),
                \n\tPlusAmount (0)
                \nDiscard Pile Count; (13), Top Card; (green, 9) |> (8/19/2023 6:44:22 PM)
